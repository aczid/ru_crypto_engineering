%!PS-Adobe-3.1 EPSF-3.0%%Title: RU nederl. wit A4.eps%%Creator: Adobe Illustrator(R) 11%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: Nicolet Pennekamp%%CreationDate: 25-05-2004%%BoundingBox: 0 0 113 144%%HiResBoundingBox: 0 0 112.0987 143.9395%%CropBox: 0 0 112.0987 143.9395%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)%%+ procset Adobe_CoolType_Core (2.23 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors: %%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_ContainsXMP: MainFirst%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 68 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/agm_sethalftone{ 	dup	begin		/_Data load		/Thresholds xdf	end	level3 	{ sethalftone }{		dup /HalftoneType get 3 eq {			sethalftone		} {pop} ifelse	}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ imageDict begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height { 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 	dup type /dicttype eq		{			AGMCORE_tmp			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			AGMCORE_tmp exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	AGMCORE_tmp 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{	/indexed_colorspace_dict AGMCORE_gget dup null ne {		/CSD known	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 216 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_gradientcache 32 dict def/AGMCORE_in_pattern false def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/add_grad{	AGMCORE_gradientcache 3 1 roll put}bdf/exec_grad{	AGMCORE_gradientcache exch get exec}bdf/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&usrshfill /shfill load def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not currentpagedevice/OverrideSeparations known and							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		/AGMCORE_IsSeparationAProcessColor			{			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or			}def		level3 {			/AGMCORE_IsCurrentColor				{				gsave				false setoverprint				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor				currentgray 0 eq 				grestore				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				clonedict				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					currentdict end					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop								[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 xpt					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 xpt						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/currentpagedevice currentpagedevice def/getrampcolor {/indx exch def0 1 NumComp 1 sub {dupSamples exch getdup type /stringtype eq { indx get } ifexchScaling exch get aload pop3 1 rollmul add} forColorSpaceFamily /Separation eq	{	sep	}	{	ColorSpaceFamily /DeviceN eq		{		devn		}		{		setcolor		}ifelse	}ifelse} bind def/sssetbackground { aload pop setcolor } bind def/RadialShade {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/r2 exch def/c2y exch def/c2x exch def/r1 exch def/c1y exch def/c1x exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifc1x c2x eq{c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse}{/slope c2y c1y sub c2x c1x sub div def/theta slope 1 atan defc2x c1x lt c2y c1y ge and { /theta theta 180 sub def} ifc2x c1x lt c2y c1y lt and { /theta theta 180 add def} if}ifelsegsaveclippathc1x c1y translatetheta rotate-90 rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{/max { 2 copy gt { pop } {exch pop} ifelse } bind def/min { 2 copy lt { pop } {exch pop} ifelse } bind deframpdict begin40 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavec1x c1y translatetheta rotate-90 rotate/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def/c1y 0 def/c1x 0 def/c2x 0 defext0 {0 getrampcolorc2y r2 add r1 sub 0.0001 lt{c1x c1y r1 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2y r1 add r2 le{c1x c1y r1 0 360 arcfill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r1 neg def/p1y c1y def/p2x r1 def/p2y c1y defp1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y p1x SS1 div neg def/SS2 90 theta sub dup sin exch cos div def/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y p2x SS2 div neg defr1 r2 gt{/L1maxX p1x yMin p1y sub SS1 div add def/L2maxX p2x yMin p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifc1x c2x sub dup mulc1y c2y sub dup muladd 0.5 exp0 dtransformdup mul exch dup mul add 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if pop/hires exch defhires mul/numpix exch def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} if/xInc c2x c1x sub numsteps div def/yInc c2y c1y sub numsteps div def/rInc r2 r1 sub numsteps div def/cx c1x def/cy c1y def/radius r1 defnewpathxInc 0 eq yInc 0 eq rInc 0 eq and and{0 getrampcolorcx cy radius 0 360 arcstrokeNumSamples 1 sub getrampcolorcx cy radius 72 hires div add 0 360 arc0 setlinewidthstroke}{0numsteps{dupsubsampling { round cvi } ifgetrampcolorcx cy radius 0 360 arc/cx cx xInc add def/cy cy yInc add def/radius radius rInc add defcx cy radius 360 0 arcneofillrampIndxInc add}repeatpop} ifelseext1 {c2y r2 add r1 lt{c2x c2y r2 0 360 arcfill}{c2y r1 add r2 sub 0.0001 le{c2x c2y r2 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r2 neg def/p1y c2y def/p2x r2 def/p2y c2y defp1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y c2y p1x SS1 div sub def/SS2 90 theta sub dup sin exch cos div def/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y c2y p2x SS2 div sub defr1 r2 lt{/L1maxX p1x yMax p1y sub SS1 div add def/L2maxX p2x yMax p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifgrestoregrestoreendendend} ifelse} bind def/GenStrips {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/y2 exch def/x2 exch def/y1 exch def/x1 exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifx1 x2 eq{y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse}{/slope y2 y1 sub x2 x1 sub div def/theta slope 1 atan defx2 x1 lt y2 y1 ge and { /theta theta 180 sub def} ifx2 x1 lt y2 y1 lt and { /theta theta 180 add def} if}ifelsegsaveclippathx1 y1 translatetheta rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{rampdict begin20 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavex1 y1 translatetheta rotate/xStart 0 def/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def/ySpan yMax yMin sub def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defxStart 0 transformxEnd 0 transform3 -1 rollsub dup mul3 1 rollsub dup muladd 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if popmul/numpix exch defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} ifext0 {0 getrampcolorxMin xStart lt{ xMin yMin xMin neg ySpan rectfill } if} if/xInc xEnd xStart sub numsteps div def/x xStart def0numsteps{dupsubsampling { round cvi } ifgetrampcolorx yMin xInc ySpan rectfill/x x xInc add deframpIndxInc add}repeatpopext1 {xMax xEnd gt{ xEnd yMin xMax xEnd sub ySpan rectfill } if} ifgrestoregrestoreendendend} ifelse} bind def}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		6 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get 0 get null eq {					dup /Names get names_index get /name xdf					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq					or or or not {						/AliasedColorants false def						exit					} if				} if			} for			AliasedColorants {				dup begin				/Names new_names def				/AliasedColorants true def				/LookupTables new_LookupTables def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				currentdict /NComponents known not {					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			Names {				AvoidAliasedColorants {					/currentspotalias current_spot_alias def					false set_spot_alias				} if				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				AvoidAliasedColorants {					currentspotalias set_spot_alias				} if				/names_index names_index 1 add def			} forall			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				/setcolor ldf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSD known {			CSD get_csd /Names known {				CSD get_csd begin				currentdict devncs				AGMCORE_host_sep{					4 dict begin					/devnCompCnt Names length def					/NewLookup HiVal 1 add string def					0 1 HiVal {						/tableIndex xdf						Lookup dup type /stringtype eq {							devnCompCnt tableIndex map_index						}{							exec						} ifelse						setdevicencolor						currentgray						tableIndex exch						HiVal mul cvi 						NewLookup 3 1 roll put					} for					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt					end				}{					level3					{					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{					[/Indexed MappedCSA HiVal						[						Lookup dup type /stringtype eq							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx						]cvx					]setcolorspace_opt					}ifelse				} ifelse				end			}{			} ifelse			set_crd		}		{			/MappedCSA CSA map_csa def			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {			begin			CSD get_csd begin			map_indexed_devn			devn			end			end		}{			AGMCORE_gget/Lookup get 4 3 -1 roll map_index			pop setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		1 dict begin		/name xdf		AGMCORE_CSA_cache		{			0 get name eq {				exit			}{				pop			} ifelse		}forall		end		end	}{		pop	} ifelse}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get		dup wrap_paintproc	}if}def/wrap_paintproc{   statusdict /currentfilenameextend known{	  begin		/OldPaintProc /PaintProc load def		/PaintProc		{		  mark exch		  dup /OldPaintProc get stopped		  {closefile restore end} if		  cleartomark		}  def	  end  } {pop} ifelse} def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse	Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	Adobe_AGM_Core begin	/setcustomcolor	{		dup /customcolor_tint exch AGMCORE_gput		current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.23 0%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.23 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.23 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpacking/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel		2 copy known not			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 2 sub 1 index lt				{ pop count 1 sub }			if			dup /argCount exch def			dup 0 gt				{				exch 1 index 2 add 1 roll				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count 1 sub /restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup begin		mark			{				(*) { pop stop } 128 string /Category			resourceforall			}		stopped		cleartomark		currentdict eq dup			{ end }		if		not		}		{ false }	ifelse	def/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end	userdict /Adobe_CoolType_Data 10 dict dup		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end put	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.19 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 25 add dict copy }	{ 25 dict }ifelse putAdobe_CoolType_Utility	begin	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {			((Hex) 57 StartData			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec			} }			{ {			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	currentcolorspace 0 get dup /DeviceCMYK eq {		pop 4	}	{		/DeviceRGB eq {			pop 3		}{			1		} ifelse	} ifelse} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/srcDataStrs xdf	/dstDataStr xdf	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/samplesNeedDecoding		0 0 1 origDecode length 1 sub {			origDecode exch get add		} for		origDecode length 2 div div		dup 1 eq {			/decodeDivisor 2 origBitsPerComponent exp 1 sub def		} if		2 origBitsPerComponent exp 1 sub ne	def	[		0 1 dsCnt 1 sub [			currentdict /origMultipleDataSources get {				dup currentdict /origDataSource get exch get dup type			}{				currentdict /origDataSource get dup type			} ifelse			dup /filetype eq {				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx			}{				/stringtype ne {					/exec cvx				} if				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx			} ifelse		] cvx /for cvx		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [			0 1 Width 1 sub [				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx				currentdict /origMultipleDataSources get {					0 1 dsCnt 1 sub [						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs								BitsPerComponent /decode_image_sample load /exec cvx							} ifelse						} if					] cvx /for cvx				}{					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx							currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 					[						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx								BitsPerComponent /decode_image_sample load /exec cvx								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx							} ifelse						} if					] cvx /forall cvx				} ifelse				currentdict /convProc get /exec cvx				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx					currentdict /convProc get /filter_indexed_devn load ne {						255 /mul cvx /cvi cvx 					} if					/put cvx 				] cvx /for cvx			] cvx /for cvx			currentdict /dstDataStr get		] cvx /if cvx	] cvx bind	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	2 dict begin	dup dup	/dstDataStr exch /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						dstDataStr srcDataStrs devn_alt_datasource /exec cvx						] cvx 0 () /SubFileDecode filter def					/MultipleDataSources false def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA map_csa 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							[							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							dstDataStr srcDataStrs devn_alt_datasource /exec cvx							] cvx						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource [								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								dstDataStr srcDataStrs devn_alt_datasource /exec cvx								] cvx 0 () /SubFileDecode filter def							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get map_csa				}{					/CSD get get_csd /Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin					CSD get_csd begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (RU nederl. wit A4.eps) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2004-03-11T14:33:59Z</xap:CreateDate>
  <xap:ModifyDate>2004-05-25T09:42:42Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>200</xapGImg:width>
     <xapGImg:height>256</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADIAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FX//2Q==</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -143.94 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 143.94 li112.099 143.94 li112.099 0 liclp[1 0 0 1 0 0 ] concat9.19044 88.2271 mo8.9546 89.4004 7.50538 90.981 5.79395 91.1578 cv3.38721 91.2168 1.38135 89.2432 1.26319 87.5909 cv1.17432 86.024 1.28272 85.6207 1.28272 85.6207 cv9.35743 85.8863 li9.3379 86.7779 9.41358 87.2271 9.19044 88.2271 cvcp10.2725 82.8599 mo9.96729 83.565 li1.17432 83.3287 li0.584473 82.5914 li0.00439454 82.6011 li0.00439454 87.9976 li-0.120606 90.4561 2.38428 93.4429 5.74805 93.4332 cv8.89551 93.2627 10.4234 90.2857 10.6329 87.5123 cv10.9708 82.8467 li10.2725 82.8599 lifalse sop/0 [/DeviceCMYK] add_csa0 0 0 0 cmykf3.69581 108.364 mo5.41358 111.793 li5.7876 111.583 li5.59034 110.672 li13.646 107.114 li14.0621 107.619 li14.7574 107.282 li13.2623 104.203 li12.7803 104.417 li12.7901 105.367 li4.88233 108.823 li4.1875 108.295 li3.69581 108.364 lif6.31836 104.761 mo6.31836 105.141 li4.01026 105.616 li2.70557 104.725 2.08936 103.784 1.70557 102.246 cv0.95459 99.2457 1.70557 96.4624 5.62012 95.3741 cv9.74122 94.0821 11.4527 96.7608 12.3379 99.8819 cv12.5933 100.797 12.6133 101.462 12.7608 102.466 cv10.5772 103.072 li10.2823 102.626 li11.1377 101.853 11.4131 100.699 11.1246 99.5933 cv10.7051 97.8985 8.75782 96.9312 7.15772 97.5806 cv8.31202 102.574 li9.2002 102.941 li9.35743 103.423 li7.02686 104.023 li6.87891 103.534 li7.2168 103.017 li5.94483 97.9903 li4.00391 98.1016 2.56788 100.105 2.98438 102.003 cv3.25635 103.216 4.71534 104.593 6.31836 104.761 cvf4.59717 80.5518 mo4.32178 79.9454 4.59717 79.211 5.22657 78.9292 cv5.8335 78.6802 6.56104 78.8506 6.81006 79.3785 cv7.125 80.001 6.81006 80.7193 6.22999 81.1587 cv5.62012 81.4371 4.8921 81.1587 4.59717 80.5518 cvf11.5049 112.519 mo11.2164 111.895 11.4722 111.18 11.9146 110.901 cv12.4654 110.613 13.2754 110.908 13.7344 111.541 cv14 112.146 13.7149 112.896 13.1148 113.142 cv12.4952 113.434 11.7803 113.136 11.5049 112.519 cvf72.5005 136.082 mo72.2252 135.455 72.524 134.741 73.1529 134.462 cv73.8023 134.177 74.524 134.462 74.7828 135.062 cv75.022 135.685 74.7857 136.413 74.1568 136.711 cv73.5464 136.993 72.8189 136.691 72.5005 136.082 cvf7.09522 60.5762 mo5.34131 64.0054 li5.75782 64.15 li6.48877 63.5201 li14.2657 67.5332 li14.1148 68.1792 li14.8096 68.4546 li16.2227 65.4449 li15.7115 65.2056 li15.0035 65.7168 li7.55762 61.7237 li7.47901 60.9175 li7.09522 60.5762 lif11.9346 75.6475 mo11.4527 75.4932 li10.9903 75.8472 li5.1709 74.5982 li13.4986 71.4283 li14.2554 69.5069 li13.6426 69.3628 li13.0787 69.6084 li5.24952 66.4908 li5.19727 65.7432 li4.62647 65.566 li3.64307 68.2676 li4.36133 68.5298 li5.03321 68.1822 li10.5938 70.3492 li1.70264 73.7691 li1.30225 75.1065 li10.6001 77.1553 li11 77.5982 li11.3414 77.7554 li11.9346 75.6475 lif26.3531 129.633 mo26.0093 129.98 24.7007 131.216 23.3536 131.246 cv22.773 131.252 22.2618 131.069 21.7896 130.61 cv21.6519 130.456 li21.2095 130.134 21.0025 129.731 20.9732 129.154 cv20.9634 128.026 21.9239 126.524 22.6548 125.751 cv23.2549 125.141 25.4488 122.836 27.1792 124.394 cv27.4351 124.63 li29.107 126.272 26.8453 129.111 26.3531 129.633 cvcp29.7466 127.64 mo29.7466 127.64 li29.8248 126.174 29.5298 124.918 28.5757 123.938 cv28.438 123.771 li28.3755 123.709 li28.3101 123.669 li28.2642 123.623 li28.1207 123.509 li27.0845 122.607 25.8218 122.309 24.3565 122.473 cv22.7925 122.633 21.3174 123.453 20.3633 124.846 cv18.6851 126.958 18.7012 129.685 20.6915 131.662 cv20.7471 131.701 li20.7374 131.701 li20.711 131.682 li20.7471 131.701 li22.8716 133.475 25.6255 133.387 27.688 131.672 cv28.9068 130.656 29.6578 129.174 29.7466 127.64 cvf42.4244 142.297 mo46.0406 143.091 li46.0826 142.678 li45.2867 142.078 li46.9849 133.554 li47.7945 133.521 li47.8501 132.78 li44.5259 132.187 li44.3912 132.747 li45.2212 133.357 li43.5425 141.593 li42.6607 141.835 li42.4244 142.297 lif70.0025 138.38 mo70.3736 138.396 li71.1138 140.651 li70.1441 141.901 69.2388 142.501 67.6714 142.838 cv64.6324 143.494 61.8824 142.812 60.9839 138.993 cv59.6656 134.842 62.3306 133.19 65.4488 132.282 cv66.4029 132.013 67.0494 132.003 68.0718 131.872 cv68.6421 134.118 li68.1958 134.403 li67.4488 133.498 66.2945 133.213 65.1607 133.456 cv63.4888 133.895 62.439 135.878 63.023 137.511 cv68.0386 136.37 li68.4458 135.458 li68.9371 135.334 li69.4947 137.671 li68.98 137.783 li68.4654 137.462 li63.521 138.635 li63.6099 140.521 65.521 141.937 67.4556 141.543 cv68.7076 141.33 70.1177 139.97 70.0025 138.38 cvf21.7208 117.712 mo21.3272 118.047 li21.3863 118.637 li17.108 122.98 li19.0064 114.303 li17.8062 112.647 li17.3834 113.057 li17.275 113.68 li10.2857 118.532 li9.60987 118.181 li9.19044 118.552 li10.9903 120.889 li11.6001 120.394 li11.669 119.653 li16.4883 116.204 li14.521 125.433 li15.4522 126.485 li22.2618 119.706 li22.8418 119.601 li23.1568 119.397 li21.7208 117.712 lif56.2759 133.619 mo56.2427 134.131 li56.7544 134.481 li57.3511 140.471 li51.7251 133.262 li49.7808 133.075 li49.8433 133.659 li50.2134 134.16 li49.5357 142.694 li48.8208 143.019 li48.814 143.592 li51.6334 143.632 li51.6861 142.838 li51.1939 142.307 li51.5748 136.426 li57.482 143.94 li58.8687 143.93 li58.105 134.521 li58.4263 133.99 li58.4595 133.606 li56.2759 133.619 lif26.6978 135.705 mo26.9634 135.127 li27.7798 135.189 li33.3951 128.771 li33.1197 128.092 li33.5728 127.564 li35.313 128.308 li35.0318 134.685 li38.6275 130.498 li38.4537 130.164 li38.7623 129.947 li41.2867 130.964 li41.2476 131.613 li40.8082 131.826 li39.6705 140.501 li40.2896 141.212 li40.1255 141.727 li37.1529 140.412 li37.3296 139.786 li37.8638 139.658 li38.69 132.819 li33.4146 139.104 li32.3628 138.757 li33.0835 130.869 li28.8121 135.99 li29.189 136.704 li29.0289 137.091 li26.6978 135.705 lif93.4932 124.473 mo93.8331 124.305 li95.3624 126.108 li95.1846 127.705 94.6592 128.659 93.4659 129.741 cv91.1202 131.954 88.3331 132.603 85.5591 129.662 cv82.6216 126.531 84.146 123.754 86.5103 121.522 cv87.1983 120.843 87.7686 120.505 88.6084 119.893 cv90.1944 121.571 li89.9659 122.04 li88.8252 121.627 87.6963 121.941 86.8374 122.715 cv85.5132 123.862 85.5591 126.069 86.8902 127.174 cv90.8174 123.816 li90.712 122.84 li91.0479 122.485 li92.6807 124.102 li92.3135 124.453 li91.6905 124.446 li87.7432 128.115 li88.7295 129.784 91.1651 130.144 92.6475 128.718 cv93.6045 127.908 94.0772 125.974 93.4932 124.473 cvf105.828 71.6544 mo105.828 71.2608 li108.148 70.7623 li109.447 71.7295 110.017 72.6182 110.371 74.1753 cv111.132 77.1978 110.306 79.9815 106.472 81.021 cv102.451 82.2666 100.615 79.6045 99.7842 76.48 cv99.5186 75.5557 99.4991 74.8902 99.3409 73.8672 cv101.552 73.2769 li101.841 73.7295 li100.968 74.48 100.679 75.6441 100.962 76.775 cv101.369 78.4766 103.296 79.4502 104.929 78.8277 cv103.808 73.8047 li102.882 73.4244 li102.759 72.9263 li105.136 72.2867 li105.238 72.7164 li104.9 73.3624 li106.158 78.4112 li108.105 78.3487 109.564 76.3292 109.164 74.4014 cv108.91 73.1724 107.433 71.8345 105.828 71.6544 cvf98.2999 69.6544 mo97.3057 67.5855 96.7452 64.5435 99.4502 63.855 cv101.693 63.2549 103.027 65.399 103.345 67.1202 cv98.2999 69.6544 licp107.093 65.1861 mo104.49 66.4908 li104.482 64.4874 105.007 62.2418 104.791 61.1075 cv104.412 59.481 103.906 59.0484 102.597 57.9664 cv102.224 58.2652 li102.597 58.9239 102.759 58.9205 103.011 59.9009 cv103.355 61.2911 103.316 62.1792 102.972 63.5694 cv102.224 62.15 100.562 61.5796 98.7901 62.0972 cv96.5987 62.6812 95.3428 64.9566 96.3233 67.025 cv98.5049 72.087 li99.2432 71.7657 li99.4307 71.2906 li107.244 67.271 li107.794 67.6382 li108.22 67.4971 li107.093 65.1861 lif101.421 92.0166 mo101.457 83.9126 li100.791 81.7095 li103.564 83.4698 li103.289 83.5386 103.05 83.6338 102.882 83.7715 cv102.587 84.0665 102.587 85.2764 102.542 87.0923 cv111.453 86.9712 li111.623 86.5845 li112.082 86.6041 li112.099 89.794 li111.839 89.7876 li111.447 89.0401 li102.607 89.1876 li102.621 90.1548 102.484 91.584 102.755 91.794 cv102.853 91.899 103.027 92.0005 103.257 92.0792 cv100.925 93.6265 li101.421 92.0166 lif110.757 99.7081 mo111.447 96.0591 li111.033 96.0298 li110.404 96.7671 li101.81 95.2461 li101.732 94.6099 li101.001 94.5513 li100.542 97.8985 li101.084 97.9605 li101.625 97.2984 li109.998 98.7408 li110.287 99.5113 li110.757 99.7081 lif106.96 101.604 mo107.335 101.207 li109.361 102.135 li109.777 103.787 109.709 104.964 108.988 106.475 cv107.539 109.301 105.427 111.189 101.421 109.544 cv97.5264 107.787 97.9542 104.574 99.2627 101.561 cv99.667 100.64 100.06 100.135 100.562 99.2623 cv102.794 100.115 li102.621 100.718 li101.447 100.777 100.601 101.312 100.099 102.354 cv99.2627 104.023 100.562 105.511 102.103 106.718 cv103.64 107.885 106.988 107.38 107.859 105.649 cv108.398 104.485 108.089 102.757 106.96 101.604 cvf104.013 117.004 mo105.867 113.732 li105.451 113.722 li104.673 114.178 li96.7354 109.826 li96.8897 109.203 li96.2139 108.915 li94.9678 111.904 li95.4756 112.165 li96.2237 111.705 li103.611 115.854 li103.677 116.653 li104.013 117.004 lif97.8663 125.236 mo103.027 119.332 li101.919 116.486 li101.185 117.23 li101.185 117.23 101.441 118.414 101.341 119.128 cv101.123 120.555 99.1553 122.276 99.1553 122.276 cv92.4639 116.726 li92.7452 116.014 li92.1416 115.607 li89.835 118.522 li90.4581 118.951 li91.2042 118.61 li97.71 124.06 li97.5811 124.826 li97.8663 125.236 lif79.9361 138.858 mo82.73 137.344 li82.4449 137.003 li81.7066 136.891 li79.7203 132.852 li79.7203 132.852 81.3824 131.662 82.438 131.433 cv82.9624 131.308 83.8013 131.318 83.8013 131.318 cv82.7886 129.272 li82.7886 129.272 82.3072 129.898 81.9527 130.239 cv81.1558 131 79.1402 131.698 79.1402 131.698 cv77.7232 128.741 li77.7232 128.741 79.7007 127.338 80.9693 126.958 cv81.3824 126.836 82.1792 126.682 82.1792 126.682 cv82.1792 126.682 82.2154 126.125 82.3267 125.807 cv82.5132 125.259 83.025 124.479 83.025 124.479 cv74.8384 129.266 li75.0152 129.869 li75.8218 129.862 li79.7691 137.704 li79.5826 138.38 li79.9361 138.858 lif86.2349 59.357 mo61.9966 55.5474 li62.3013 56.2818 62.4888 57.1241 62.4888 57.9698 cv62.4888 61.4351 59.6949 64.2349 56.1968 64.2349 cv56.1451 64.2349 56.0591 64.2286 55.9869 64.2286 cv55.981 64.2286 55.981 64.2286 55.981 64.2286 cv55.9019 64.2286 55.8628 64.2349 55.7837 64.2349 cv52.3345 64.2349 49.6626 61.4351 49.6626 57.9698 cv49.6626 57.1241 49.8433 56.2818 50.1353 55.5474 cv26.0152 59.357 li25.3208 55.2457 24.9732 51.4361 24.9732 48.0264 cv24.9732 46.7969 25.0357 45.6592 25.1177 44.4986 cv39.5357 44.4986 li43.5025 44.4986 43.8306 44.9087 44.0142 45.0953 cv44.2769 45.3379 44.3423 45.9966 43.9781 46.2623 cv43.1158 46.8003 41.7945 47.4395 41.7945 49.3804 cv41.7945 49.4327 41.7945 49.4527 41.7945 49.4883 cv41.7945 51.0489 43.1685 51.6324 46.4537 52.9341 cv47.4009 53.2979 50.7154 54.606 50.7154 54.606 cv51.4039 54.2129 li52.5552 53.6192 55.0171 51.9668 55.0171 49.1412 cv55.0171 48.774 54.9712 48.4888 54.9253 48.2359 cv54.8335 47.8526 54.6792 47.5215 54.5181 47.2393 cv54.5181 47.2295 54.5181 47.2261 54.5181 47.2134 cv53.9937 46.2427 53.3648 45.9478 53.3648 45.9478 cv53.3648 45.9478 53.6724 44.607 55.6138 44.4395 cv55.6197 44.4527 li55.7017 44.4332 55.7574 44.4166 55.8365 44.4166 cv55.8628 44.4166 55.9742 44.4166 55.9869 44.4166 cv56.9615 44.4166 57.6099 45.2198 57.6099 46.1705 cv57.6099 47.3511 56.8531 47.5933 56.8531 49.1412 cv56.8335 51.9668 59.2984 53.6192 60.439 54.2129 cv61.1871 54.606 li61.1871 54.606 64.564 53.2979 65.4888 52.9341 cv68.8189 51.6324 70.1568 51.0489 70.1568 49.4883 cv70.1568 49.4527 70.1568 49.4327 70.1568 49.3804 cv70.1568 47.4395 68.8589 46.8003 68.0123 46.2623 cv67.5865 45.9966 67.6617 45.3379 67.9605 45.0953 cv68.1509 44.9087 68.4918 44.4986 72.3931 44.4986 cv87.1558 44.4986 li87.2452 45.6592 87.3155 46.7969 87.3155 48.0264 cv87.3155 51.4361 86.9361 55.2457 86.2349 59.357 cvcp84.0572 69.0054 mo84.0572 69.0054 li63.6002 59.6519 li70.7925 60.7662 81.2349 62.4087 85.4937 63.0679 cv85.0904 65.0186 84.608 66.9463 84.0572 69.0054 cvcp61.6431 62.9039 mo74.5962 69.0054 li65.6978 69.0054 li61.6431 62.9039 licp80.0347 81.6304 mo76.688 81.6304 67.0328 81.6304 64.4986 81.6304 cv64.4986 79.7256 64.4986 75.336 64.4986 72.8018 cv82.9888 72.8018 li82.1197 75.6475 81.146 78.6011 80.0347 81.6304 cvcp57.9214 69.0054 mo57.9214 64.2022 li61.1216 69.0054 li57.9214 69.0054 licp50.9126 69.0054 mo54.0992 64.2022 li54.0992 69.0054 li50.9126 69.0054 licp78.0279 86.8726 mo77.0152 89.3809 75.9595 91.8038 74.858 94.2496 cv62.5962 94.2496 li60.6988 94.2496 li60.6988 120.584 li59.2984 122.617 58.063 124.243 57.0396 125.357 cv56.7544 125.656 56.2886 126.125 55.9869 126.348 cv55.7183 126.125 55.2925 125.656 54.9908 125.357 cv53.9546 124.243 52.7124 122.617 51.3121 120.584 cv51.3121 94.2496 li49.5152 94.2496 li37.3296 94.2496 li36.2281 91.8038 35.1685 89.3809 34.1988 86.8726 cv34.0054 86.3809 33.8052 85.9058 33.6148 85.4302 cv51.3121 85.4302 li51.3121 72.8018 li55.981 72.8018 li55.9869 72.8018 li60.6988 72.8018 li60.6988 85.4302 li78.6021 85.4302 li78.4214 85.9058 78.2252 86.3809 78.0279 86.8726 cvcp64.4986 114.611 mo64.4986 108.488 64.4986 100.06 64.4986 98.0591 cv66.2164 98.0591 70.2818 98.0591 73.1734 98.0591 cv70.2554 104.233 67.2652 109.944 64.4986 114.611 cvcp47.6402 114.611 mo44.8668 109.944 41.857 104.233 38.9625 98.0591 cv41.8443 98.0591 45.9029 98.0591 47.6402 98.0591 cv47.6402 100.06 47.6402 108.488 47.6402 114.611 cvcp29.2935 72.8018 mo47.6402 72.8018 li47.6402 75.336 47.6402 79.7256 47.6402 81.6304 cv45.1158 81.6304 35.5425 81.6304 32.1919 81.6304 cv31.0748 78.6011 30.15 75.6475 29.2935 72.8018 cvcp50.4537 62.9039 mo46.4078 69.0054 li37.608 69.0054 li50.4537 62.9039 licp28.1988 69.0054 mo27.6412 66.9463 27.1695 65.0186 26.7564 63.0679 cv30.9761 62.4087 41.3228 60.7662 48.5386 59.6519 cv28.1988 69.0054 licp55.981 39.0103 mo55.9869 39.0103 li70.4322 39.0103 84.9029 39.0103 86.2349 39.0103 cv86.3853 39.5743 86.5259 40.1876 86.6275 40.8038 cv72.3931 40.8038 li66.3599 40.8038 63.7769 42.2691 63.7769 45.7935 cv63.7769 46.879 64.3765 48.0494 65.3599 48.8785 cv64.6724 49.1539 61.7798 50.19 61.357 50.377 cv61.0132 49.9834 60.3638 49.3707 60.2759 48.4097 cv60.5611 47.941 61.1871 46.9839 61.1871 45.5972 cv61.1871 43.4297 59.6949 41.2369 55.9019 41.1285 cv54.1509 41.1939 53.0494 41.7085 52.1617 42.4166 cv52.106 42.4791 52.063 42.522 52.0074 42.584 cv50.4332 43.0235 49.4371 44.1119 49.4371 45.5152 cv49.4371 47.0201 li49.4371 47.0201 50.1353 47.0884 50.5318 47.2393 cv51.0367 47.4625 51.233 47.7247 51.3912 47.941 cv51.8238 48.5606 51.4566 49.941 50.5845 50.377 cv50.1783 50.19 47.2828 49.1539 46.5748 48.8785 cv47.5679 48.0494 48.2076 46.879 48.2076 45.7935 cv48.2076 42.2691 45.6011 40.8038 39.5357 40.8038 cv25.6158 40.8038 li25.7437 40.1876 25.8521 39.5743 26.0191 39.0103 cv27.3863 39.0103 41.6666 39.0103 55.981 39.0103 cvcp36.6314 26.3423 mo36.6314 25.1753 37.0113 23.6578 40.3785 23.6578 cv43.1099 23.6578 44.2144 24.0738 44.6832 24.4146 cv44.9058 24.5557 45.2173 24.7886 45.2173 25.9493 cv45.2173 25.9493 45.2173 31.9849 45.2212 35.2007 cv36.6314 35.2007 li36.6314 32.0635 36.6314 26.3423 36.6314 26.3423 cvcp51.9058 15.8189 mo51.9058 16.2447 51.9058 16.6807 51.9058 17.0909 cv49.6626 17.7725 47.775 19.1363 46.5064 21.064 cv45.4634 20.4346 44.1714 20.1495 42.8472 20.0084 cv45.4244 17.9004 48.6236 16.4678 51.9058 15.8189 cvcp49.4498 8.40284 mo50.9644 8.40284 54.8794 8.40284 54.8794 8.40284 cv54.8794 8.40284 54.8794 4.52784 54.8794 2.97364 cv55.3316 2.97364 55.6724 2.97364 55.981 2.97364 cv55.9869 2.97364 li56.3511 2.97364 56.7017 2.97364 57.1578 2.97364 cv57.1578 4.52784 57.1578 8.40284 57.1578 8.40284 cv57.1578 8.40284 61.0884 8.40284 62.6753 8.40284 cv62.6753 9.34717 62.6753 9.83545 62.6753 10.8057 cv61.0884 10.8057 57.1578 10.8057 57.1578 10.8057 cv57.1578 10.8057 57.1578 14.7466 57.1578 16.3267 cv56.7017 16.3267 56.3511 16.3267 55.9869 16.3267 cv55.981 16.3267 li55.6724 16.3267 55.3316 16.3267 54.8794 16.3267 cv54.8794 14.7466 54.8794 10.8057 54.8794 10.8057 cv54.8794 10.8057 50.9644 10.8057 49.4498 10.8057 cv49.4498 9.83545 49.4498 9.34717 49.4498 8.40284 cvcp63.1148 25.9493 mo63.1148 35.2007 li55.9869 35.2007 li55.981 35.2007 li49.0142 35.2007 li49.0044 25.9493 li49.0044 23.2906 50.7642 20.2251 55.981 20.2251 cv55.981 20.2251 55.981 20.2251 55.9869 20.2251 cv61.2984 20.2251 63.1148 23.2906 63.1148 25.9493 cvcp69.2779 20.0084 mo67.9468 20.1495 66.6822 20.4346 65.6128 21.064 cv64.3668 19.1363 62.4849 17.7725 60.0982 17.0909 cv60.0982 16.6807 60.0982 16.2447 60.0982 15.8189 cv63.5113 16.4678 66.7144 17.9004 69.2779 20.0084 cvcp75.5865 26.3423 mo75.5865 26.3423 75.5865 32.0635 75.5865 35.2007 cv66.9107 35.2007 li66.9107 31.9849 66.9107 25.9493 66.9107 25.9493 cv66.9107 24.7886 67.2193 24.5557 67.4224 24.4146 cv67.8951 24.0738 69.0289 23.6578 71.7701 23.6578 cv75.1763 23.6578 75.5865 25.1753 75.5865 26.3423 cvcp89.4874 36.5059 mo89.0284 35.2007 li79.3951 35.2007 li79.3951 26.3423 li79.3951 23.8902 78.1626 21.3135 74.8912 20.3101 cv72.524 17.4415 69.2779 15.0582 65.6197 13.5269 cv65.6197 5.44239 li65.6197 5.44239 61.6919 5.44239 60.0982 5.44239 cv60.0982 3.86866 60.0982 0 60.0982 0 cv55.9869 0 li55.981 0 li51.9058 0 li51.9058 0 51.9058 3.86866 51.9058 5.44239 cv50.4205 5.44239 46.4966 5.44239 46.4966 5.44239 cv46.4966 13.5269 li42.8472 15.0582 39.5552 17.4415 37.2671 20.3101 cv34.0445 21.3135 32.8052 23.8902 32.8052 26.3423 cv32.8052 35.2007 li23.209 35.2007 li22.7925 36.5059 li21.6324 40.0333 21.1207 43.9019 21.1207 48.1182 cv21.1207 61.1534 25.9439 76.4175 30.6607 88.2989 cv37.8208 106.282 47.2828 122.555 52.2037 127.974 cv53.3775 129.147 54.3218 130.18 55.8824 130.243 cv55.9019 130.256 55.9546 130.243 55.981 130.243 cv55.981 130.243 55.981 130.243 55.9869 130.243 cv56.0328 130.243 56.0591 130.256 56.0992 130.243 cv57.7085 130.18 58.6626 129.147 59.813 127.974 cv64.8589 122.555 74.3931 106.282 81.5591 88.2989 cv86.313 76.4175 91.1202 61.1534 91.1202 48.1182 cv91.1202 43.9019 90.6729 40.0333 89.4874 36.5059 cvf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 11.0.0%%For: (Nicolet Pennekamp) (Nies & Partners)%%Title: (RU Beeldmerk wit.eps)%%CreationDate: 25-05-2004 11:42%AI9_DataStream%Gb"-6BlbT4E@CSil9CdlMNH])q62LjLEjl-d\ANK.3u+UGbJgFD+X[oFt<F_Pt(5o%rqhM<JO52f9U!RUt_sr$AANoM;7\-5IgL\%h8aFtI/M7.VuQ5+#A;:)\odGe+&]Pj%t=$JI/(\XDqAjO8oOqPT&jctC[KD^Yb=3hcL@gV:[c$0HiNWZcTco*p\rocO.U;SIK&r\%b7DmJ&q>'&iV*6CVpBR*^Dug4!LWm%2Yb=2hu;d:Nt;"IJUd7\h<fFD]`7fpgNW,$q8lq>o=+4Er%%^DQg_\:BnQ9U`s6kNnaHMN%muH:RqrQ9IG4=OE3LI-f&%;Gc^?1285QBt4r9U=_#@#o<O8j>";1%I*3nOPBaL8RfBWq<h_&_=GoQCGNo7rlK6XT57!WP`*h9N49%41!9fg232J9?4g=FO':3_oI'%0n3/Lmb`K`r\kq5rUTdOQOf]Pri[EkV#J:/]AMM[rUQNqZf\T=#d0.tr1.'#Q,6T$/-k2F^9(IO%ZPTZ*F0V#uRnA35C>Kd*r?"59s5T.NJ,f5uLQ>e+IJ[5Phk,CC7i64Eq9(EUr1CFIZ,T-u-%c-U]A*(Ps7,-)0=7D85H4;-hgbLb%rG<LQ5'q_T()C1fa2g[Yro*8-hn9!;OS7/jGOX9MDPQ8WrUd_6S%!lns1,o&B>8rrnK0sn'9;dGbINVPo.$24&&m4SM`@%H[@,u4%,0E^u&\EQ'UusX[5PTNAcC]Oan='q1Ir+_m3C;H7rVYWDNjICZ$N12oiN*IfYO[/]Ac(C=?f$8X4MUafc107'b]DMH5IbA7r3<C'%mAJjght2-j97,K=^Sc)2rNC\HWO6W%d`/Nh'`V'[p%-r,g7SB<o;D&+s-&MYrj;Umr0pL^rr2D.Gj4CP5Ps)^q<d/#o69*kp@&Tb%52H5%0K7oS;(qFZcX4]CpV*E14l(VVkc=PD^:h5Yn=.aBJ,e76n+O?Mq7FB(e?en`YV">epUq*MeUR%9nsAfa.ecCms%,<0H/ef^%r9<Y,5M^e`p9&U%5l0p[@74=ug\2f)q,Y,$gHMj2%t>/KrLI6.s)gC+L8@?&e]0ne^]!g%@2]mOp>\)eIt%:jpSYTVdJ`pZa)B\5%r:7H1?f(O2rcIm]35?$=r9`7r"*i:XG"C@Nj8O;pk+7QBrScbrnFs]rr:ZTjD,:0+n3\JHIs(PLhmT*e^M)Q7D/FHiD<JOK`AbuT%/UtH=?XI/G?X=hX0<WX)lZKb`fBG>&LMMD,Y3iX-]"Ybe]"C(1?!Nq-eZ3_UYL6F`$<R5L?.g`LH$ss\H$O\J]XU)=XI!M/ba7QL%?A;+&kq;A"3F3f2NgIfHn`"eBXN,A*a)m9\E:cYEZq#1WI;sCLH#^L,\2_7%(ZciJUl0I00)UF8YSUn3^HTCn^H=`P?_!a\fCO$S%cdR/%&*NrIS_J3aYNo3%XN,WacYKYZk*g%dU&+&SXeo?iX)_@'jeA93>09``8L9[!HuYu'bP=2+ji`%q(\p2F>]S+=`uMD20&(3j%Fh123l'O*OH)dj>S5P4n,bJ>IaXlsC?H(*4N#2#s*A&T"Qsu!tqWOZ5-<u>,E#F\p,+OE,9#r00(dd`.2>5#aCObG!rR#!IF'j>u%I.kZP+1uM#OnH_"].8*iNpacT]BY9s0"L1tCE/GBcIcoZAM<Gu?J'='D6_b@)f;h93btj#9Nt':f"t[Z2IWJ21E<?j^"TikgH"pc%M`L^n<u7JJ:)H.Q,5fo_^Kc6WWtk9dgVrBUe0(lS\`Eg0D(dLVeHKIWOne50rTCZ!h]/fue98lSfD>)jZjlutMQ87EY.Sh@osM1,%eD9HgjE5J"[BpD7cuo0JX8OSN?h\Vil<6s_l06fB_lj7Co9.^TZOY_*r9FLmO-#o-F@MGB#gVJpbq]j#OlVHh8'"FM4@j[Pnd+V+%l3$Y`.F>q"#fmPg+sKH@N.;lK5m!2P7&c:p,YUIlJ2dRT!WmLq6jh!L&?<#Y[E;%FJ7_6G>6/H)8,D>/L;AqEM^RkKY=lTiF=iKl%a`XafeZ0*[*j.>*Z!Rn<'6Z!Xic=d#Mm6W;mJ\[6i330+d1-bn)bV>Ug:?eB<DHfd`*_Fe44j;Af>Zuid9hr1\h6cabNV5#f+Y+L%nm!BPr`Q\&kPb<;lOXZ?nXI=2HK6o6cNGl,+G1!e,r(b%=or2*Cun4DKqVIhEm79AKp?b,FF?H\SkkOB94f_.Pbr)il+7XXfcfS^%6"bM8Pb-c*c%2$2"$'^#o1)^L'cgZTaS6&kr[8,fCl%jBWV<#J`O7$$r:Rkb9[lIZKLHWQQM=hGObni?-9J!`QkgAX,DqR*7!]Om%6'R&GTKmd^67%GQ+BX5/H%Fs$#ae?)Cfa(T'BIBI1f4p>9b96Li3\;(f-kfoi!H,*#bN5gOoPh5-jZLhL6<YdU*p;B.#oo.OciBF%;CT_a+ISC/$IUBFV^.s>`6W5s@LuI0:aJsRL"1n=<K^H]An@s,jAqFK7<U!AQ/l#4?s/4!.J@3o6+6`B,V-/O9=$+oMF?31>*3Qf%_<d?P1'k@[f2Mcpi&F5uZ]h8K3$EQNPWk'@C+\kR^cV%V?/hDchF6\W>3t&]Hr]er>KI[mhdmRP8J<:4*RXaU/I+Ho$,fUNcTt52%Yq3i=!1OXfl[W^aO/`mjVV#<%al_jB7Q/Jp=f-W,(>^Bm[4_%TU$XRQNkR=G^?E2g@UYgdCl60"R@kM9Y^WJ<L3(qooXtf<=4?l[%JfB:524*'Wcuq\pG6(Ir\-K&!DchXu$q_L:j/=/WnK4u"Cp5"#s'go`$_mX!e="iJP@A/LBl.F`G$]+5jF%3XUuGNmGe/oJGsKJm%O.'\df68q)WhS[Xe,[L]OB`!lIkkC7Lc(m*+e:W_gqf8^'Q$n<cBB:N2%c5>**Z,'+ka3c90B"heg>Y*p>/iMDINcK?4CZ<Dbj4l%rSm4"O8o4DO$?h?\(4b]*U*sq77XcLne-8r;(]AlKO/b"M_6ZV(EGH\ne-8rERQHlTbe_.bd,fX_IbfDoAUYmC`(9,?IWD0\SHJ>%(T0=<068]ue^8i$jn[N6!=\&[YEtO&G[FhUOOj2Se.Jn7`a>buk+=dWnH2D<':5P2O^G!/h/iCU([sc8&oFgscaBZ';Phc]6?@6P%GJs?QI\@J584%-g+ZC$2)l^>\,ic1mNpA%Wfg\S],:Tm[QJ>#)D5?<gOdsTaHEQ#=D;,*Z)bl3L2W[E'C84cF9-[W,NHe_f&^rXI%jr70UNO\(>jD#o_(QIWa2WAr:aFJ-Gco7[9)fa)]8Ckdq>VrI+fr4(VgOSZR9n$ee2)b#o)k!gfgg2hCHeHL/Fi/X^aK]Yo3B$Gu%)k!jg>[K=nIG)^9F[KZn=<l_eH>N4:2`b:b]l,[EYn@#:2ArA4#-JsRTcFWB*>51h(?b)334?`bWa7Vm`O5lf[t?!8""(L0VDb=>%U7FE5%A0hnoOHX4jHk$H`HFZ2G#["8A6lR;l`sslF^lV4448L<g1!/'E]`Q$47Y#Xd<F7tqmu<o[W/7[SW0nFOh%$J[@N^%9056h%)gYjML=`k$eYBf*U&CkJ7QMa]?R*EK`3G,3;,@kWhMc53BFLJ]4bcYC38ODV+LV50Vos.Ad$ZjXCi;CXSM9!XCYsL8[I3Ou,N;SP%o&N=/40dMI4Oi;gf.q#h^>^?RlsKJ_ZgJA^V$eeI?gRW1lO_\@3TAMZoX$_NI+jdUQKO'"Hd^C6*:[`=H<Qmb54(p;bB(TL;eL^;%:9iNG([\DmXjsg:m0SP=r`,K>Ef/ED>#&in`G0fQVmW%([D%sU>#)>+?d!.8Vc^'V3A'6d[`@l)-iJ[Fb/=/)6S)D"%5f%&I-8(c%i&[ID(B3FdJa;TP9-pY#Ur`4jn`[p;U;+5DY3jVjK_Vgmq2;O)cX<97+uJapp[O-%pW4>VjaOK4ks%rXjMu%)KMQllS@\F,>_[$>%W54,<Xrcpu'l2]r*peUQ@1N`Y:DY+l`TBUre&#EC0;Y3Tp1ek%mBj*!b=cQIKtUYr8inWkeacVlBi.VY,l!s2lgnr90d^B97k(V>%e!QsS#*I:lpOQpeYK84'9l*PPU^S:"gPYh^'jfEs)":PQ98bY#F'gH_a2Nid!ktn`Za:!J5PMS&Ict9eW&TFX_Mo4N?RtE^g<qQ[%@uIU]HQ#&d1A/gDn)*"D0&D%@r8]4i>3=SjQ%/JersSM[mk4Ec]tB"jHBaVZQV^87EmjLk.d9f*>$aNA4j$@>9;nXV3GJ:MPr/>b%?;L),B41=;e*-naa9CJsHI`SC,ct*D,Yed&p@LbYoA.H*hgYZY6bbl.)L^!r="]l1LtBf9ZQaj(B'%DtHZS:[a'Y[**+Wej1("62%dq(`N#!CbrgR_2.*bG!crTde_,_&[;'%m2YY%0%@lmXjdF;;i!orq+nL-;r\<Y)F_/E7K,>1c8&EVMsl>a)5RFfs="?Uqd^okO*'%O:15Z-l-aS5,A2<oa6(8]b4TYijW/]YKGJ-?5Io.ot&Z=MQc>7c.$%[m??%T,X4RJoPr[O9-1:j32p`H.M)6%*cJjO2;1:O=MJ@:%?VVI%:E&=:ZGeJDB)$`42teISL*2H:JS9uIU*43b)Vdc3YG);Z\o2/hT'OZ9V;J[u4kXe]`R;UB9/b80DB7Rd]K]q.GUD[.rIXN=%d2O=6#b)!K"_kZEBL7;H,Thh+OSoQ/[(Sj4`+pXu"t>+-&@DV3!tjS21AWV(4:g@<J2;aOKe)fD0R,M&klBlKS.KX/&<g33oT22U%Z[tr19D%kj`\W6B%6-:/qA)Rb4YljR=$/k6'S1<.:6MX]&]u55Ed4CqTgHd,*%Z'9^u7W#$QLijoQpf:fnO\10oPp3p:'C5EV@/u%#e);oLnLCH\qIG\CY2i;J)nK:Dcn;3P*.LBC@Y,t0bbTtU![j"+h),Y`MJaLM]l>#+tTaWkWHf.X^gN\2b_@epHn(="jsHI0(>)L%#<C3i]qhhTLi1C/qAKFa[Ci<=+e[!KP.lZ)P7)B&Uq0coiVS#(S9gBk]G>KE5CG\n8q'S]rNKo35pcFrb5Wi62"8=T:':H-0*l3'%13Th:]X+\kP/_9Q:>.KiX__%]$/_Jt3Tf\.]cS'D[#IO<&Z2r%6irK78Ms+m:8r#o\m@rb93o$V[7`(EV*W!E3i9&k\er;,`jc/P%g8;#k6B0FqB>>4E?r[pnR\u(A`$6h6TU`e#D*K41#TJma+`:dhJh!jYa:XgR6:[hh%*TUL'?8[p+Za8(Us:\_LD3iR9W&-\+?:En%FbhGPi0dpg%U\E#itAkS<"eGk">`RSO+`PreWa1RK`"AfE'Y,Z[`3=5MP!\q@$d[_@?K##p`Vn=$50*NQt;'g,6X3\Ql\+SRKc)>%M&qj')$uPd82?#J'.nlN+sa=M@q[^59Oc3kU./V:#^I#5(CW@"(`S=<OT73E6Ba[Aa>b4Xe%Gs_8T7kF(8X+0#Rdoen!05HaNqD'%Q*8&+6U]Wb'[%`+D36'u!cK?pKG@D)A0?3@XY0d-^=;JI=!,`_;hqC^<sJ19K@i5OmZ9YoaI>CmHa8$irY5#Q],HoF7tkuu%e[1E%"na:e7Zk![8_rZ0[b;GFV_"iE=fYM6Sa*.RSb4I<Z\#cRKp=0g?5XG.?,b6W/>?b@H</G#Yc_PGFc.YQ;!"ED(K.jJ:A0k((]U#U%01QeO76F'(G9LBr0PLHrcfsHg6k4I;T!GUcaUGmAM*JnUAnsV;],*]JT4ZuOB%^U=*plh2k>8M/[u^0\RIjnY[ILPJ6BLnh?8e>p%_WX!8&K8gQk]\d*h:%$.RuPWWRRj[)@TGtpHd$+3Ku.6P]YE8)f$,&XOtDa"E,nV<&$3>k###7=*W0CcR:;(h4U[7[l!6KM0n"&:%Qh]"!3+=O+*m_.u#n[".hUh$AArM6;q!mb-qeltZ@F1($/a,(?mkrP^2:Cps4I[D\iUj2]^Q40i@L^%(WQ3-H^J9P;QT=-g])%KQ%E)^hiL3UFeGeSoW^4pmHL3UEP>O`]il#4qPe^rD4c_k$OELs@RSppqb^;bHt`Q!1P7:adJf4-mi+LUWc.3"n)rJ,RkT-58iHDUV[%HDS>Fn%M9[^*'cX%!MCpqN1`CdCVIUb3/\MT3B.q?%9S$oeY6a]gr+b2'2XAYu\N!e`&G-q_]Gl^Ks#\Wl6"qPW^rg)4<WEHRM"'%DL+'-Rpr$4'rX8SrN@0B]ll"f=MNm:!77tTgP_ZuVVAW[bYJ(KFniYApj[i8IZHOWf+.gJ3rBnOf8!<]ES8gdClFm""jLc%f<Pg2%R]`XCF+<TBR]`kt42L&YQ6?m"ikV]sHR&BVW8V)`[5^Y_r'DaSU?as'`\+49+cQurF@Q;_/$p'2%'=R6`Qiq<W8f$Q:Nr*.?-hU6%l5iq"FK\i.ofXM!I`R+Ed$OPJ2*g.gH\q=b2(C5[qU2*D25&8Q\^Y57c`X2h'&VCf3d4qnLFoNa%/PW=p9aMV2\'0TBgJY;Ek3j$%8#kp):%#J\e1"\/gjG(c>(c)db7;(CrSI];jt<TP8uQmTW-KkkIB)Y49?t*bW/E^Bdk3ZK?BOh347F0<;-Cu3@+D;b]_pAM*Od=7%\#pU4k$h]"E([(Dhc"")1ZBk?&1?INTAgT*cZP+%S0e_mHJ90[=>n=Vd0F,+&>KGRd,D-!`1fPo&l>UEU_Ak%^Bj@gR)jqqG1f5l%TG/A&H>sIpQt&S*85Y<Z?-nRA75$?>-Xe.D82*RH]HnF^1a4s3$e5g"ERF"T@dHcJp.34l4I.Sl^l[ap"[T82-R#%:e;8u<19rSS%fqTgY@nhWB"HH)G8kqj-_B`^OE0F$s#.h+6/MhP>*,QAb_Gsj*b%-L_WHuh=VGj"Il<Fg'r`[3m-Cq:[/iR'b]#*`!b-X9-F*>=`%m"sH&;L`k<IB>5Q0(GZi;-_eTjbqIj`2$O@]sl\$6m];i.6.s(e33]N9[p-BlrAQ/W^$A6Va#Mc5ee51?ObAc#3]+joW&#hHW*H7%q'p_u<j+Id\@fCK5Bo?6g\D#V=81r,?@S9tcEHZbYO9lCmaHY4*WB\j'sDVQYApAAEMTdXV"]Xm54a)[,Q0)<qDOB+2:9T_U6h4T%e3$3oq(,1`MfnegU@B5_nUqCe%sn&?kiHB)r_"Vbq6q/\$[t)`jd11`rZ5=W?ec+hV-N)RiH#QRSIWM9>"_M!N287T6&`&_`_Z\g%A^RdN"kU@gL2n)E9(u\iaqeJUMm8Ga>f<?WI#GI4jbfaD"Zg^&;1OViGmgP84m2,t9*?6f-`=42$b:=u[/d0C?ob4"<5f,H4FkQZ%OLJ<R1'1EGJ;X^b>YdV"$61A<Y'SZ(CP;d&N><t*I/<aq1!$b18n2mpA)Z[WimT+TW;DO`VhD!s0a\)`AS'$?MGdYeC+W1T!nFT>%WU)YnlT-=B]6H>Y&f'A_`N*R3Ye#c>;HBA%Z6#osXHm.h!rG<hO4-Fq%:#Nl&o;,VQM%7?=gVI;f9]"0LoeY2J3/Ut$a7QNaIU<*%[@fU;\s'?;Q9jB0F(3p5'nV=V,5Cl-\<7JkeM7Ns=X7:eGZLn')maEleo&_.NBtIeXHX^"T>aAdo)%4`QW4scNZ03dpm#d]q1'Yj%ZX;pj53,oYnnZ41Bb.6tkf%-Q2mc`;#uiUVXLuPa7uoVD-D/W+?$meKa&/hW8_aCqEq`6G/Z!MYdHd6b\mI13,uT)`l.s[J*YW\A%Ml(bq9N6YAHhU5!J`n%IqgQdrOdDO7rQ+.,SgB<WJ1l<.,g?H6q9\Uu+VlcoOB-ZY^bQU2=bb'LF>/_$=2ohBA$M;*BSCQE>%.Ym%XGd<`H?#4TYR21HObED*oDhZB]8.qEH*f3^&Z-@@"tZb`Ga^hSal\qf)IQMnYWPf6cu=oUra++;ms)CUXO#dL>[H"E04-=blgr_q%U;s<Ek^:reY5A-#4eTj/Iah6q_EHIYbKHd/$h*t<kKD^H;2.XO"$:(]Q;&)@Xi%MMKP=_HBeI9PW5Go.+Kj6<r,RQbXG\dWe06QH%.SN2M-G5'W9X>T$.C1sE\j!/L614)=G,1c9>EVP-E!S4Q\&03bM($--PTfXC850e6J+aaj]eg!s:O!0&Z9&g,q7kMooRe`f-,02f%-b_J%(gY>(1q7MK<'$lmO.ks5\H#+GEYk%">?m_+E?,Et^<a2`7E-!'ioqqHA9o\mTpQ7OLp<D-ers6u>)Xb=k+XWEXNX5J*?q.B%'@mm3ENUn"E,cbi-OH33J6R(G0[g@*&S";U0qMu.1:&Gd6Nfmdbn/Qj;DV<Gc"r<_Cs1'C(M66l*B@,=AmKGS(S!LX$dL<:if);&%VC_mU&^E^7aV[Q+L/O"NQJDYrluL7D'bGZPA]63EA)Mg[A`oAk=7R&)[B(5-qgti<8lBXBH)^Aand),'RgeZu9U.Pj819Q,eZ0s+%Xi7AA7?T+V18lo^%l%#'AL.QT.*F4M(M/t&r9CPP;Pccmie>:Dc<1i[@;HL8]1<\`ie\6-"Y7ju-7h6%iFf]u0:Q(Ta#L!S@iSer%W&CstM:MmjNJVnnSu4'_>Z-70``7G(._](5C[iXgBU,=8<f12fg[VupICU)f:DK.gT;O.&TB%Qp2#j3r"Zef_g@[EQrqUlG/a;M3%T:s9]j0+6\hOKB3GVD<hk4`9H60oUB[>D^lm;RTU/lS%$#?t*:GH-mjM[;c<Q*=JOjq2I&`Js9Md_l$[j*T=lZ$<q2I+p.mIiOBe%03lVYlF4H'q=o='b0+,]G]Yo$O"2B'^K@rifI\T+]p=f\mh7?soiaia[>b#.UQnRW&afP0QB?YK,QCq:rj@^_CDls"1@hV[jS'kt%?H^EnYK)>/mEX'o)>Vl>nulWc?d$O*QB?YK,QCq:ra&V(CDlsJk%3TqWZhCG5lT*(JGc,-)*,iMjS2=Wf*j9Kh5QAogo.*0;uCJR%gtTDm>Bb)Q:2]I':4nagj^WMZgZCd_pD_EO@Z]"/15P1#;"(-)(Y7'Zd13l@(O.:3beEG49Y0HEL%d46G6,F9n3\P8;2jsqHl(nV%0]0kF0$ng)Sq[#p3R]@]Ug]T9[JMN>e\mV7Kd!#>;0!f:ZD7<@kfeo*f;tq?U!!oj3jYOW/?!6YB)WGQqBPmJa*R0XSN@ghEgt7f%Cp"ULAhr!9jiglQ*+d%H79Rb$LPPe2%e>8VDL#u%`BtENjfo*o*c$=2*h+kAYnjk2YmCLRRkJ03KE3aLoKA;Dj_MOcmL:%_'!jMQ%I:(=_D7q)6akf0A>N53UB'qtaD4M:/e\(ktD-gQs!tfVOBi=pFlb.Z\3PT4OQ[9#7f<"gM'(pTPIQ<f$k3LS^/5OFmZ\j^rXM:.[%T,LLGDgmc/g"FkU(9lnsnu7ITG^6iYC;`.d.jN]QEiO[*CjEf)p5!P5.t=WDTCcoFQ9Wjj/5OMMq^CRL;t=Q`45&Cj\`Q(%"5os0%G/#+0?SX/+T<3ZglR$].>UuG9"om7:k\T("[e\Ra?9rF(/1]nWXcq.=-Fp81P+'@VHgKdR0nJehA:C%Oq_>PFDPsAq^$EK;2hq6J%!e.%\h_<aEL.L35#QVN-b]=T$OM<mql,F"d.DC"7f9iTf"R!:7L7'95]Dp&$Wcsk_HIoEJh8cAh[rfr^*gAUnZRg_l^YA+e=h^B^%]61gAd(>]N:#X:Lke6<V>W7,X/'mBahe,pd/;)5<oK@3bJKC%<:\KH*8]D!%^@5s\#qT_nSAKj?_obrKp5RoMEUt?_miUAG\n*Qp%f2_$S(rO[-O3C5jqt/-spAL\>-^<&k9)/9eI4m)F*Rhhoo6sK)P9u#iQ2COISt^?,kMLa`o)>g&(Un>?rU*2!I+sCUOe$_>?/bm+%rXoP9Q3ZIFT?&`>O,;hF$HKY=QJI$Aa1+6lfmc-)\3,MrIgX6+4GM7UlWrm[dFN8%D68CIKe1Qsqp;bPIeD/c++O:c_oFDP55s]h%RfT#!5:f%t4oE:J?[i"JbEqsq5;k>_s$,ChIXh,]C[l8Zo'u/+g9..L`5;OgA,?bVB5n<H_nZ*UDu\_gli1k<59@]#mgoHl^WbXU%K`B4Kg-<9C41W6=Dq^cUh!_J`c1E"2IDcVF6/.nr\/T_uS>X-N0c:jm4j3Bba7`.[nqK6:$gfR4"CrYY;\'/P(ZB<$i:1t,X!L"J%SdEga["=cH=so:>aqHd,BD<E&PP61"H^'<^i1So81-hB]]Yg>]iTb+.K4UE4TFGJ6fY]DoSI_@T"TK\Wou>H_nNT'8Ds"=u2:O#8%jn];S9Gkg$o5*RJG4a-1PP62MB%%1+eaC/BE:$EgA6&/nl)X]7R*An+6h<k<:=`Ddl79$Y+Kn*34tR<<nP(6/AAC90>90sYGWfAY%<1]IY!Ip6.S\B+Cr+Tb^"S,A2gb`9T#AS);iHAb\-fsH<I.GXCR5E`3*q?K&AMrI2SaoTq/0jS@E$ok8]!s6=LNhN)S*:RN0TBW"%l=E3eCn`=$Y<i6g7iprTV\(FOi12F'N`ZP!*j5uR$,j1^o55YbEW5lMAoInD:`nIL>X\s6D!'^MD:D'R7M7H(Po2UF%:9=(R.lcV%W_^5heAip]rl=,X%a&t#nhI\%E$!onIJWB`[r6cf^7Cb2%3G#l\,Um,@0o`eiP2K*3;9X-q9@nPQN*d+nRm(l`gVG:D(H&#$Pd4V%j4YCG]:H8?HFt1Xd[p?Zo_lPEmK7(aoH]$!LFHE2CYP^C1pHVn\("\SB=W8r\s#)F-i86Ajk$l(%91c7g6h,9[N5=taV=8N36S`:%7J4lU4Q=XYZ!QkPnhtq.(RH;RNSHHq-_.TJQuDn*a^0uL!9>r?5<pa'Rr%M`4YsKS*1gmH$YT7R+G?!P?2NV.`^tLW[@Q>PDFf*i%SV`ijFCmjLFc`[ZW1IS\g;;P:SaFVOpVEKtR-57db%E&uFD.FFY\iRX[M'Rg9iE=1E7SQ4haW`t*3ct*mJ5[b:^B[Z,/qH&8kjb=%ho7Qk7cot$ouo>^ruatem_(2<mi,"AJ`Q!K!c;b4,'#39)gO,sc.ChEIX%R'GYDr`VD66lpf.[]%sRQf`oso+_peudB".G1C_Jrj%pO.Gm,YQdEC7F^t]cXID@>lTeSbX2`k'f]UKb6)KJ""kd2R`cD$VV,g[B0t,[(.9%N5Bg4[6C%4'K>d(NYE%C=]o(fcZ3e5(&HMM%`.H*`"7i+R%EqBP`$.&1c]MoFha#eth:la'.?n.DoQD(?J<W;!Kag-<,L$c:cVf+&'8#'&I[k,+d:+s!8>1^]/ZpF/JA>j;'4=HH%Z0V+4^`%nMAmq/;lD4+OJ=HsUr!fo*855TNE=XIVpIP?OhNhhr5O:7Y.EsPZad'HN+,PfhGi/,P$<c:kVBN3&P_aYNaDG]4S8Hd"%;nol&UUGlAqioBhD.?$b-SPctXp!I\!ZPm&hth6#aNk-nd;@q%F,U.Z\[lWb=UNE`^`";)"+2,bf^Nm-hq0o(kUd,tm;3^F:gMB4%>G'5H&W/.ohmfM+!6%DI;KA7R<uZ.BUIS]$V/i<X=#eOWpC.9h'-2Y3;a-JTDkh)p*R<1-I;E^lU1Y0Pcb+&l[`QZ8g!+q_bFbM&%1P1#79$0F82p`>&>G<64%toHqRa\nIoZ*#Jo.OHA'0+gV6P0P38EYNWIhgE[S_V?UNJcN<OOlFW`ZKun7lHH",//Gcn]PRT!fkoQ%\nt`\,6\n#2u:p4".1CT^VD+]7U'/+5T64cg)Ve+YjcLkNM[cl&a-\\q?=DBILlH-%hB,eH`'8<'!J(eRm3qs>&309R<>N/!^Q(L%6@SZ`j0@":p-e3Zg,ME0gXs(U!rg%/k"`K3o`UB%)?K<:H)$)3%72#F_3Y!;K('?Hd:n9Oa6_pYruDH_0V$(Re*brhCPN+WrjFs&%S;(mlg5a(saYK?&(2F4VretdG7qGS];dK_0D;qfjIalCom21=ch?72D!#Q\?eAjRse=IQ9G;M:7C^2VVkBRE;A6AJkiRBfB#8IGO%'M1&=U-D-H3/$gm._d0'%/-P/+r4%ZMGX.AK^`sU_-sGDbLUu/>cGXTHUg"1LeL&8)B9"f/E=V57DO,8g)pCQ+\t+!e&Vgb2H!?A%PUkO]ULR?]"Rr4hF^0@i,"t!)$WBMdaorgD?,(5]8+9'iX%CCfd,p;Z.jKIPOurbYYKC@&-QgUBmIY-`e3T_-^!GCi47p6Zdka*E%N3e"8_<MS[75@b4O6$77!Gu%13*?6(?(2k%TZ/-cfVHBij3[sYY\3n8]]&8]D;Z+ONi!a;MPsqF%dA`"#%'h2*Z71'NH7JF/.(fF%97ssZ0P2h<+@&;=&FA/BEI\f!*_X9,(fG]fVE`#*i;qg!Z?tiMd9K1pM]T`8P7Da$kf`291_=qS*9TlYO<1W8@NZ%qR?8;0F9qE-%D1!HLKaen[)OOYo,/.L.!(J.142"Xdk$-hfoFAAS,iJ<n7kf/SFkHP*rjrT&T@Qk(Jt1:efd9?%-jHKe<-`"n)K/8!K+a?nE^Q9&%'Nk`=oVj#TigGa9hR?7i[7A1WFlh/4_(YA\oco^?a/1!i,]@9;Ju9iGKIFEGN@IOVa^s:+($CPEhU*ZDc4=->T7c#`j!gXsC$[O_%osA&\QgY4!mpZP5K-&PD52n]1Sl_HH"Q*]h(CuGPeh]*C%sUj,NW<o%0Kh>dM'%G\NF"nPr)DlC#458o7h@aFB31YPGPUMp[hl0p%^8/fiS_UUt'.0BWBHTM_:%`hN,!BF)(u/>4DhmAj,'Se,&QYoO+&6DMqf]me9%u0CA\8f(a+J8o,a9nMF?3P3Kif'cMK=%2&hHZT%Q-DKN6SnPEV2<[Aj^*47KsYnO4+&pYcjgm'0D>5mdrB]Kr)q#eO&'-P#i#f1`]_%K,QasVj'E!Inhp%]Z#=s:f+n;8&Wu.r0_F*s%:u9?ESY*!E7D[n/*2He..Zddo(=id$gXgO0oN@f;?PSLWL=&ZJ46`^X#JilU2n'mKp#u&L0%u<Ndmt5c)4i73J#6qUhoFh%L`[`2%6a(o\)O6?PApMa`rS!rTI]`NrIX'E94fhLeF%.rqA;!LCM(LL,'b*i6Sp@%gY)+N8<h)4WHCW*(#XUn?8&kWoRY'];!MAVc;dueS%1\Lu5N0!VfP]YsXG1(5SDd=EM2mK;D4_NqAG7W4dS>gcn;WDknXq+JnSu5&L0llt*3>(Y#QEH:s31cpk3(RUW)ql;\od_7d4.@J!%nYn*<+cV2m@Um7TY6o>EU%)=kf=3/hN;0!T"62ZkOuA<ub[p!*meK#_f.maY4q?::Rr&ssp[C<Z)<(Om9clUmZ2,O;qT%lUIf?7k%Dsol;"26Sf.p;r;FKJp71=N@UfZt!7?L,4eej,Mu5]?nX=O,i1CEReTY;9W%Mhg'OS[Z;kXWg;F"=_G's$-b&ht8/\p=nN=s.MqY%hMmPC*??pHi9U0MEE9O(%:^Bh$PgG3P@_PiWHI?RWr-c2]$oQN1C[,GO'fR"k4$PIT0N5pN5WUC*-)fhTCM4YKUsQShYIfDD?$a:%og[]<r22FsbF\`561665gPcE'LYlJ@IegngpkQ?YIf'-#mADVPj[g9hpd.dkL9I$MGkqpMD1/(60FY]6r5J0?j8ORo5,BNA#?B_X%gFkKqn#??(J,2#s'gD_&;hBYE1U*9ophb6_G,L8^UPf(a\P]rd2s<>Y0&>.lBP.)5qL\^pBgThk%pT/cHf_AIrkRc^plFuHVf-^Y%&+&bZG5$H-P+IUh2>uS405d4tV\ALLiuD]?HM=f39jZeF-@)MY?^:C>r5p:'9WREF-6PI]^kl\bc#9(8-&qMdA=D!4Fa\/4eVU+[%r&uobeG(%rI%-8-RJE'='tU[<=]!e:Z3/SJmPK$90=i+Cd76*BEIZmLja"-ZCn\UKI/`Qghb$*tr9=)C*r+l*J$bT\H2IWVr,MOM%R>AdF<C3/H-C<G2gRRQ&,WJLRHH%cqVu]VP"8HI0`rp]o?O3a(S,a(jI)P"BC]TkL=9^J<[Qc*JRWi+i!s4[aBtP78fUdeQW78V^%Ss>ZFJTEa>5ep2Y"%t_<)/)s6QHA4*&N^8XSYlsdOR5br[]p,>+]oRKD5WFb@$>$3[g6et?YEq0np!M8irL.Rl/27B!ZLP.j,Zam%Ykr"P"d%epSq$`[q;L.r&"c&"rVWS2NuR;<*h9!7ofkM8:H4%mroW^fMi71Nn%QF2`MYA-U$7UJJ(5J:hsLG?e0#q;"oLk2-dpC4%N"ZMi!DFhlZ_a@,juX]*iE9iW_7qU<BXQ::[;jSN3gc`!`Aue-/HE5h49?:+j+dqSCH_$5_Rl/'1#t;-cPfU3Aq=s=G*-2LD,-d,%)0$?SP(;akK"tKWE.h/]EgsgWH$W,lN/e@>@=,D=%eTZ?2SR8^r8UZc5Q&pf?iCq;C[t.NgNuSW7RI3HW8S0?1iSI_T*<1-lHb?I%\-Ye)`0`=]UCF^B.gXA='<mo,q>^Re0EYdnD9$)j[>D&c('8e(.g&/uf=R.>ESI?-&[8^sYgFJIr%ok>&MVe)%MPhAWGNT=+T[NH%!cu+Lr"bp_fjrl@W`D<>`h#kuhqmmfUhTs]gS1L&0/$.:%L/@QD%Wuafo['0ZT0s$0UBN*-@E6&nJe]"S6#\;qHa:/oWKF:Dk[;!%9l<<BTLg"+<+&lA(1FX-_9i"=So<@Hd!)phlNiQFD/f8tTNt-AC;L7b[,AYtoE3IjWI`e?B5Ur!W\8nX'f5nI!sQc10/Uua7:c*C%9famt'DHJL`A[grn9P`,C_.+J!?`$_O"U!Q(eYlK<6+1X=U$eq6;nHJEJ%<e#%#bJmip_cjk"F5'K>S86LU]KG-D*d:H=#-lRXt`%^CNZe5j(Z7IY]rBmr,h)#LG@sEBMn7N$X)0^mXD&"2!&.+.<6Qk[fcR%D25KZ\V@j^@6Vs&iXa(8_f9lL8Q#SE:Ckfr,JCtbWr">%4u;/(4Fg:2hM*Xp66u&(+QOqfCH9_V7M6pH6V<%Z#;?`$(^FG6@t`lW\6.r+KDG2Cn/.*[9Ld`E<"HUuHc4%2(9oC5IqX#2C[5$[%e(T_"h<u1#E:63InY!8HSb@P=:+jr^@dXX6:5cPjMLf[Jl2\8H)a861#/U7k8(T\QKnau1h/?\CW#h]nS^%!AIJ*;nGP<7-)iSL"%4],'!%ZtoSW+'JY^uE2'&;\(MF\0^HRbF.)D*V,&JA0aTmcr70fsBn)4)8=l^Tnd_k>^r<20^%KM6PX6+]ih>1D!Q2#fKXZa-=B;%&TP+)M5c/)E!R]!LRGNG&g+]Q/4(bKI6\eeW\ru^RbjFI@1fC<>cr]Z(;r1ABX97'Cm^H,ar;805RSLbN(,'t8=,$J7'Mk77mfbr%f8X`-SiXrcb@4Mie4ae<Og&acWr$IJRu2sCpp)gRYl&^hBErK767+%eA!L+>T-6W,hT?L#c%&L/01!dCkkrjB+bM#7ji)aO=PPM'%'V.(r>O`!W<O+lj;=Rfimqs6Jf]tcrJ&b=I];%>C@UN"F,":N2ElAo6^D\LEMjT[%$.=A4N0FlZb&koq#r:QG,EY2[[HoB<>%k8>%:]([4m5t<%k_)3;54,4A`rGgOZ%ku8-:ING%o.`0!-\[<V'[C#Nbr]9A7'n=$:Oi3ZdHkp<jRP$8"#0B*&.a74Lf;Hg]WR&?mJnL%!*:2f"FI@16t4sR*8]2RZ!!4a*!hkdkD<_WcfU'V.EiIA:1^_t1NBpi>ds/db(:E:(R2^d=Mt?FnU,i=3V>_o+bmVE#:LjZ$p'E"%ACT>,02>(;a$20\n]jNu.KTMZn&#Un\3#D^7%M#dS^c<lG-E.p)D\BNTI172_UW*iUj[pp^14gY('QK"[uu;$Z5\mFCpVd&B0GTV%"qfT!%DH7i2CM$%-dQ(o^jA'Gi]c,?OuIq?6t6K)&$.ZCI;m*iXCmb(6n9i+;W;,/`gG>.?Soccom_(EY<GDKps*O@:=/uNmS<]Z%'(+'/HO/8Yg^.8=U'rkbB/742IH-/-ZU>9u*UUIT^m\?WCma832U&@oN/]m3X,l.3)SJWiqS$:bk=HN0Pm+3BEdl+cIO_.1?mo:*%?kePY&:-rkGmB6,-WG-)PP(hATbo>T;Hpb@bPJ'gcso"Uj+]I_=4"*md#jH-eIVsKp"14DYMYA*<_"thcWDQ]^N,lc#$hJ*$(q]Y%\5/V[RQH8Z#UHZ!Zp1sP$r?8m(c2p9As:g#`8M)F6eG@X7m]TnCB&<!nB'\+P`5s\m:7Bh2UNX;.[^\R5bVJ$c[rVkmrHC_1Bs;,%nm$(q+V'PobtRO6kl)Rn=X%Zd3/-l2CL_*L,TbtWIhX)f^N!,P'67s>#.na1lmpL*&5PR]9\NZ2=UEIa.tW@D12V[S.*EPDH!.hF%5rqr;pS^Yu^f"rEp;<_oL_AiD6NgJoK]<8V1e/U1qfG"LMQtAfJ/9J,EGUdgBnQmKATB%=SV28a`,d%AbmqG3A;uE'2=a@<%*XJO%oWL)d>'GqM_&9\Sj*E*:5T16]ooa-Ma@)b;k1J'!_\sV,GiB</Hn29'*_?WiBIaud$M+*%n_WZnj)*P9di[LYok&iT3JeS9@VUDO%J>nfu<GPQNN+>4!_MG4W7+rMYX!jcV>cl.eF^/dY'oBQ_.L;)<</;Pr)]6Ic-="fU<5aZq&<0r;#%JUD(D;Kb`kil6lAVsd&;Rka%fE)HDh2JQaX,ao(CdU?V@(+)-!iQcFKPbX]f\m-D5qS<q>iR?u9XCiW_BLcVo*Sn6Sbd,T"iZ8C.thc'Q#Th/KP`sr@pC60YQu:7%G/.5@]]3E:!T3;)jT]/00%/m#NNa]9Bc@VlkkdET(:8a288A;dT#f7Qg42)H3o_`4$9[>U?Q6Mge^+"o<9WQ0=s1bfg,6Hnp63S>%J?Ea7XXDf*o"1A>OOr^M`lY#i7+\l#26ZNb`6)WBpf^rJOCa-LTKgR_c1hYB<oa)r?W$2+b)ERTMM+!!/4:=U^VSRV-IUrm@puK&%NaTZT!b%'NIfm\KYQsj\KX%32+\hTZYqQs2k)'1L@9prd0jlPk+LugN7DX3FR(5Lcd*;Zc?_K%)B0r+c[e:M\S?7Xn^D5%G-9)f'%j".RFW:M$K[\i"Cml1^Oj[AmsEOH<L87Y4okWb=icIPOab)EZlJe%us>9d*1X`1_^S#OecZgEZ=f?nTH!AS*&N3f0*&=%k,/>s7:%3+^%]A=<WA7?CE;KauJ+G/RP11O)8TZK!L9baHTa384Y';iNTY_?L#lQuKLY!H.<?c2otJ%Y-FhD8&Qq4l@k.#bnY@S8DY7"qN[$%kQX5M]/]S'+#VY0$Zjlo&\Gn_[,DU^lStA-J"bjQ!57fA`E<0gPQj4l!mIL*-BuJEoi,"WKa#a;:UZ:h0N]K^MR!6+>FYk9-(6UI%//UuAl-CkqVJM6@KsNJ1^oCDR=TDpPpP?.heuZT%E41r0l%HCo[kB%Y^>l<NTIZfV8M70m'eJ?<6Ng]Rj`SJY!Yj\U7r6.Up<HCb%$=?$hOGL"=%bA,r>>^1=;OXg)J7d^g#[).5EqL*OiW,.2GlgFKGPa@Fq]+"H$Ri]Em#MoTr&,.^'`oAa$^2F@JV`Y'8HI.%ZSPCQ%>aCbqVf?]NWYX,_[DYrTM9UV%kg`K^$9B%JC5%5)4=)0lQNUi7(18esn8[+bh_8/W.u2F5DqMV9O9XmL$%h/m&ASEA/2sZ7FLqTI%\#t%c[ZF=>9qCCn(/r1l@.h(+Hcm6U.;nFi=4P!$h^B.k\LULa;%0'WKhUR?/0n/qJ4?Wj+SA44.C_]K(!PKEB5=i.:?:1cP*lgX%@Doae"lJg$Z8&A20oCYCb#0B[.WQ9(&0Qk5!S6PsG)15EFVE8!!ZX5%@+cKBfC358@t[ApghWZ8HjF.N_(o<4F-M59$`ULB;;$Pt%?W7seTbU/56<L[`qf?;AChM.>_1G<.;%_Z0R6LpM5N,\"nJ$i^0&cW0S#miV:g=ndkDg]rRd(QTUU1k]oPraEg_\[L?s9n!=fp)-%Bd>b:<O4_;N+\Fa6K'Cu@M1J@X0m^9DatRf`>dSrRR@CZc0lKZ?&Wp%Fi_$&p]W9ehN.CAj![[1i-(>"Dp3I'9`VRpT"^8)/#(E&%[UQDnKu_FASitBpq_n4%0k^VoY_bEFSp"S@n&:=igOO!Gi2T(r\[YBm&mB?+UeMH,_bUA)&)N=%WYP:uQGs'iJC-<9g;Y*MSK)up%:5^ODDTH1GdR!&LOVYd>b'Ek)EmD38!m-M>0n\<ePq783KT\J#)_MN=C3f\oTX&BnWF7l[aM%XBT,?L1.M7@8B)@0/jCXi37`Y5i%#)%`iI[l<R7/D_mnV2(l'RA'XbgXfDV'iEJRkt\PC!E-#E*2''4/VBgf98oK;BU"gDA6M6*ma%,n]DDe?0SuCgu/Gr3<\55i#"`L%kC\pGlJr(mkiCca!Mi<J#.J/U%(g#R+]D`_EZ+b2ThuAh(sp["m)Z+E_.a=[?BDQDYu>ZVd;ib?>0*MA-,UU294B9C#_m-Ch*V[V%7b=Ukkf69$g<L-pG`%QUq%ep+Y[ObQ16fleLPA>k5jq7'4,u6;H8DS<RoD[c4q"NQX>EFjT@sM>o)]*--*a0F;>MW)0B<Y:[ZH$^%ZdFRHp*-8"+::rp(2i?"_9]/Y^E(B*8CBCs<(9.8V\l7I-C\HG*n!X77Kk9!_`4X^DUHfQNtDA$.QqOi>.OouPhLhAhP*UbJuDOl%h7uUqU6.?5;ZFKt0<IRD_Ld&_?r8J<R>_d'P<C".W8Up1q&L/me5j77@\g@V[g[F*lF.@`$)7O771'he-..o/(lV!N9JdT&4Lqg<%EeC6t^kO)'RQtDXj!(N_DZeRX[4*`q[$j@k&<aeW5H)VCi.g_m_tm88-QWtYN(5^1cD%LH!riYK=P?.up/ll_=2ci2)cU5'<cg*R%D%A"A)41\4bQ[<a7h&"rOMRuE@,r/Mc.GjCSo;Om6h49&$JQ=H@YAjn#+\$5^5djhTW=u.$Q70.D8cE2!Dt21+j^f$pl)r."SB\J%U),_d_[(L")W&=D0`e.$@Sm\jS((5NA,G9.gG5[kk%SKLTRWGif9sMAA(['?I@;Ia;aUZqHjNN"&S$;0YAh)W(baq##W>@ZS),(I%^i#b^d>82mNfqc+`]M3TGUAQ)^-N!.T2DL6)r_CP*CQ'o)RtY#e@)%Q\b/>`?'o_K)d:"0OI]]7TJbA&-=+WQ,(4K0WM+iP5oh\K%k,b-%Pt[":*>MT0>8qalT*L7`12!aZ0`dGd+6F`nR/fE__2%\G%.kAF0l3s[&Wg2]#7i<nd2l%6Vm&8^_!DU;GpMlp@?q_"HNMsP%dFmUlbb_P),QsOr0&6V"Mo^F_:k.\4L.J;bM!q9#Z2HD-b$3FIn/:7Tfa0o`fO2siHp=qii*W)n&"JGXKW9p<^(cTIBma2KXFVh]%c.523>A-`f.&-faT/rqbh6>@7EJEJa.;TEQSZ1[FF#tJYaG+aYLn<M6DZ$mE_ZAhL@K<iAa<+5]=ooNWE-d);.iK0+'.)3JB8sje%Y`o4o5N@%1NR!Zj&!e7^b1)`V.j1Z@>AG1!@QPQcJd6T>-@eOK-&Tdn2@O3I?kRoZnEPH)rfW#X63+,k@c^5lgb1XXO^pV7f9+&l%-b]^N!Ak@s6OIgTlc,5%@:+U;OX4Js@1uVKXN:c7#sKj!%H.B,oLG).5X@!bNX$$qSQs"_+8!c5d%f'C1pu[S>Y3?J?rH.gYbrk?%JHeTlM2hXXo(puK6-%ge3,31IM;:PYTf1aeGhJ`6RG%l))"B.B>oE^6`&g7A;m%k[6ei2,[6CmR(j!>59gT>ORT_bVE!Y[oMKfW]%DC?h54Q+jD&lQ*#L'4;[/*uR%L*cBF1fZ9ZK,m=Kel2uNY9V4gnQt#(:_2u)dJ]`YPGQcH@Ad*c4SoCL\7CT5#=Sl?bNg[";q.ju%/M7#kP88Kf#kR>=nFel@*=B1RW/1L^X?nT`diLqHAYT[K940YX*uZ3'CKmQ9?8^[b+Q\QiX>]RR:S!uFE$Dcm*-VTCkEGUsp,?6I%^gSc-Y^jIl[09d*@m:)+7<47O&P+A3fQ:85WlTN-#hHEil\JEDPbu!K?!+%PT)^k'6)bu:70>P&q;<r[Hl=M$POo5tR)G#5L:1fc%Q=@c;];*t3>7b43LG<?.-Ij76/3pEH[;@Hi[_0jo-)'!mLjZ>BDSW]B[PMRQ,fhV>&:>3"HXR+Wq9pGg>Rl4['t/upM!%us?s!F>%IW/h<Z4MpBJXh6%e238;5p"ftl?$Dn.I>WVU5457_La/%A@71,kL<MDm0d:dH56]'m(a,XY\";N7UN#74=m_]S6-8,)3gnN[!CNu%N\#"#D*[e'#7W3I.B%*QC(gDo8^$1nCr&-(0[u<`$+2W)W.UQXcZ8<$[*r^`#<)fh2+L.NW%;'hLe1hk#PVce04c1ER4Z4ch)5YE%"dFd'O@n?=^3r.K"iFbkIhmZUaLZNJJPXc!J/.Y>HO^Gek#D[(VV)ahP6W.oPe9pNn265toWb>X^RYj?:c4)ZXIe-Z<Qd/mJ^;EU%\a;-oIs?^NaF(Z]m#3d\Qqi>D\;<nC#eQL4+Mp"%Y_ibR/FLF:=`C[2+EtpgP;1_';F[ql[cH<tOPiM`7t8##2I_%.h[=:Z)Ns:Y%!@L06OA1SA;M[1%BMtA9Kfp2iVbYS\#U5LOp\V[1rr#7?n/K`V_p;h&W[SUA7=t^_[CrZ^1n[rAft7*\-5(Zm;B.&PY*.KB3"$kA%"R_;3&/);E<pBJB4t;Z9_,GO59M(,GB&DmSi7q#m0/IuU'7c/X\\709pVsu&pWIuN,VR"KCiGu?>pYuY8k_T"3G=sSI9GXL"(0AX%_YSoIn(\fVWn3U7Pl(1,)]%:i*Go9P/qC4B\#^KW/J:T2jDt)$-+736\>;L<p?e`ts/>;eg5eSsY<k'N_U5HCXI?)<X1.gSf=V*q%]tW:rS4JUJ40NkW]E5!a,1"O5(iS!_EjLgK2uB*1As\\)NKlW/q@I,iLO]kS&oF^["U>tT\%:7#bg$,$h#'\0mHlarY!?8WBFo(M%_lXrLg$SL0:hfQjH(P&[_8_=EGT,2LnJ48-"#sprifn-=:-^*V@u/iHgX2O1EU'NT%9RFKYV[WR69:#unk!$d6p=#Vlo"g&A\Up"%MXG[^j4a']4"Z:)+@hd6cFB!HYos1>]`JY",PXC2M+-Ftm2<MiK"t%*[l=+65%_\,#1>QRj/b@qYGtT/eUD(R8X.0ME$bRlG(?J<%ctG15>#CRq%\0XQ3/5f\;D=gk7qXgb%Z\F5p,V:QM<+L<^h?QaX_fPGW;hg=:eaRUahtu]i(iJqbRm%I(-YO4b62-TfiusQUWsSU%7KhsGN6/Np5pmAV5stE*a8^g&NTQl9i8(@r?I@si#E<i5Dt]=O=eTY(0@L<V9/oS;l:iXZ$5(LsRH\JCd`_*fACsiK@Xb0_?.U)F%=fCb``HrO4(kb0=4"Qe+,j@a+2+?qa2j"$TC*WmOhGhn1?s%f@:^AQY,>\uV3"<KObS9!!?'DcIocuOeIH&)eOp]CbdK.u.CggmA%jj5$h4QSuuOKEc+5t3*ILfEja&RQXR>-$j?.u"i1`BnaGD0R*%BQ#\FOkB&si\/9^+Mr(s)rl;fBi^"SaGS?-C9Af*5'Wr>=aU4i%e3"T^nl2(8BSrZ"QktsL=fbEXBu"r9am[rQJQ&n_40s9,E+64u=*>)Z:>j;ZDXClk$&m]\m_+%Q2pE_:A8h"H$[pg,)Ri<CS3$lX%bm\i.h/4!O9dH?(0'eC"5*]Y>>*d9[P9?6\YAiiHNeXj`S-"aXS@us<kI-)EVPd-8UWM?W?'PaKh5j)S$eA'jpA:FZNm+e<Te,&p%?tj+(/<QoYoE=lhf/HZf&J&-9fJ!?MLSUCH?B/Gu.3'G=%=1sd6,g1+j%'m*pBDACmIX*TO?*B>lB51bgL=^QGr!>AcbMmH'\#DR%CXaeJY(L.A8Q2C_ZV-2BbSM:T</k9Q4:R?0AaVF]Z-a?4*N)/j"*Q15g,b5t`a0r5f`]5^O:I.fD?(?s=!sWu-m!I3@O;EG!*/Fm%Q=)s+<G'3M<;_E(&MW_1Z3GC>-id!2S,ig%-1\)r9-8LNkQl!FS$jIPV7.?i@jSa^!i^gh'Q%Sh.&`/dMP@/uJV^8QJUkH1e&.%H%-a>:iLbap>pCIGg'?'pa\(/0bT?BL@.Cl$<95-@HpgsVo*/FT:1:InL"84$.<Wks--DBe!2=])b(taO]fXR"Nc%QV2%aPO4CG%Iu%TV.&sC%/Ee.WY;M+Dm!`=FlZGD@8?@#p[l)4)c1T#h?1@er!..jk-VR2$9-bW)g6Y_5Q[FmD*.E*;_FnQH!o^WG-K@1b*X%#@-kC%Kem,aZP$lKD$.i#N0lR)8$&8sK&KN+%9'*`HN?T4Kr"Bij#ib,f53m2A_rEl;\$q"c388@EaD[K$jk30H8#DU\b5;u1XR)D0j^Cp%3R9h=9YDdW:cb]&=3'oI*l1B3-a;$&ch(V>b2>=L_jZ1h#]9uueM\l>gs:ZT31_9&9Wh^^GltJ&MIbJ)PA(#WVq;";-_=ho\*7^^%$=VfAof3@=A+Jp/"lpf0U#C*Jfjaj1G`qB!QqmUoF$"_&_M1MC4-.3:',XZ.EAA\^=,B%m,WeCp&NT=]40-:]MoQ8LQgtsPo/cud%`7p=1f^Yp7$N:ft?]W)lVEUrI!f"jVJ>_='-AX*k*!b1N8)ah?6a^!_dPGbMD%6;KcFk,?H)hOm\YPZ@*iuK4h(k!1K)iq0R(tI]%6`7i7$5YCu!9^,Jf1O>qBiY$r`u&dNk<*Z3>M9&O:A*^(A&>:E,h?h#0lR+<a-^;T0[.e[oo)1iJX>'K)1s%ec>qNLC]KJO2M#GZ%L/.W)Thsn"4Ccou8(fS+n54G1N&.?HH,_6l-r)S,#4lG[GHlhTG:eb'8@mEe_lFsDd"rZka,#pA"%"qC.]m8V@mDZ+\ZFMn?\9J\%:p'gY;Rlh`.3aFKRC],`R+*=724Yc'SL-_^%4;PIe@Ta<mhMZ(.6Wp$C+H>ESf\WMP<"a'Z]4Re"MQi0%QBnc'<n*PJ6]pm:.B=<%Rb3pO"QObhJ`U^NSBbM'`Sjfgpo])*_]4mX<c&;XUQ9d*kWcqMkC=sRjaT/c]ok>G`5t]gcLhTR5K:DuB!j]R<Q2q*k.<=%aK>4i%h$YGdLZ+S??k8IRGM^CP:13$06,c`UWtt-03mnhG3)osJjCbW=fXRLPSUbj-?D*ji#)*]00oc*Th6?,W,op\NC(4:X$f+Vf@'#YN%p'X--\f4-n!rHA<."<$576&^55bO!33a2T%':l"g"^k$0om%!Y+Kj=Y42>sI*INe';356\!+;rf:,nH4UQhu=IK?qoaV^^g4o#8@%=??Qh%%kAK)mEC5%c'''K';c?NrbUM'^)n=.l$DGN7msBHC)P4;V'p.D&;]+G0E5-+ooVrr/i>bbG$R%o`?6N;4&cf$tcLF]i+^V%JUWV((hi:FB"EqB^o+52n3$7/oIL]Eb@/pPY_mQ_5"=ILeDqGc8+&eqTjoOlDRA[Xc3E3GfSs9%(nk#Sg?hBYNj\_kC(.fjo.nR-%*Mn#u%rn*f51PAi^MeaU3>a]WE"OmBR/anb#*uuU#?D&d'lok4T"]^WH\D8M\iMQDLf`0jM<11Wb+=UN322N,.Qefg,[&R2*o^#(%/-3)?peg,2gmQG_2^ao?LRd5pr4?moLa^QJOkcDIFpH"e[TXA>LE+AY##9;:0#bBe<!/\)@e"8*,fMbh"+T'#<`iA_/)F*i'Utf4%l-Ds,9R;O$1T(H1@._rcmukg2+\LH)<2>DrRNtE$mc#Mf]iXTa-K;Iu]8Osm,aB;k6)*ZDOMDKj,'j:5$J56,4Q`$r+*X?_Dr?=L%P,R"AVr'EI>=bY_OjM4OoXDqW@OqUGFAqB2g7?kuHAWfB8Y.(V(Ybd",q1-N(%_opRF;L&9o%1D'C^f2Z:E99Ht9"/823R/]].IY%3M'BO_2OhRXh#q&KHf`3dF4T>!a\aF+A*]n^-X(^,E_F$I7j(!i%<#T5od6INQI]k1Kb%`"T,p^"gAWA#@Pgq(E.ENOa1CB4pdT?%O+E[=)`n=V`G@Z&LiN$?"!kldnU\js+LV>\iq!^mU3nF<VLdYA-TjC:W<AkiU?9797=$"O7#Krr42W!GiQ8Otk"g]D0d'dN4%\!G%)8O%c3sN`srK;[l3->jRUam`6>B[e'(K-k+na$dLFqB0f8Mq(LS-VE\(d[9eLr>Je,%[p42;l&Ncp=bGL_tdB"s(r[=\o#6:24VH%Xg'CVe%X"\b*GLG*7EslEfq=N;56,O>*F1@Utu*sChB/I@StX]fb93*/f]lOCNr@8:aN(N<4=HrWhWWWT`HSE-im:S"AWA6H0B%.%3R$bS0:<Ru#;W%dVcCMBJG%/R+(Vs5isB0;b)%*OJ<R=63c7L*MpT6RKoKIe]I@TdQDfY[[\pr'cF9+,(er%=c<XqV#=X@a@4oEm%99rLXmgTLj:)t5FTZF?W.A!si'EFqNrmO/q'DlU+#=VBm[<F_]18GlPSNe).)6D$7Qg(0a5a#9-d=WWUWrgml:h66JC?OT/!e=12%5S"3h/],*`TE)4@8]3eR.&[72`e+>#aFh\A"Up\4D'2ES#U1#Q5lhWaOaGPCOYJUm,W%\5BNe-%%Z1[/,:GNe4=C2gm`+9Q!C..)%dXqU?5l@j@K*(QH/V:l+6'rDLK;/<0\<^>>'H&)eNOZ:a>SX@4/+.7r:h4NLcl,i/:]S!TmG`aB=%rNJ*u)9YL%<K9:h7@4j];/L%JCJV(DLFJm%-41eG(!1(%,hQB5lh/$K3K?1eu8.h4=D<S9pQE+E_r.)jK'F;ORA0jPjtCHHGt/JqEY.SaH\pb6"(2PC7>_@QiZ9$%a+FGDP!N%X$3]XnX9SoZ3D-S!'EI3i./fg[=C9:mog*#>N>iB89W]/THr.11Lm.si3[c["iVK4_R?]O&E_ok2R7gTd"b7K(qa"X2%U[35%1c4^0Lrc`W&3,6ZE)7*\#oCYf"e[#9f]f'MW;Q0s3[c,G-2Lr,#=U7MA8XRZ18_1BNX=?Y\OO]H.lhK+VZBj(3osgK-$+$I%[4?>%4Lh_fE./\@gr[fih`"f;k_*lrpdCf(r:O_gqHJ<pS:Ybtl`hl5iCUjZS"O,YLN1J)B7e4"2u>a%H7C&s%u&?A%2^+<f<7=D%`_P*[;)%,VaB9%$mcJBjY._hgOotrRP=lH`&dU9iUlD1M(2Y#D3'HrgJNO"u?j4:#J0h4CGZgp9Q1Md.8H&7C(tt"VTY56?k2$#q%;%?jlJtqss)78j5i1b6.Lb1/N(!TD;J`"\#!#!2<=]%2ec)c;_HL3s=JTS*thep5-k]D&Pca,_BN.KJss+mB93"+I+Anp2icPWPn%L87\:$@KY3)9g8,^_ggS(,VeE]o/r1#B2V:%rLE%)1!<S](eAFgD*g&H[M6!JT5)8Fr<MRB\Paqk]J[=n+LCQYnHiN,ZaDpPnR8c%a`R'Y0.?+b`06iI5-V:<gJuuVECjZD,Hrj#(4<^qGJkP/f!iFKY]78`+#1.iT0)\VR@8?s1UbRJr*msOc90QY'uQIKOo-7e#"LO)%gCeA?c7Jj#IK!j-j8I9'A'^E.*_H,u*0,Vh-Lgq"aGQ:^9(+q\SQ1)DO*Vm1]^eq&XnZ:*a82H[?<mcaj?Z4uB7#e=B-:<cJs<MY%_:]Rf5^6'YDg?mOnOW"a"H_H"4gl=VKOeI)]n)t-R=Gcpa,`=_kIPfZ8Q8Ujf5BEm-mPK^B9JGie>5o>P<J[GKj/\MjL1.dNiOp^%P%ePO=L[qm%Wn4d(Mhnr[;@oQ(,&6o)(8\D8Ei.t[T$'DjZP'k=Xe]5s&<,=nm7a<(<Li<XCh0pJ2i6<!`R9%ZhuRce[?20Q<:Z(%B3Ic4JthuZ!Qh-S-nEpIFp?+Y3uCo=dGlEd<O/(_8sNiji&fdtBs</.>K9>r12a4&FsmCmlBU^Hr),opA5CC>C/V_T/AtLa#9B>b%"$k!ViG!mhLj>p5l6&@""@TY7EEg3d(R^PM3dI]OG8.?R]pgn\fsZiDD.H#=?>JK'#^t#RpgsT&EJoan;H>,!DT1V4`Pj&KM";5@%HLp,DA8*%a[>[MO87@ejkf(MPJB!U?^!iot5*/j'FZb6G/',qZ%W;A*PLE3p2R4X0E'[?pRqUW8JfJ!83r*P+/Gp9;ee]nE:0C0i%.[d1XdhjEs_5ciaC.KJce:4E?L%1,':T_=UJtj<T#dd`mDi4],"/uAqM4j"><m+/F]jgsIIT8&,#apNghJfj<9CO.94Q1JrSUb6q%(`#WGUr>eb'E`2CegYF<<\V2oZPV&jfOdV+P%7[0F9AjVP+:Bt0@3Ub9+hCS]6"9)d[J7q#T1ug`l]qJ^Z.S>5;]J*lNe3*=(&`-%co-qR4\QK.NBGFhhLp+L]_LS6aa+C^Tq!5*8fra%%&/qZ2nB;4FoaTs6#&^S`\j9P?s_Itlo9V7RQ0Q,H9sb3J#3=7J^OQGOWr<7%=sHi^1HJ9@XS1E]3/diZ4"7:$S(*@rp/<qk<D\(.Wj/G0VT<.T$2as1oQ^S6`_N,o?uaHniOX?t_eRO*^R<910Mi4>Ht3\'"6V2S%??l`E=Gg!GAH:>"He+5u[R$NPbIK`G%6?I?!E7'DJ`l('4d4AH!Hg%C(!E--(kKanb@a[g14fs8n:E(pA\DY"k:Tc-c3kMSa0q'Z%ea]Rp8['$&#LgqA]@:rl,e/V>-TP1;JJ1@;'mg7drHq^uVofNLNaMr4*T1lrb,\<gp&4Wbai5^dm-M\b;!M&Ze.'JogVQp3E/c6]%A).13JVn56`2M(R2kP'k/>N(7lC9DerKWXc7QF+nhC)@MY7!m/\IUQh#(p)USJ.n;ScI4Y:T6m92\=QRdPeh/_=KY[`QLPrj%aLc%qgJeYi+/jV)$*JZi?cD_$G@iEpIj[%9+gN@j,qN)B?EViZetH?&Cosds)oXeJ!KYuT.0a%NV&i7qVTU>""-_$'@Z!)iI"E.KY4KR%fRgkEJa`_Jh\b5Uoad(R,`pg-q?JkcMD/M-3L;3/'<pG1(NDJqZ_h%$&"$(DIIL)7iE6e,>]fBX:,Qk)jGKZ[hZU4C(5cB>J7.$<%KDHag%\:!<2ul]XWnI]X"mJIi5sKo1<:*%2EGhg<"ggVN&iN"V836&Yn7s=E]?r;O#cY-cXMT,Q(c^h'<c(G.!'jtT;#fJ0n?H:!%;"L](OhBIWd5E/OJ2E%fqE^ePWZ_""@5:cjpd<^AgXR+r&Kl&0Dq%!R[OS/CrT=%a<"/t_PHld>NkVL/ah3K8Jq7\H`6d)7>>XV_%>R(I*D;J8(,15Car.``/;BR_oR[=*]`fAL5QO4SXFYi4B1tt_N-Rg+;`lK:,X!$]-/ZKqVq!ocfT>c^H)Z>]I.Ypd8lb$qq8s'3p%>(ptNV4O0OK9Oe],o))4`8m*?j"`A[0W6*>J7"P*TN@fW1gEIb"JR6ckDimiXJdDXU3b$%q-;,DMnl??2<l;6lg9i_d3,^)L=D5@%FX;]ND$/.`GP`ZYp4Z&JW%g'*S)Y1&96-32fqqW>Lg&Vd/c-Zg`$FSM65;(=0hRtA\imoR1*Y2?(DQ0^9G_+`B.O*QgatY_6efa\%>#VW_=Wi)o(U]nc6kVdQ#RP+*EiQHbP00DPKg;bQ21kA+[gXT0R"D;ES%8mG\Prtb5K89=EKjVM-%T',aJ'7d=PtL,J8%QBeY*R<%#H5s`6s8&@;%u,`OucDR+]o+aDX3QpNtdO>5Z1"E`kmSl)bV:"#;DN*9eSO<n`Uj@T_o@FQiUG<2)_J@lF;`#'$O!1JrqkK045T_%U1FJc$VW/T:pk*[kId.O6KhiIZFQhAl`adtSqB>,_87W@]I5P0j<BL2"]8fTl!S>.e_2.Q4c:Y>Q,++fH.s"!Fg0p$]+Xn#,4,LL%$OQ0tUqh1*>t@fIco,Y6*,%*Zh#K0bZ#h,H8ic::cQ2b2:*Q\noE.,cGN+V+/1G)K%15KQ##SsQB6gY&Ad5/@(]\:G@!>Xg94dUi%/K;dSXoifQ-sgS'b:2=^<:"6*BpE^9.Dtn=Ft8IHE]!ZI<?^>e<?Z'`'s[o_<$<n<JN[>/;KoMtUOM;$e>AJ;R>DSb):aYhO"_#K%&L(XBO4),1I>uGdN2i49!q.%q>qccLjcJD/X\L_M>+N=0e_,PNP9$b8J\QD^?>4=UH%KKr.N#?'6[<#nPfcXIcV&#;gl=nHMeeS3%bfk"48d^#4X)sCpB^#7`.\TG'e&S^(?@.OaLJR]lAEga:nAZj`V6(!gWA:iUV,bHYXLlo_Z<gYJd=.S`$CJ'5O$#X1Kr^Rl\+\ik%-<mf3Uh6o*Za<V1I&uC-4T`aZSL#?%Y[FKhgC5!0GR:mf\AQ+*XRi[>#"q.dKPn0m9DSoYUf\U79oPQFgVuMm:b):d$p]mb;X@Xl%&0F(*Agh*.mf?P=mN^]/a(,1fLBgC)4$$\-iS[3R%HhgC7%H*?23[?]QL#RH6ps0<.<b(Y,gbb"_NeWum%`"r^8!b_']^21?@5qi%Sq2Ju>CW*X)XUMu#&hp,)RP[l!4kZrD`dgpGkls.+d<BLEG+nmo&:<:H69*t2>SbY/3SNs$LY-'W.,f#T3qdSD*4YPh=7MnNM)oe%^qj)F5%3)f%)1DF;pbZ4>CWn,ca!5-!#35D)k&=<Cg0DWgDX1:D*$1I[fe)n#*6;CUDhrS6I66IO]8bo:-@OSLn.ofTr/o#E<*2p%f9]u^-a%=]d$%jLk'"N0*jaVp9YHq3'?`74LYi9]'#u\%-btogo_"s+*b4]D8aX'iOFJl5U_C#(qn;fF&tcQB?J257I6YLb%GagM%OX.PCECN(rhT,ck_<cfH_ANf2na=sB>d_)0&l]@ERqTeA*6?;+'hVFcQuo'*O>)GqDFXJ',pn&9Kp\FOYGgRd6je;%%NHuh)([eT%/:34rg0OSAeYtZC*mt`VH6Q>+H1n*K!=[h1IElrmF=)uT3PR8COrFos*W^NTXA6`L84PSIm0?WUCTGDOcK?tDMIPE"e2G:U3pe;&%5La)TEZXD0?`'T0G,%YMm[5l!^r"&i#mh^LSRDLCB/G0nMlN=fmeg,9UrtQ4"r85gk2V?]Wu3n21?Q%0ggSdLkCJgj)L"",S8!fW%)>MYj*dHA>8PE1,f]"7:A*nk?Di6($X<r=R\r,_K2"TqB'h3Y$fXRLDT7Fg/oUTWjp<EpbjUVbZ2JJIVF;\_jVY6t;/cc!!EW52T%.nr8DWs35W0hFFnZ5UZ]Z;#/"lY758\dXD"Wl@cM@OJ^M#ORhUG2<LFZ]O$Xif+X71I6+fD]o5O".#L>m1+6UprlIAi0j,'K+n!q%SKHR7f00&Yp,K`ic.g>7J?LG,@s5[Ej$OKeKrfD:4,6%P\#b[CkA\f`47N3T6K.7r1`grir05%5ObU&:#Suh3:YBI9Ar,N_s),U3%m`MI86ilcNY%:&Ac;.EOZ;?iKf>m.9Uib[p+GE\5K@'SKHg.*0jTCikaBJ!LS96+,2%42dL<Md<lWti#1Qur$atB$rNWW$K3b1sY%P8hn'>a5B'XJsiuS_SLe-E4Yj0dU:Hn'Mi0''8)/?J&'WmMsaa%i0fMi.ZT1Gn?0X#?rhZ8!opj3Fi9th$R)/2;h'+Z_RaZ2A?&W%Un[MkR-IpdrZ8%!hQPh4BFMfrR#MipA(H_sU8=f4MKic.^hi@IVG(?@ZTj>rqW4W'2DGZ(e9(;=-\aAc>\k9^]\(2r;qSNJb$E4S%J`XL*@X%:2fOqgCEc:^?i87+*>pJtWnW2/sYP,kG=^Gjf?h3t?c]t<Bf-a2<j1>VLe]+BNXXUNn%_/,n@uk`3?o;<,^nPCLg\#cK%K=\eT0'Egqgjf!)k0UU:')J?FZdq')OS[tAGiIKePm3E"RDfe^1&,>ak)cM\OWlR>p^(o5!lMmYABk:"!^+102C,oZSH+_SKK'5^%a_H"8j"(#^SH;126Ei4rS&LKL)JMX!.qDI14T9T&kdgK%=#9()pg)Yn^C.*tOSbYPbS`0GF`EJYl4$3Y0C)<:e2nZ,-t%AC06t+=%Nf8?NLZ"W^YT@3XTA1nmT9(hr8ZtB^aW!r<H"o-&#_,dnhood<:OjD`6AUrq]=u+i?uuq.;?LTjU6r/j0OfA^i2G+Q$4NDsrl65Q%>2/kkRTGkkBrZHtad4K2^u?/VE3PYXPWRepb0_76O+4%7erf4f6-Jsib,Td.i&6ke<G+9gVT5K@R=Wm\IQo)8#db6?NnmT&a/HQU%!%&"47-hh[!03Sk7DGc!+i%6/a5CbRO%a#AI?8\I"T!H5aJeMR^(:.WhJc@bl4faj3VD?C!&CiFD@3<oFPo_:F+t9?#Y%V.)[<2Q%fE<Mc4ofoT=Ug-cM5u+&$`O11$kJaY>pN1B+".kT]WeY!SGE^_'Q3V+iAdba\\ld<cAN#iU<>#:">D2a!F:u!NE[k@oJWs'"Y:)&%rGEqL$F5uHp_'R4mMIKXg(P44+e[o=Da;n7?lhKUMX8?.j::8K8m5F!HVMr>.r[?IT'08j3M7"$Of9`CR=nu6Gf)ganLC-6-;bC#%!'8GTS*Yp?m?M#p)Iq!*H;f.m-^t0VAtSEXNp?h,D#)>?8W/*BM2NWh%"Sd>>o'n:JAoUu''Is8!-i%9(K(WFTGmc(^mp[PmDq3p%(5&.)*5i/9Q.ZC.'4l"V4Xs@j.)p/WXEP#:XRYS]%Le]"(<5^a$nMHJ"1@'?3+I%/"9poh,:=&1?O)B*3:78KFpoW2Z97Nj8`amk%-Sb>u6R!r\a^1PrE#+!m*])no4E:[+^R*MGC8ki@-OnG@b&Z\h8.SgJBQm]:]6Pr]";WAM4&]aF\^V!^;!1X0:GblkCYn&CKg&Lk%%T[$O3,8N,/8LB0lm,8421fi,9pEo(<PFIh`[CFkS_HbOL8h!YZ*.FE(N_=&!S1nqe*B1XTfPn93KtT,&X]q]bk;^18m+/u!2('_%fKr`3QXWn0;WnN%;9Nf&*5)B*0k8:ZOB/'l:^)ln%=gq6P-?&*Fp&>;*[m4e335@6g&[;?26"K8"&`-8"@AZ1UNE/EObE;T.Ou)^%+j!<uj*SP'eCo*TG0G5B/f*j5]p[2je.sje$Tm=_luJ?2H&3H]1fi<gVSR<YS99/LH6*k>1q?3\B+kgt%3o9e%*:8Xonm"/\q+]4%gJ!P5e1)ZCDY\^R!KUCCpm(fOP`BduE%M_'o&1i3jHHOTiUDQV-HFB[Jg:%;nZT?j'6X3K,8m96OAel<Jl#3ZcJU@p;&c`^ME!^5%::OJ-gZU&]Jm^m01Q_99.`S/2;@F5[OV'`3)BeC&`+!M@eebQ$J1t/A"f!-EL-p4e(=m$4aEiG^:*P9a7J0N./X3>p=>rR^-:]*[%Z:!p).f(R=Z<oR-%$=_RFt8Y=TaJ"pAbJ(t\NhVs8mBE*e<@8KAMR--IEXO!3\--_+$(%Ui_,_f5!c1*gj&Y;LB&C@"RHo`bUGKD%W4`oj2\rYXMRp`?8J+_P?$_B/WuJ2Uh4.mQ%nSiJ7_V]&B6dR^",V:>(oRb\&\iGgS2o0.n)^ACKh*_:b1$GcYsfYg:_or=+IL3T%URPclAW`LqaJ)aF\=dDr)Dk!1V$#mLUOqa/`%s;b^1rYl!9-]nM"h"YX,E4_"<S'CJ1sU-fuJ]5>-7I\j]h%I(`-HaV#r.YC+5bs%!E0Pj\AfD%q5Pjn0nX'2#99$Hj#lDn(H\^,&qUHs[DNct"TU=IqU.YW`q]Ml#fU+/QtJ+/qg^>R:LPc=Rk2*p@nTM`./camc\Qr]%&Q6fKLa'B-&<O5FTQ"VY52YQX96Q^LL!$;7B)[4Ba21cCJmlVOAOWhgi%qHJD)bDA1N1R`N3J*Zpi5Ot'I&s.'WWOO1LG:M%mJKH%5"2c\d]XAT-tN/'I]I(E!=rl.[g*s8Dkpb1COre+6&as-63,K:mIO,M#0%dT@'/L0)9UTo7gVRE"g)LYjcUb5ap_QZ06(Q_^.NZ9%B.^1Md0#.8\>OW;7p@j>)nqJbJ[kMQH;sfm<7T1/6k0jKfK8?5EmuA)/35Br=DT@h=C4mV9T44r=RsG)!CV@kE,hi10`sfc$,VTu%NspX"$O?#uOU.u7h$0-C]Qc>+EL*>!$Et#5?pJV>d6!04/Ja4P\s-p3$E4T(ZG`PYX#V\EU\(c=nH8/WocSGZ;8HR1-C4i>0fWqp%5c2h\FPfEl7B.ft=sBl,?sup`(7]N)@G2jgnk.IYLdegk5.T=t-.@H<^Ja&:9>2m3K1f+#?)$i_(`rc?k4>Bb+98N'njP01$*9I,%R2jD"8-e"i/DjZB"QBTT_<FEK"W:5jaqE2L,,"+HahT9'@A-,KJ@"-iR#cA'Uk@_rCSjsqO^pAE:d&KT6oq,Te]J17o]T$1_+SVI%*tX9(0EMTBRA_HdFO50E"]tj.8gWpkS0Y@I%K!X;e3-D/L)20K0bb_Q>RO>eiI[0,nAUn$BY4?@APb,<G)ibA>H1Alf/c8j6BqT6%%1aSIrjW9/H;#kY1bLU6[T-'q"g"p;,-oD)p7i&I5XSAJ9)PR[8l9u-,V&.-*CuTOL'8QqTnF6UCig:U:6dVT#O'Qf!T8P4+c/!)%`X-<T:No5\*%-ioEfY%1ZbUP),md6o5)@FMMaYAldj!nKWWibtE]XkW$E;t5_m14X=BLT,H\8b5=dMfnlDT=t+K%9<pKWkQfe;R>%-;bI-<sV+lX8qJLlC9^D>?(2Mjp[@-L"Qs3"0!l8.(GUoidR.a<CfB;h-gphn%_m_l9hr7X$`nn!84WGG)[5E=d^b,"-0MhePPK.%-85=TFrrb9_Uo]+X96h,_?:#Zo`F&=!VVkHJ[+'s5!oqlp=sq166RE["1<c]6kZf<(!.8F$"MggMDj<8M=M:l619EF&^-mRGs2f.%5f8<3FMhKrA3YoO"-U=mar;.@`g](9H%RF':-D[?7Zo6RnsYs_F9dum7.fD&(klJD?C*/lA!O`JQ]^EcJLmB\$@\c\`,cLq&=fPk%CBR73>@o'_9Ap:'EIQ>eS8"JnP,?351_hF*UZ?d0;34F]+ir<2)BcCG;SP\d+,NU-&?mL`fYN=EoP+_/%18NOJS3b/`2C:7rt\hW%DM+OeDpYR5b([8X7Q%Pa35RN::)ULbO97uC)&0@<E!JgV!6iAW5g0s2B=4Zq_9"Si^O[bpFMKA@bW9Ja8T\>m#-_$3[lT:FTG3UT%:q;*`+jODaImbiC1etF";rW,VaLEr.L6b;R6t8[@:MHacJR<T<@*oBoWa*JJ'VX)[fUN24K*Wc'=G_]B/%t:()&LlKUidYV^-Pk`%IZ?d]r@2G98n\'17^@9[M$8UBQkbGlasJ-"3n$Li%,\:#6@'@e!14mR2a[W_+b(r($G2+_SRB;V()7oi04Dob8'aQ!)0(q,lo\TC%n>q=tP#i8p"s5<CqrPe]UFD)6VDHN?$DiU@:oOH\L5Dn2nhCE(Ue44Z2<\Uf'?M?e"d2nFVuV@cMTRq\ScPJ%P(Ze(Sek$il5M!f%W?7pB/FGem2(+k2;if!4Lg8Er_ls>'3[%Eff$JXBFqluq^l$QHMM3>"DSkp^i^T6(nkF*P9U'itk,<S7BPYQeUNstP>"QL:P'RAP%C!Mm5eBdB9a_*L4;t3o^@[3::qRN+*_eMOQD(_33V,sY$=_NiuY]5=^1(+KcD*['O$gF=\?_d=hA<e'lm&/-2'@E!Dq%O'9XR`d'%f8oiWQ[j`+J9F@U;d<"E![@(Uc\Ed!1.ibaXpW=Ic6?Zn9l4CNC'S2Na@+[f"0m?%mD)dNdS>bW6C<AOLqk>(;m-^sH@#CNL*j/P%-B09B7^BiQkpg.jC6VG/$d'eC1QV\N_k9u!'m_5'e#c3T>M:ls)*CR14tUBG6A@T'(MtbHE+mF<Xe&mEA+i+Wo54>V?mlgM66irl%>%(\a]Sd6HQu.aic=LUmck%e;caHK1+C.n"B3"lF8cmF?\3ppi)GlqO&oC/'G%GBQIaMV#]:UNc9I`XLXkb&7TG;$&(C@a0im:`3%)^MjJ1n]XEE(F/eM=I3@!I[-;k>NeI-)*:_V,fq;(fg(N'MU"%A)J*JJZ_<>nKA:2OJ%dS[.7[lEp1lVKUlc+0/m:&U%re#%6V>,%Olfo5gsV==Kt"*RcC@6U6G6/TZB241Gm*=5^dQ\nb=l!;0Op"m<>JK[!5Mo?-"rPk+<i?/$=YCa"-^\tl'J1Je#i5C$&kH+m*S\S%AOO4\//o2""0W`L9oX[&cC=S5-a4NNfQW3.?DHjWN>E!H._!Q'\=maRKs5-q#G$Mf32hIqDO\]m9B2F<@"E[p(?'@9dAc.o)H9r1%Xt"gf2%k%ae_^JpAp!@<jqM.A\`a+u_^?di:/,G!mOUrE@X`j=X\K!kae.:;^'O=`[X,5*<u&NW-KKiHBd3/iN#EBa:8J;m-RS`q%(?Qi?+t`_u:k3Bsbrk;[U!Ba'72H@C76U,rAQ1d4#<iL,/;[Y"))/_-^Ha2n%O=Zb80)5(Fs-mtSAq8$E<j_7`*$uiTJ$t8Q4#Y:%#CFWU15V2+OE$nhKANXQ#g/+S6#`i;A1AWcD.ArB95&&'"hqO%X=UqN?j'X]mXWX90J9/?"G'0[a9W21G#9"J0]>J<hIsH3F*E1l%PSd6ZeiGMq_:G<Z9pu&3W^\TdV3YAmP(:i77#1jNin+gTP=]FiY5J\28qb+c[#>?Kd,rT$%MOD;<7G#=(p,SV$'J"!7bat[lfTVf%$\P71U^$m40/\gp<j[Q?pe0]I@<"!L8KLq%2Y3M/0Cc/0(GsNb+EpL"FB&b5GSr[BE&Qq0H4At-@l\<QHn0s[QM%#]Z=$u(!qieJ%3s3.tVutqJ6b*&>l]^pj%VEi`knce27*GKiH+t.IFQ2NQ@.hU"=p#m,[G6GOQ4^2t/20@_0*SSm=?k$\)m%U<g?M5#qrF>HFLEBM%g1qh'$NT3E%&?1ckIX5]TZBS(8rf&m=?Zgp<*X;Yr#Z%LTrf'A[\Ue5R&ZB>0<'8KjT5mp[TB0X=*:JNiqMXef7kLe*SC_"CfKhg%8pK2bY*m-S3IDSu=oO@9hEnon..R1?N=?'1g!;G_Am(0DIT[krHp7G%X-e2>q)imQGB*iZ)**+<,jgPtQ0j9Q\,bVj(aC=I#aZ8_%RMniJ-f253`po^0jghP"]00hMV2R:_oq9W_RS07"89D79lb/+hZCup@ZoaN@T%MW;!.8cA="_Wd6PS$>"iWRkTY!s%8#gDJPsL7q%o>*rii/MF0U&ff#h?i^ROi9g*Z(`:ike!\&!d5iC_$4'2Ul#Up>K(;DX'nIqrm8f,WbNA:P]]8n2<dAR[")KlnhLf5fcj3be(q^.%H855sUZM@"2[o+aE(3Z,'S;=PbX%>smglMX/JKB<=b*:lW5S-dd:339Q)BXig1>UVG/*[V4bsjZBAp3#:r%,0llUgCTgGMkNKS>a%8G<RG78S/<)\R+%[/L$XHP\P"DBiq9?\%TA]//0;G"`N6ig/0J1Ls.aA[a7Nkje??HCEY9ZE:k>eP43Wdr37f"H\mK9hH`Y9%G@_%-DQYn!/X>kil$ZSl>$f?%%CRc#7,n.pHjI^[fJ<YJW"O^,N/og-tbV&Y'8A.=Np"pYl)dc)=TAE&bZn`:)#rB6YDdX`*TY)K413X%cY6;M%RWC8U[:Q*NDC:rfqFe1#S7kL%D@J7BGM;j`Rpjm7!124Mb15]"45C;LEI>>6)5qU\uDVQJ=fu8=/93'Rd:J?9GM5AHS;6'%;ug9SMm"Ft9lHu(knTtqAM<kr9RAGf"uU$mJ2<2C0b-NTrI\pKG(1p-nc40grLlQ6rAZgl]=f26VuTjj6=h%+\qL7iM(*t"<7:(T%Y!E^OT\kZc6H%a=`SS&r'[3!'jf*TS]nunaEkTN'9fi0=L`RC,V%!XM:<eY9"G25@>Hp0u&.@<We^*\Xm@cUib50fiJ47=aE0pZm%Rn0`'MXf0foNX-O76bY)_('td8^YY8.`Sn`<K+F`B#.S?,n1+jYGDmB*taf"@`/It*EagF\s`t4KGFuhp-01ih-T-5c,?D=MDrZn%12!RJ6U>P_G/L1Wm"'7he!LE7;72ZI'/Er5'sts&^,HY4JUt4lm!f$99J]k9e4p$&SK+YSZp=[;/A$qEM&UO)[P3OrpOh-l90dFr%BZW?*[?nSFXO_\9HdbL+[d5\OTSk2h\=O,Co5mn7W`;*l/s%sIiA4M&"9n<IE62KhI<)aV@DI%tp?f]9<XJLCL'$NAr(KG2pEKTp%>RZ!!BAdb5.[%^[%:C0_#c$OlCTq:]Q9dUOH`Xc=,'I"RbZ3b.o$3KDUI*\26sUWJLs!%'MT'7WP5Bbt"Y+ta4C&PdiF[ojZ"A>#%"Vr4IEP"gN7^U;CUmDASEO]PLHt![W"kkuA:?d\dl0>/s)RN[p^T?LRZ7tcn=ONN*7X2WUf_Pg+.cB"`,0X3$qp&d<%=tu=)F_S1%YMDr=>TuRF9.,`)&]PFS$MLKY])kL?N33?MMVXAFk+GAh`?LM9b\.[pHH[>;(SqG[6"_B-G$$_=OuiDp^qW_J'UtZu:iQhNTX$0o%2(`(9:Ah>8al<A?Jg1:sJ<AnR1^-t^n?.%?es<Ub1eLr`EYNFe=(gY`((L?,,7,[@T:d>0O^Q5Q$68We"C3)V/\EHMMZF^Q@tlm-%GR7"G%i\IS#$u%0:bM!S/[t>;^_maKj`*&A_&S2)I"NW-:"Bs+!1`%(2OUSE$DY-o)u..cmSGHhE%OWp&'-k"+F-O>Qap;[7j7/J%d>jYDMj-#C3fTP&MG#)CcoUC3ZsY`6:*Rq'>J<#!,Qe/_oo7P5%LA0;)XtU3WsJ;N^>Zn\a-ZlHr%b"8N?5K29QTmlI[6*I5dq1T%@[3sKFW$B0nLBcK>Sh"n#jNOn]nO3Mgr;pc$):cD,"e2P"V4F%"#uLkU)D]7^VAV@Yl[<42%=n2!Z#:HYmB$?#-8-*0d9eCBI\-/%G!$D_'0!6g833k>25">*KpW:<UI<25K"ugM/G(hYs&'DOiggOR(-<I^7#.]]%qD59Y$:?5j\9g^2]p/I&rjgTY`Zb"g!YbB!Nl'3%;->/F>>,gI&&_\.V8M,3+1<Uu)VAKHqT+DEoKroUnTG%td'UNWJNa_g>ZTN/@ltP2l_S/6SQ2,JE8CS2&t6ak[U`@!/>j*9Ot/<<%Eo=Km*.4g&H\;L;TM8ZTZ)ZBpkJ3Z)[*RTjR]6R`Ri$H+i8&M;<HOZ3^I/@*")WWW_eTuKj/YMD3QD/&Ym3-<:ot(Ho"DNG$KPMN%o+Bob`kYk2-XY8<_"ZJ#Eh$MgMk54k:@5/,BHaS4Xq@bc+QO7q)N%Vur<;HUC<6qe?9I"K8IO_U6XuG-UW'H5b((BPJs%V3ji8=T%Fr]JJpLYr@JkcWCQ>Q(eGB*"&[fGo[fACl>M"s8J@B[X"BR>M?=;P8iOXn7)cQGVSkGfF#@N#A9/4'IV7+mVikQ^XEeCp.NTtiDs%.!WUn*hD8B/1-1XEe5ReZ-qoCLk>?KV@@,nK%dQp"p0NX[m.3cl5V`tF\#;8,SmoY273td8r0<!,srkH+`/q-]fP'UMo82do,Q`;%7X'0<A5e"-.]CTk$#;sb+%qN'>BZ_+S&R2oEa:h0ZN.Z'Z%4p@n4m"=%jqYA5ECCi2'dkol8\-!99(\S!J-K@`V>5F-pYQ^R,Yqf%^d&D)H#0`:)Ki9r?emG&'idqG*[5\eB,nI2dW*N"!loC:odkZ-Q>&d0G>,uKOeKD-n#mP^>HjN`Z5LH+>Bu/#ip-b0;1kAmk:-\[%T.CMH@0^2<nD^lQ@=SB'oWh)Uoc@cMd:Nugb<inmC`8%6$=39LCpgn?rCk652Okod1mSt$PsLc<@*=.i0=6F#J[FA2cdh15<kWA2%VCS_X5$o'ZEeoS`%=p>Q[V@Mr#78oa2(c-k@,d>`,Bun56$qE=WFihJ1nZq.@gc+3GK%+M@6fm*8J@rK)0RQ'3qpPJPoQ78ROXh]%/\`*IN!jC`bN,@S_%5&%74g%S()VTA1a??Alh*9V*d]UH5,p<hCMSSt*$D`CKoqMn><U5.X9pGah%dAO%egP=[:L']^nS]1)]NrQ%)K'_J$ZH]=c.621"W>Qk)B7Nrp3uhkV2/O2SHsc]*8j>]2sG3=FM:7k5%(X`];$2G0c>;,O;R,J)/G"JM%RcDZ5jR8_=S9B^+j/.%`3_#!+ZZFnRnqY_/F73%&SM`Bq(+cA!3IFKeqUDMPH)/N2YUAfRp>iH<WVD<qMtnKVd1nL%*MW#O<f:pEtuU+P/Le-6Cg`je4@%>%"%p^_K#,0U+e`fVb/,eORuTDZW=m/YKF2\r7l-a`bKN[@2E]`c(*Jc&)$HFDc#BG1KP<FNh%%s%A)s`2pdA$]P8r]bbDcuhZ-i`%%A+O>'"*qlr28mKV*K:??%f?'G[@oAt9XQRUV@%@b[g$G_%8<oJ/J2/Zj:9g%Q^*rj+g-PWAXke)"'a;.a1Eg8(G7m!ouiU48H]?F%DNHXC-tKnY!hY-JeEf7FUp<sV3*(PUU?;/[0K)0hn?4Se]u<"BL<tZJ^*1AWAHRN!OI%`3d%_kFl.1HFl,RCX&PCn0mOf()jOWk4%#U`'^Sd54='ModBmm%[!(-\4?h+u-4XsW5Kd.XoEgeeKa/c/el\F[%<^KILn8M+I\;$F$?eUi&QX':\G\F'%DPjq<NH8bm>O%<.'%OI=B:USV-(-^phPZ'><%0fREnB*5qE1C-HJ^@_c798\)H.%Jf?,&;f5A33BJT]s)!/<]N59(p+2G0k"R)_U!$bcG[&oPV-S;n'qH%XER4h4'$>eVh5h$"kjukZrX$Y:PZP4kqj!0]T0cZZe678BQ-<-("PPQ$7s=63*o+6dX_,P7C>0:LbqMZO')l/8CH,,cT+i)W(7hl%7-PR][OQ"!7gm(CT.t)9000KOL^H<?YMd''RM1d.P0rS\TD'qi>"Jmc9)u1]>i1sL"`pOL:eHQ0`</+>5d"$;iDPu/Q[;?TK"2u^%L0t?+i/]s+)Rb`#B,(nVR5)TUc)"p^;+G-$6\QEt^kUd)7g4jWPT_t,JC,>c<J"NFc1keigD"NI5ob#8k#B^ZBWu<W*%jH!(@O)B%4Oaf524gjnLk'ECAk"$R*F_n_>-T\*\SiPQo3hX><p).b[T'ReA?!q%_&3-Am6\M6!oMOR<@OFUk6F>GLaF;j0TZ;:GTNoO#Tklf%FqN=9O1<eh-Id["=Gr2HW0hY8(mQ)K_!!8+,2m;l1/fK5Zkcb[2D,YJ(3BP8(Xt'>BQs'.'Y,CP*eG]ofT`\7W3iK,7n21NpQ#\Q%'!`MP.\pu.hZ.H&(n4Z;&hc?XLKn<'V@HTq<&.jO]=r(8R#*d64#"00CP/Z6i"8Kq!@0MaZdE_i;<Ai6#oKA16lgjf`WlY841,H=%j@P5Wg!Qhf^aHma/o/o.$>beU#U10VE"X?[3]3huB^.tu,7XQfYZE?]!$#d<Jd,oX+>0-T#dTr>G=s@g,K?<.?8<;WB7p&!h?-AZ%"i;T'J!N6eqf/j2P)V1T(RgK/!cOKb;2lpEh^Cf&]0r6XYbiYD3Z30s*G%O7)trL7qdE1E(>d`6'hKBQ_.,R(#Q]jE!hiG!!2R3R%8*"J6j)cZ.GTMWRC+,-Z1$hNtMs"N$N&Iddp3?X1)R18]X2bHS"2?_/),V3E@9X,6fT:%=5qO^!A1XSr%dUr?[[(D/Hi%46g<cB)%jRkD>2PYdfZS3dTJjr0Lm]H]XD6[kIn#9]<$HktQMCchU#)dsWmF2EiME*:\m*/^?4W$)WDO,ndn`ZI,8rMUp*UO%2NP^FI1,[_q%ZFE;YS&ldCKK\dc9eL1^#mjP=<Z1AHSd&`%6lCr27>:u#FTn\eKWMI_$N_1<a>O=\&<&o:JN;Na)1&DC$C,`k]U%Y^8:\r'miZHJ%"'G'.A^b,d6>%@?/L&RM%Rl&Dipddc[;5jj-^ed*:RKp3.J'rIC<L8d&D0QE]tfqElY$iQ"ZS^Y"K&XA5V*I*10B9n,Va.9TWk04%Q=Q+'`7^9S<qn4_J@1+4an^23EU,21?B^bU0E^39>\blI;;YJMOstfc81\qEe?Nb?JA;?@V23RABG84N6[@Er!`mD^;,hV`G'l]W%9*8j/Rq/H.0.*XbQQOk>QZ:-,3uBn_ES</`-/k:nPSo,2eN*'>6s.u0bduurm^`oTWuEmX,dqL9rn8)ARAI&'kd*1+CME$[G;FG#%?4')ko$D[;ku,]51Oji5i^V-g:J.55Ub#1XWNlXqYmr,89nECm6%QJj\2jatN]@-m\+P'S.iR];]YGc?Ld^8QX6)/\@7n6aX2<]b%)??Oq@2^FD37FW"UE*oGP5cQhDUtL9$b&2&h^H8kln*)gk+s4/lCQ12n%]_j=l`"2$l05WZRg(;=_q5&>6*)]\o&d\;CNaP>fD?L%Z]_RL:k2,gKbY/_Tlc$X@XL^Gef3X7a=,eVMY_"PGmfXLe<38C1W:q8%>NkQ>;_0n5qV3FY?RH]-"^(ZTcTXGG8VS/j@WO]!.ZKL%fim($F08sh*0V]"*(G!2,WT-0TOh>HXT]](SW,pQHc+KU5?-F]@`p(@!Lr'iE#iL*Elfr'Wl%K'K+[M1J84l:=<15CpaEe/PpaJp%6uVVYW<6\[o+oRT1J)Cs?^#?Ob6AqgbGJu3@)T8i7W/UoPJLZP\WoZQIN^,O@E#!dB[O2UboNJtm#r"#Q6`7=H^^gC)jd6rrD78]%Y]:Z^EOE+\khBcsGSLqP\VdWtWal5G+l_F\`Gr31@?WF:SRPn<,6(jK8d]MDfFirl.,%dVI#I=IC)G_shWUVQLO;Z3hP;r(*USO-%Ji*nU$^V!1#(QOQ<8``_hm2Gs?O(\8'A%Z?.#r?`DaiS,GQtuph?a-P=M\$sHc\%ek$[rLd#QHn<Md7rK5j7Y1"?@bJDI4`5Y)Hd%!3QAbd'?u*!4l>K401313<U6$H$[Z-95^C*#-m#.[8dHXPK]k*,i6db57t7g**3P.7q8i4%eIToQ/J5K%#&&77CdUOBf'#`]d6Yf%$cR=Z+.KG6RVFYd8.\.MCtkanl<cFLQH3a=Y`"%7EP(-R8EQo].U<Q7kU5sE?o)5'+&Q'1.2VXum*5"qp$t5U7C'5&R&E[ar@HJt%T7:Z-#@@GG*qAWC=32F<N&A7OEm@b-FN1dSSnX]aEU<+H8G:"&^ob%(n`/6LdbX05-l#mO$?`_tY#5<W<!<.38mZEd.R)T"/$mKg%RaR9;@&I*^Oej2[Y2_U_>pZ[c4C7(?NaG#1)7a#i,puV+5"cQu"EP((LkWbg4ks?'ri+2Zc"S/(hc.(.cZ1<E4g(5%/QZC7[\fY`%m_SlucBC/_P$U/HCfH.1RUutA38[s9<u[_OlRT&cZ1"6)0a0a7VoMj4pPISkPFAuiV5ntC@""mNr55QZmE"0*^2!Z863bXnFt97X%'&g+-1LU2`D"@Vpo/kf'%G@tFN\^IY8"q!Vo\\!X2,Zu+\gVa7RE/n385`<Z5nOom<_c%M/_KG'Ogfs!K,6E^'[dsI[ZEX_K;@ld%`73lp4OJ_s]d2\1&H>tVa\og.Q(h*&'W2+b/Zq[HalM"*,=r#%WCZVRD#$q+cAhs;R>Yo,$?<7[rb)FlMdDVmLio2Se0/4aVH[Wb%/$q5M2'Qo9]mki''8sV$2<!r`*ijE9ZPGE$-lP(paa@-;4-eSIeRXgl?B\Es)rr?H2Sr0XUn!s.\s"jO?aaR1A5F!q&YEME)(t)$%F7Wri)>R=U8KrRog'Tc:U0,Muk1+i3#79HPQr!8'+L^V(Pu0rDa9H9WmZK;cV`^L9iE\e@m4TO<.F\O6[8E;*rjbAJ-V7r=G$tO/%o\tZ<Z]]rM6tfu\#qb%+UK<A?lT,P8Kf_qBDC0qcZ<>S[PE>f.b#7E;D_9a911.PuKkQ7!6V(^N;,Eh-QR^\aW!SnaS6>)fT:),u%lXD.7IFQ87HBk5"/m07l&KhHtY,e+gFY't/g0CNV[2i9AdqAhj]DXS?Id1a=9RA&Wp23*s[\(.>T8p@P`jVKDgJ;n*T-ip&F_ps>%B`"d\c\28HlXretTB]`s&o2M\`NkTPip?Bfd5Jttn#)rJSkaKuZr]#41e-4q?,*##Qssl^RWGp0mL\*A8<r*&p\l="CUa?#c<a7q%=6IVFCJg:LCAY!PI'NW,p%rI.rNt:-C4k;PeOI'jLd")u;j1(sQ0tPMpX=rs</qeYR^&K>DEf.Y5E0ME/[h:;[\("=m/-b2`2u<6%Ph[e4[`8k!cgHrn"pR2[D*Qi&XL2o9p@qCV/mu'-D+WK2)S1p7gJ=;`B`%%%ql+N2Bsdigp%rI?IS)cCITitJ13BQ2L]'&jgC%*=%LRk6p;+-UMpJ[:;CAY!Zr=fPUH1St')Kf?8IQnih5:s=9[LpSt5@'56m\aDje]qA8cmfCk=1F$k4Z)<H`aTQqGb`iUe\<[jrG,H[%FqSXP*ge$^cu!.fUG1RSFN;#]P";EjeI5P9oA*FnbrDYAUqThK\i,C5PGi<LfcHF#h<"W2'XTLE;U#gX>:r:?A9s3WapZWC/$$Oi%(bE+Y8ra6&BHnDp7!080S<1aJKUb16'hC:mcW;ti-AVNiF.q[Q=B&*WR$5I@dZ]bHH,"%Dec6\ZQ!:s+p!$W_<$F84H;t`A<cb4`%;8AT9.Y`lG:09KN`,50NW1$Wm-4:PU7ACEqA80@_!"r@k\2pO,'jeN/#(58.Gl0'Mp+^ai-ALHq8-^>M7aOUV$a4>Ged!WaJshF:%f4YnD"D3bJ#J<edJtiqdO:4FqbBC_F4=C[iETT7@&"&2:P$-4f'mSMP&LVOE/aGU-;%g1dBc$3M/Y'sWZ60Ye%BJ10=]gfUCF5kM%!:[3(;mBG'=&`]W+X%sI1LVL8X]7'idXk?DjHZ(jBH3G`k3LVHqBhUpS?^J9ns_V#?4&HBTWqg[P:J-</SLe&<M<h&)%i5]ZcPrg%POQ*W`do3G:s;@j[pd[cQ3::YZtqh,L-d9Z/2-q+_f>B:cpUprJo<t@=2hkl@\p9('QH]dj6":]`>DO@je?1SI5"kaE4/m\ZQ`AU%kHYIITs02*OgZ?k"b=OJ`r]_`j%h142RR4c1.kCm?*;T'q9gYOKOc?%^bCsOjqE#;'F@%N%m1k(W.6Hp,tZ.@$'3I6;,QHj#fA1-%9=O"[qiiZ&*tmo`S<f<CMMc+ajDm?_Ni7ic,))'K$D0]0aI4C<HVe/e-We:@:^$jYZ`k>qAq_R$$Rc([:8N@Z<.@kb<m<>>Z9d+0%9GkkFMJA^/L/mg1$F62C@C=-U!bXrhA\uiH28&gZWOem8Re:]%[M,qOSqX8eT`RLaYuniU?*,]lk>3jB3R&ei/#`o^4QphM'tdF1%[R?UrU'HFQFREC""o+@;L,&^/YEg3"[NItc)BAH\#>O[$mFVG5B;JnXW1qOhEG.JXm+Y5SgB$;W.Q_sI8k'?G$]??H>u!F3>Go,>%D"PruogYiEF:s@pkEF#Y=Jdm=bb%<fNWr#qkjsCD-S](D`hpj+M".(4'P3.A(1tJk;6El2%BogS\lEcW,I,W#Uehd_((3#!DqQj]%_P>-GgS0Em8*F;^XCMJLUn?:e<&W7"ae1=EBf8:\]())bgE/0a=XI[^6"=d\i@2CkmJRmCd,(Wj@B+H<X\gkl0Dfm.)R:jdI/bg4%U]]o`M$MeM1u?;/X`E*R9WbH_eouPCeqIj6nHT60/Q2b\\-T;8D9Md\/.Jierj.tY"&-pY3\1K.EE9CYc7\F"iI;J<R4/#F!_efP%pDA=p@YAF=KW6lTK\eIb=!Y66ZE5@(`[e@),2,fmfj!q!C):ic`E$90&2QSr,ond[-lT']MRAFG4:Su@"du",E7Ue>m8cSn$5gOe%L#X"n;ujsfs/mP,1[jT=M&<]_d%R-*\5@kKEtq>)$&RJ?$lghL.$VECph5`5+NMJ[a4VnQ5A?WbXb%$jS^`t)_IK]u)(;r:$>A'u%[^-@DDg\af4W+a_4`mS1(8i'FC$NP;Rb:e!0M8s'0aCNHV+sfVZK5$o=%Jn'`^PYjO?'Qt<1T^%Q9ennGWtp8bFsL/nI<)'DtUgR%MSM/rpFq7Wkh[F^RAkC5_2Tbo3>"P1[k05+[3,V&08ntgS%Ye)ZBhX$.\9G1BZY61*C.Xh5i-TBP=ZCOC05f4#^T-CB],1q(e6+s%$\4tWHJ3M"4DKa-?B5,mDNS--CuRGg]2<FhW^Y0DoVQ$"heGB!9*uFQ:c\W%bif"VIE#F&A?l<=8t<r\mRdru6Nt_`'SR6JZ%/lD%1XiDeTTKN>`Z23!f)a^ie+FRNWh(pXM@U:;D:gV\-=aLmE]=CU?s8C6#)]IH:?..V"^90fLhb[.g+mhPYf(KX,WCalB9'u">*\`T%NQf55?-(kf*TLOb/`G:-[^[`n<q+]B-Nk`L/OakMRjga.JW81Q_*MQi7#;!n#Dkt;R20?J4,'jS-JqmTbtUnj[F)=B0OTN&C<:$'%>2OqfQ6Mi)P/T>qA(,"o<O5r<0Sm9dBH1XW,1MZOjp'U`1/=W2g"9CDg@I%YC%3f%#j$ut@',mli7PX';H+JRF/ApV#+\[YkpdAu%$Q0>:/&*LY)%4('bsBUU/66.&%@@ti8>oV;DA4sSgr;g=/6g+tW`;cr\M<n4]$RDGeFuHl9N%D.2l90/!C@^lT_&>679(D('&XeI%W#_N4O+#&<\;aTJ#3p(?C6p<SCN6boi(V4V(d#?[%92T,<?mBo3q0BK5V,7g,]f[9`9KJZ3A+Uf3.\&0m6jh62\LD+2RrufHOY+d%4mn,B&nVH*aP:HUZ*uNU`+#SG.=_b"q]%HhOGr&]"<N7b()8[n0g[U<@XFR4nI:jDMP15;^ihHdm&45hOE+L;_g.4agM26t-+nSk%LU!,T$7bgrL#^XnAR@]&^Ca>OoX-^5bXP6Y&lll*V8oI=S/F:$SK`U+Ut@6n'a/+ojre1$YTMDkM0s9E_%>U[HGLUZlb_VO=eFqr%Xld/c#ZJ8X)g=4,?ubN)')B#mG4JJ)7I5?=X!O]XdA!dc2U[+Eh+P6(+CURFH7$X#6b4d:1PPA-KTj7k_fgAiGUY?m'7u=m,tg07%S1e%t\Wlp.8kB[)Z)tS`ks0VEM*Z2KKME\+bAd),RsSOATNRO_Z,79;bj.@p+t*h3V'FF^/F*;5I`-)QoFf7T('(6Hn@g3\=+sA%%$;i1$MHC#'jukP5*XSNOlT0WFou8Ar(9EQ$KJ)JX]L?:T,I(/D'+G!*R,JCX(u<@@],<IKqnXaY$gMC;(Fk_,[;QoHFdPj-KaPL8%[Q?CaIn4''<"r>2CHjMo)TKW&ZRStj*#(Nn#`Ke_AfJE$L6eHDZ,5]b0b:#;pj*#U(U2PCFg?t9`Je(rD-s`1GdCp%[HHqHE:g3@%2tY6Ril]?&&-j]YX`b_$YKg&)OrkPBM"oV2#k6=lq`4a;XeZ32Hr6nKIQU#WXp2LoGVkV<Qk%4aTNm+K:i7XjkU9=9;Y#u1WF_CU%oAN`m8uk<RQ/-jFDI4->Jt_X><ajm_QOP:+^f<"$H.GS&6?<`khnQ?PlM7_KK$2hEmpdo\!>^_X`oh<Qi%E[m_]Agf7\o;,cZ9T$%i/("+]FIAOX,F4I#L$X@@\L8a<@)E[-pn*arN,7:8BC07Tu7%+U(Bu$TI`"l1:=$FCrbWc[o*fuU53`s5_AC5Jmr#AU*u&P*1k>.%3&Vd83BjcA(2cY+Yj,aI=U5X/W4mTk.K`L5rcTdu'pO.#/;EVn(ugcdVWjr@<[=Saa^)t2VeO4%DEs=>-s7%H#/rE5gu>*,eDC;/%h<Gm-G,GHklsD#l"9eF)GLgFa*Q;`%MJZdTPFc\!#?l]J#d?)u46%UY)/`6(.Wd6bK2]#;e^^DB6V+TgWD+dRZReZX2AOsCRH=k,%_Gcuc<eYiGPF]3^/*^+[$&3'TGV,7870V1\0r0G6ARI7GoC*3C:XhuYm]L**P_kMle*nV[oSe&B8+bTq!6ohFPFa"5:Jo7U(60:)%3DKu.4@Y-aDq-aX:1>*jo1t"t70p2PfFD<+Je"LWbao?U5_rP@%'q+"@"@'t`4BkDAkumH&Ne"b#`cJtV%/hZm1On!M3TfJH8#Ui%,fs1A68aBlXd5*&`8[13ENC`PKR/F#?5#D]c_LE8=VIjFO0eFF[`'\0#T;XOfI0#7cXPeoE*%:n'VlE5K.pjKp8D*75>?G]YW5A<%`J`+me.8P-818Qq,`H?;FEW$&6@<;o9_A=aiO=TS>B+9"6T%V@40<dCI++$%+q/L6OO0Gt^`QO'@,%4[?))OHdbCm>qN3SSV3B9b%A(qiGbH8K!PYN4c;HD9(;@<ViKRp?C['J&4S]m1LYdM8:^T.aVFdLbg=m3/.@-V.LP4jT=ontOAo[`H!.S]]GR_+,:"]5c/l8jsY%q<ML(T6TZpl3tl]:42%Ro)Ld^9*^-g5_lsE6``qG`-<Y$`N7,LHqh[j%V+Wn'+!I#>2[+%RR-(Kl8o9lRPE]_aq_60d>c)c]&6s;%-+4e_L]T$H3NL(<['Q_1lp/$F)m2Ne7!>[#LPG4B=cPC40<6[ae>rbs)mS`G5"C8TABZ&LO-7S`*?lHW_'E"3!==DKTa9*q#oOq/%X;0[3e,TO^64;,*I?Ip52sELh2s8"M&8T]::1>STFLKD!N$/t]>$lsjMIt/V@&hQ8<2%;]aHV>b%a1E^5=a0RZXD<`a>)[Y_Q>P/%/9,CF5[Da5&nc@YB*O'=cp=!&o4M+JL'FjF\8&>:-CWCYb>o`7\ib)efTRQua/LO+qFmthf>&Y*Yc2\CGDL@uCks?2^ism["^!10%%^g?`)NPC=as*ut9KZQ%-a>"aT1u1[l&8.M0H3MK=(($e4da1Q,g4RFi+CIcTdksh4CM.(?n,(e\Bc>`c(]+l3U_+]Hi=R\6J7W$%!Tk%28hh.pFeY15X]n0Ak*%"XkiQ[!GVgGZcHI)6I!Fg*U(Y!k':_C28TldYk6,Q`F'+9q-R[]O99kae>&+?+QPmOlS\41<FS3nU%jU(ms]kh<l)Vn@5SAo(ClP\Mi7QksngD83n_A26n)MNiR_BRsG**_$r>'<Dm:_R*>?.,-;'M[)7$3kXUH(d]i&#<-W[=i"9MjitF%n?q8^""<<VK>h'GTOfq!-:6+]^+o(gOMe?Q;Tr(O'\_`(,9(+2(6`Uf7jR?#HD#U.#anBu)VU?XP"[iS^#V<)$3ZO8=n"!8k5:.F%0+"2D#S703;YWabN"^nj<n2m-qZ.#R?!KF8i*8s3BCo;mi%<s<Mc#0TQckg(6%kW<Z^8'NX@]CX&h%B]kf*28SADX]o[^Z\5oZ>s%"YFs:-F6h[>5jeW%.?XZLQo9F?FGe+Hn&_#)Y20`o21du6>SuSnl;ifbaLV&Dc-uu3f=?b_4rQ!D[Enn>/\^oh1[]$ese76,fD/H%X&ElbFsL#iT%7WkR$\h9\<p^0jYfi%8X77e(t1)&DA:0;NDTskUT@Dc.`N(NWnKdKT@)\:Os`n8]<rcc;TP$bP^&?3d_Nh[-I?DH%VQrh\lBNBKib9'H\8s.N@spHeA;(+O1IXo)YTF_r*rO/]!>+lT]97"I_(sJado@4O?W]b\;[!SYVdB(tUDp,nV&hIh@4%dgEdVLC%9bodoGh\YR8SWid%sl=!)%JIMZ55H!<tQ[:$5IR9:Q5YGaF'39=,?5lC?h0^_jN3%R>TN[Zb<9E?M#hU._scLm-hc2f__Z'm6>1#%0!$N9$#OuAWnfF+`JEh&"ZP0./k5HA:!*G^=$BlHeM%Ub*i5S<jP"<^Cb&D:8QhFG[9aGkoeBGH2e,[57ZqoDBp2YY7[<677929_%0k&*s2BZV<EUM+eAHr'"'f.KbMd`uM_>H;.fInGL;oQ2&SIj<qcD);_5-`qC!a:SHHWH<`HE>F;-$2!H)i]a?bLLiX-QurWC6tNP%L`6Q)W_9j8rs<:(@G]uN&e)V(i)Wf8\b<^F\5VmbQ5)Ip1D]5r7(_5T0VXD+phrlcH<V-;@DP@m279W"@FXS%<jBA84lgH,/1,Gm%\J;V7(4j0BIc;pn7ka3QKTiGRiuSeV#f_-&2V8Co-#.TS&e6?W%6:&68UVlV.P[Wj,kc*YcP=Xa8j`3&Fqk.$N#-JtT`RV''hMD^%TI`&uMW*;MWiGirSh5\oL"**B]_9"m`2K=5P5sIi_/Lcm#SA/ls"5O9$]+oFaohS7S/=^#EA3VhOLQ<9p6+ia_47UV,k5VH=[fK)%o?j34ZiG(Ecj"ko6=t*eX?DL@02Kal-=1H_!5oJ_6Z:^/5$WuEo7sq.=o&\uO/!&e0iGi.`]"KFGZcp<iE2([24J`,'Y)PA5-ITM%W"DfLeADG_o,\Rl-lSPG:JgD@)QS#<dL#"dC9@nHRL">XAi_jDH=m8?<@ACgGPCiN1%`a&%(ZaR8D8DmN!b:)H1;s:9!98kg\g_m%-1-s[#YVFghT!\P1H9)VfXZmiehUD;=[IEL5'7Q#Ru1>h1bS,[T6DM@$W=m,E?V-%WJNSl=,CNdQ4!Jo`>S_l8<mQc&ZPq`qWM<r%:9"H=o*)[\B;K%iU+u-sjGc[YiZ1SR/a47OrPiqRR`oJHJL/uSN%BcEM]0R&1S69.(ig0`%MkY%>+1kQ`LW>J"erjBq_"?T?1s_L%7@E.XGTAO>GI^Yg`Qq[!lq=-Z`iXDq^#a6gJ5Xh^;mMM;To[S$-iD)=?./(DEnTO9hi^LL!1:q1K>lL_Rak'l100i)d2>S;@e7tX%#NLRlE](l&"m6`g7KXmKoFi`1W:ctGT'((b<=M&["a\2=d'Bl9$QBA7r`<<s*!5*5-&Ke,VQML4!VJ]7]_V/qU&eL3'st7P"fCp6%MH+2MdnqUq9K:8&joIJ+Ml:e7Hd\!\>nn:V]^smbjP_D:$FIFF3hTq1iRh8e(=pDUXY'3A[*"(^-&!KQjs99tBtJ7GS/[!1KGe?p%0JD29P4>QEB[i-To7`QA8Ie`O3ISHFU.m*8ZPn9AKIpY76uHgrKEi]E;2DoVBn_d&g-[h&'1P\f7a<oe,Gq!Q_B\F.WVO-WZF[n1%):hgl=SPeu8D9VoVV51iP*Cs7?On_fJ.0(_nXsHW,kdnkd(1?d2boAeqK=W%QXM:rm;bsC,cXoS,@1Vfc&%q3MXnf%?.f"8D7[T@%WcJEo[:.f7Zor'3rG6.!&sf=/[2A;Jmki@h<Id*/VXEi.%HWahiMOmS"c!?u?.SCK>Hbs,6hh\@%5bhD[KCg+?LG&bM=r^<F&K&t%()3ZF2Du'OQi1d!dqiU#ic"c1LC0pib\8fES.'H$pZYW(B1,HOEgR!5.#227dWekX#l5j\,GD.%,L;p5453ZAE+#C`6tKm]C6Q*q%9\&"!"q=fTD,)]%gTp;5G/TuK#%]FXNS(X=OCfFJ7MdZFXTDpi79[WEDJ)`WigMiLDM:'nXe*[m+`hHh@M10_2^@.AM?V0eD\Xa8%\IfXkC8o4J%RZLM@AN,`c"a^gAn%?f&-KXR/bkrk)CWu'G:[+Qg&]t1.Aa0nM[)=D[7.GRX$UA!Y+<+k.aWf]&f74h;D@`t<ajus%*-9#b?<160DC/kT*Jqogg8$WASfeWg,.(<]afb0X)hI2&-::4[<=2!G[L:DO%FNi)9(7=08Mm;=E$][%+JFRu%PO#l^#lf1H;uAL%aF;Wc+f@.__lu&RATIJr&R.<^_Q8?k:OKU!l'mY]kJfMhI&kp*LRE7"k&+2)\?A>sIAE.G"*^nWFbGiYB4`\a=^0tK.P*!Ii,Yr$%ps7%8j0`D3lh+A=(PoTlb]d=tkaQXuHJb)kYNYkO-:!5&V)=PkpLZ7*%sgH\K9U8CkZRtPp8o+;Z6b,HM+ZN/#:'A5!sY.:lt+^4%FB]2iAX2RH91N+)g)$9m%bhD73C4QPI"nclLjU\I(lt\N]caY:dcW=/U?378,*\fuTQ,X$:jfqE0'#l4]P8NI7*d66<?OF8Oa&AP%dL3Mn.St^ZL^tY(BNMJV@-WHo(/ZbdQUW5D(hGCO=)oG]TdJN"I9%7E"F?]M`Fp7@#-])RKftB@<G*IQ2QTB@jYaLm,sfq$1OB@Y%>rZp4K)uUG(J!I:T;m7##FLC;'g1b]FqZ>UOjZ'[\ms#H0Yil8HP_0)*@%,.hUK-ipPZb.+P4F_Ms_MDXT;ZfCh?Bua<g#+8Qsq(%fGMT\9\:D]=VjeIED7#O<qf8aBrAGW/SY**ZWXcf#rOV/jE"r)(QHQt`+GqU$I'r,L8f"9jFAN*!!P60*G>W,b\Cqo'-WH)eM?&V%:%MtDMQ'gJ0\"^'BrgAf6A65o$8m%aK"c&7SrcE_=8V[RRoLukb7H%'4/Rg:_e^AK`?5#"??8(X`qJ$h>smg9p$H-s%W49S%eIT?%:Z:@uDdj#dV:'=V<V)Y5r?9m\eX3<jFpEqOB<T4.UUq,r1aH+Sp8hkb]PBO&Wb+].p=b02T\XcMRQ-[oGLd+Mh;Qq$FTP7R2q?[2%>hh9!DZnfp\2H[[mfA<P@$srAkF<WGL+8?gnH4t+),rjmU01Th!YCk&05"j9US)gr0eOqh%<+eles.Q(W,\j=:*Nt3QijDs,Jn%`%)U$d/LM2r:XnIYrBM9)+.g)enRWR9VH/jL8E"hP&3LFTF`_jrP)IRU4,bcId^Y>R[L)f>6TYVSo6EN\T!1@Afj9n(LERJYqA62?+%K>:U!W$\6SRC.@IbTqob@hbM#&ipJ@n*;g!/ejQ5SY_9f7dWPonsZr:)6..b#$+T"%k:CN=m(GK@M4FCngHN?B=KO(G"JhZN!<=N%52n7u=Z&e*"<n_%c9)+`mO86@lE]Da32QKq`5ue\;d^"=B:47_TiS+&NWt)d$_PRVejaT-VUShp0]e9hEM39)lH3Md.Oo,k*:5O)%2k?jhDW@i:\@pO+:k=9SZ<.dePH\H6+T_"9#]o^t/G$DR(?YUCH]+8cq(_qhUqonhj]p6B!cq"U;cBt+!s$[nXq3MYGOWc1a%9]0%Un;*oD'T."Ch0n<ME"K8;udZRS@_D#MW/DQKeC#k0/dE-+hA#n`=gVA("Qp@0W0Q`'h`!V7Km(#MZB63#3oWIVg^Nd`0]`:@XQp*%7A7B!DJ_rS=A&IiVM1Ma0_LGbZ#,`!%%VXTMV)J2ireI/fr`%!d+sE`E0@ogg^CrM0Gh1`;!C<J:&cJ,3.eCeb@0f?g'<O6,-gCR%>jnAD7gk3_qo#RBkjtVY[-qlHNIo[gC.a.5pN^_dP7V^V>8?'?/]t4S<c)g4W0CmgD;'.t0N"$.a'ulu*o:;1,7'S,p:r/ZQ,M)/%ZE"E%\GY^k[)d)%!A,CY$3dpm"dX<4p^@Y<aEER.-W!Q+e9,7:i04J+%G1ak#1OHWC77uZ29:2)1rPJ8:H18dCItAkTqH8aL*?JU%f^NMciit4)BXW*t2YMqB2EhFe!S%0g&]2X0\m1+I))*L1N&AP50\Qpj$%X7p2t-K]\FhodDquOn6`8eki!gg*i^8s]T]uPGJ:Wb.%%9/,M2g@#'OjG(@,Z[$/0IJ%N'c]K;;[4K&'KU!oY.7`PG.T*+C.?%WnZhaBCD_]lQ47?Q($a>F)C&nMN*:or4XjW#b8(e^0i*I_%\gFcairJ5/huFn_R1o*Q(/!epcQq(T<!)7((?S-AC4a"18Z4/1@a:+h]+Y_24bN$"3uE$;%9mZlJ%t8</X1PEU8=fimVIN,VYhjq%6`Q9=L_0G%Oa/+GaH*d9&L:1BJQb,R5J%tW?*e!QWs[-1+\%0#;.]5=)eF(5D]:IAZ#S)RNQ."!/mBWe[KpF".Y:U<Rq8?p$h.$[%@]d3j'0G3>DUK(Vh2$BB9Ua*blY[BA=TS1>-]X(dh@WK"0F#7HV/;q*h))iK;qZc9CapPmGT),nZedd]Jd5qi$dh_X=bTUl\9;`=%Bjh_^(7Jt"l_6u3f#m3Q\ehs2f(Eb@dQ)Mubg8Z8Ji>OO+9@3.%g-S/CZKXR#Rm>BL^F"RZV?^M,MT%WfRaqO!jP3sOP&Yq)Ro3%%I%K$tjX_>2f"H,8a+\q@QB.07)P!j%IDj'^5o/cR'a#:He/gB46Ns"qA$Lo2:-5,tfXSreH)QN=,V`uAQ$J<b>=u"nXPIK-)LZ:@%i\4."[+ikk_;O]!WgURk+m;#7f)tVUFC7M?S`0"G7.8Y7c9rFYpZ6,q_bit8%oll"RUtj2"WG=8RSt\Q&E.fsfZTQEKS>&f9^VeF%=^&,#FqH%Mid<1M^4T!-.XSq?+Ka+um\L"8R,rK&o>UN'4GZ3S)Ws<kP="PeR@K'#p-#TEo-t=JI6bB#Ug1G5T\!&9o*%*2.]]1`%&3S-ZXVjt:M_;AqnWN@\p(Cnp:VpJ\3@bG9XBlKJYm?VoV&tJAF`Z"A[">_0+]KpP"$X_jM;Chaq\G)l'<b5Z7lcj01M+78Q>q7M%X[p=K@cLc4FJ"Ld$#*Z)oI?R4*gN!1'gT6rbp*IJDA$`d,RGcESr_$o1'Bt_mQMNc,Ga-CUX@3Xc1T(qehu&`KP^!K.FBBO'OlI3%i1nlhQ&6r86h*[)L?YQ:KeV/]WGT^RXH0;]l#l4.d_Jqa,+-fRd6#O>f*n_4B;<8HA?-b&Jg3nKPa'/(QjK$FQMKo?ZU0rigb_9Z%;$EBnR`5@eIb[@9,)B7#1g3`f1Nqf&pms[e%][k`?4sim"iQu'cld(S/.htZ[\A,^_#hsb&LnAHCD4EbMVoA.`l:?^K\83G1)[`1%&iHcACc#o!Nm0QMmHPPu\5(;Sq8'E1GcM'@AdASFLA**_((hb$:h-:=Jrr'jDMel(_7NunQb`YQ7/W2MKX`EW0d)r;>o57Wk*VR`%.?22Lf\*BXI+J;BVa1qYCd&@Y.^#7\"hOD@]$+u>nm5^5kE'gU8V^qFJkIYKd@*/hadG<I-,X+F,uKp)mA;$I_K+`iNa`oiN9!)G%BJ'N_%PoT9$p=YW+Z8q8;8qP1%7N!#D""8;T.e-Fi4"Ik#)^(T)5BU1!G)j380rNbREOMR.rad1+ds4\EbFLOAD=[>%71TZN2'Z!%J>?`A\iHQQO63hHE`$F^G,F>ZL5GKH-?j+f5=,^e!aR@N_8p7([%?ek43#VaFHq-r0Of(;\+Zh`<E9n#M@X)d+^qen#UBn!aCG`"%U^AB.VdjJGe]ohYQr3M.J2-.gHbL'Sd;1F(&R2`#gXKT]]prlk%(8SomTd^DF^eel8n_aYeU2Fh0UUjcW8]9i7Kj]N>g<3b5jl*-%PQYu2!JN6LDb[5IES/OY@[bTJ$SZ32SM_R.%!NbOd$ha1Wj%1HSlXQNC9VJsl1WY!lnkJ?0ab;7Jinsf.%,`bQ5!^UI1+&)=q'"I%'+RHM9="t7],1bQj>bL]NeU[E^crcsp)56Z$PicA@B*`iSZ"B'cX7H%"ZZ:J6`ZT2&1h'89-ija`7d+)G=RUPKRaFdMaNO_=O2Ml%.P9T=0tUmKUJ3XU,n_\IX>]!EGIu5[UhOi%J)h;L2bBL&#=]%Ugj6JpS:hX_8qH6b,-jb\J:nLc<k@i%!XO7?')%)k%bDiq(rrSJ%b0JDo6)Xqjr[:&%WMqbo:5BYkV_*glPad=Nr*5nHRT7/J3nQGHMm,-T::Aj`ptGm+BNU<*dA'Z;3hec2`Qg6sfk8/k/eX=mWrlhR%kuHm-CNXO&l?KSu2=K.m*gUV`<;[[dD+:q+rZi8;IRt9mW'ugf/U.`g-R$BP@K5T1lAM2@@7CW>7O95@=g8=HFL!F_21Cb42VX[&%='93\.k2JM;T:QEYULlRn?Yuq;.O]G-S\oL'9(F],N.u.Z$9*64;P9n#=_YNlQpO/J3TMYSb<OU,Aag[>'<k%)]@Xe/;YVn)K_a2%JMebn=I"F_,oJXaZ@ZXJ'9\&ZOYA&F<?aUF"YZm.&guUK(eUn1oa50"`QGVU6DalpTso=oN6)uMok$4`UXAdX+"55_DuSG!.VKoQ%<#@HW*AL!_mJK/@@"\E@3+8,*Xc\:J0BebX?4Y#"QNLn+[`SsQ/&*Xg<m6mh&J!stR>DqTiG"'ZIfYBDNs`/1M3Ad$a4^;V;#4X$%2m:eo@*S&fBb**NZHlt+B#85uAgJHQZH^VYje2-UfF:GRN,U.f5H0LC=`61/&@Is@5Je\&GV'PgYU0-VCW@mGh$@a4?"\J#*">q9%ALlce>Uk$-p`p=f+?nN]=PR.bRX^B5<Ekr0!5bA`q5IP:Cb\-j6A`;q3"%$5&pc[DFHmEp;f@ad9reKF#tLfM;R'ETaH@Q@<.,'i%"T2r):^RXu"3=+M_q#B^cq(*t\\aD8)kaAl_Jed2Z`:HJ6tLKR7Q_)hhUm,&B&`.tRNJY)aF!2Bj:`eIb,p8+>T6[#8O",G`s>c\%4`=F_>]/p$N5/=l3BnuX+:CgU.b;q&QA>kP]+,$`T21()[q_1:>#Z&:+JMA'i(\N#ZAWLncDI<<E+R_WLD#&&/),Pd^)t`WIXGd4%>R_/'a"@e*X(&FgfW"#_=(+Fbf*1p%Z$?hScaY9JO4>TN(bTMGnc:;U!j3O1E&JCM]%\7cg'):qcHp^/DhjcX!6RGDH9b2l)?>9k%_ufP2Ep#LEUJSm'6,C\"BQn;8'-&(WAP$./X?oHi?&/iOl?!#;PVjPPWofh0Anrd^jpZV.n.CdTcSg"S7LcJ,'!]9r,?M6;6<qG_%@MM.bE-'R52%,V>C5mt0<7>od`]3LGU&rSIN0S3"$ePlbM)\RICcC$mp?A:7gBC"Jn'<-u&C?KJ?D"=<K0`gkZG@Es_K:;8dYt.j%KT`4$Ba-Ebas2<V',"D@R?'\*gr*+A%0GGs&p>NHbNQ>8jrm.sib`/0Wb>^ZhsiQk(FbVjJ-'b^G[,i/=KG-S9F-ru\^5@?HP#"R%"]5bV+,+6,054mQp#N6k`J`u$Uk1m<^t\r"U*=$^V2AcU6jWB`O>ObO5k][[)j(ee`#^j37.U4@EA@*"_!t1m3[9`jJ6kI=-_)%o%!Z4NlZCEZ(K.hMNB`ms(C'02fVbDa5:tIhJ+C4YmU`Yc*HI_Be/9]FC*dQ_S!nH@&R#7oCYk%R&aP;Tu@1c/8"=nhT0?M4[\bUfL%Mo<3c2Fe*S;:G)Y_WT01e'NJ!;e*1NX$.F87Pl-jRprX(04n\$Jbj%m7Ps.oNs;N=l>ZG.qpF)KaCAK)$9YeX!@hbl[U<NWC;mT(%/l&?j2SR%M`1KuqBO5UBo7:]sL^LE?0PEb`;+fNq/#%;PW2'LT.BbF57nF<Z4E2?;5:"N^.Y1mI2`o8hBKK]Kbb!?h+sQ2^H_]Q/%1j?B%F>?OH&@RTb!!lVD.Cq-iU@UOrjpKe!_reP<]joqQ`hKSVi#L_W#oGppm>L)dMO(F%[qO4SX.$_:<puuQ*+(76%HYZ-V6@jo%7_*"NBEdmKc!$25q!kXGiDpcKR0Ihq;*5(Cdm22?g+bbtF0YXd!J:U)e$2:9e&P:2K@-d.<2jK**fW"0KHp9H#<3QKA&TaB?0m=;%U0+P>\0&aDPm`Eh'$7uQ2[O9jg8f+[DiK:AWbFCKNs2Rak:-\BVs9\]bOT<7<E_V'X.Isi`>cml%dg?46DRlF%6Yj5JUTf>C7'lu%VEiTUB7Cp<oce&1XFaTm\dBkQV:Ac^"+c\&*jjm1UTcUb#<%eH(M0l9T.e,XJL`"qX)u(Zr,-nl#'HT!%L-Z3L^!C7%%lScMl5lo%!Jso%PR<#Q\!'tDICPp3D\&KU@Cg`r1'Y@32@^_,Yo5^=l@N&Fo1&L_Qf)\?#9V0lSs=A_l;OTHmbi=8*l+$O`O5#BQE,`G&P9K4%5nik_i=P!JHEdg2MLuQH'MMWEct;q\#gOfiJVN-F:gjbaM%aSm/h_Q0=K\*q'8+88cRNVFk,+QsCEknX\1W]6[lr3'0g<oq-.co^%S'Jk*@1l^/_s>rDHFTo,5mp^SK.NXmd]t^5&,!<V-WMoe9keZtB7$?q*/:>TRP9Ve[n3OFJ#3opZ`hdJCKsi.VY8ht0XlqdOL-h6%D!o*oOtG2*,IEQUB"aW9K834=MS#Vo8>n5Bdp1'GhE2b7,7,+(WADsPd-PGPZC5kOo1Xi,BBCh"CD+69S!/U80bTD,cllnS/JX?%%[e$)9d7ED`g07b!/0GfB,5%76?9$LCU@B`Vogi/m0t_idSgtDi>2[(?ALd)%jt/Qh=DgGTBiMOd3*AB'*_eb85a;ln'oqe*ZEYDb%JC.h,5rLc1`0HE<+Fq(8Y+&G,iqXG:.OYUcg2'SO"cZF4Y2hkt`4.?.br0.5E:VcUC>?jS=g6PE$J[58"CoFC7Zu0$S(`udO]_/V%UU^qG%"^>e2+m#`%NIV<[bc^WmdAO,+U"pa5GI=X^Vs14\Y0?S.#kgD^loN)@usO)6qVAr+:Jj<P*2kgX0ook!1'+EWXWk4a<B6A%F0=M5&bB#/T=Y]7iQ6VQNa`V>+)qUsPZ,8T[8Q$L88(];3@n_j@0<%5M^]WGW5k%+ieUG&BoL3?A/,sQ!IVE,/`Tf*9!:ZMKlC+M%I'Ofl\\Ea_;8eI43>fHQX:fG#/P)rsbr5=P#SnN+7MQF.`6C87YB.\pA)n2="P5l%bXAKu+hn2;<+j`:V@qFf*%bGnWtQEh'f8hO%m,8FpA!cs:H42E.ESJF,kA<A,b&/KN=7_Lfj"$f1)Lt7$7B**Z/92QD8n.I_[.H@(e4lWRiND00Jm)"P`'hk:ZtP*"J.:;a:>HnL%ce_Z,^H2>/<=@jO\lC??a4B*j=[\)ZW$m7")s7Y:m1<+r<tQY^AJ%Ns/Xsak$P7ZbrE<60+06C.4C*BS)W6KaL+]#kOap.I7io.t%:rSCp$'V,djslol,0U(O,E?';3!cD`'b5Um\c\B[5neULHQrNDKUO<8HEh^->sWcS/>Zj)*cVg0.290K$SPFISHtD*ZQ-*$)n&iO%M'Fu&G%P]4PL*acZt%jU/i=9Fr51+k*l]DL(@BN:.&A<CfAKAiNJseC$0:gGFMlX4FV).O3ZAu[[^ERYDrsQ\]uuFj?<Ae+&;cC0%)_TUm]D*@D@>G:eE*'5(@PKViC.@FrB19Yk5TNZ*,0bFNrN^qk(*>0I8-.9Ni[CJOm?aeR6cF\'5U(O*g'XKk2__r*eJ5J3p-.&1%*t[9`'3=.5TmE287W6]1P\I8ZX;G[AHnfuFPMI2l2!?^`]g1DJ<[VFmaP[Bj[fkY#Z0>+BO"%]X`,&3gbm:0X0Mg&m<:E"W$aHa(%ef>Fi<i=jc-_V*_="6\ham"clA..dQEO=P_E.%q%WM&j7PurC`0od%@1ol1ZMK6!hITK9f1mt+cepu/<da=)kmSt0F14-_qWp(L'%4KJ;[%oI1bCMTq;4*0fDp*Y.SJ>XXL^qAJSJ0pt$kDFfco^-@Y=\m'jG6ZOHChku)7AdTB6D`5m4]eIl1U_!aUP*fi.]%+tUtY&o%C?f&b<Ts)4dBM8&X%$/K"N7BP\*0;bX((]0l?5PhF@p"pA^'FV/eV&t8)P[3K64#F;eTW0hm*8`K!/#1>JhA(R'^P7hC*!uE:Gue%N!iTRZkVhpf4oSn!7%P\!C1>B=U%M8\q:SCHt]?Bnq3pgTd95%*G>V\Jg$gW.&O%Ci5Z*H%/<,9Q$>DL%Ks@s!Lf%r$(YL^qOeY,%mU`nOKSGEQ+)bc8:ccULYRTT)+n4@CK7uV8*>(^18BtZ]F)G'4Nj('_B[mBN'0!Kgca*d`#2ZQo(Xf"&q/aSdckgTJ`^.%\@Db%A%>SCWQ!_=+GAH:6saY^:d)"TBe'1TRlZ'/En/$j2ZLn_+Rb_;M2a:$%O<M7u_04>h##t'(4NW()h[D]Q$N+A4h0?uE(RuMY<2m*M2%_o<rL$8mT;E$gN,CLRCbYm3t582R,%`/Ze*U(O,Fd_+cOGTPhi?,r]$9HhFR!OWEWYK<C)@oT+@=5De($RZ<680Ss\T?\"T!"B;F%hB1#1*#`Ld0?H*bX.WpJ=PS<DK@&WG.G?TCKPjj_.U0a;;U)io@`NlugL5oX!D,Hd3Q=XX&01$UrlB*h;V;%S'T#h@+,hs'^luu/%ePALe"`"_hOGkNGZ"P6_$F"i:\HdMjc1.K;%-j/8@+RSoYo?aKP)=E=>Xud`d!C<E[oGEGRj1/LCmDJ/>_-.@<@]Jt9JPD]BLL@+%4KG-5'?Oiae8LB/U`&Qe[00d^Kr<T.GA]T]S&L@hc^OI->p4=&Mp'Q$h"h>n.9k(@[Xdt8hfL2_bdGVdW:p8*1Tp/[]DDKpAq,-i%iCEPo+'b<ug-!-!p;t_,c$FFS_FNpiV\_/Zh>b4!3'(E=XNJ/!h!3kjn*e$$oDB(e+\4H,n%YClnr)`CJ"8u7XQ&MHX$?R9X\PhU%VpmKGO?-+HktbHq[Y)Q<6$tX*VaROD@/a3K*cY9'`Ur;Rmgq6ndKh6C;kX/[FT8]lW7nVBHp3hje:K,uH,i_JpJ^sWnZK%/TUIZB%GU.2mOnjo'_`WWUDb4]_/S&-.25H0_g+TC@nS30g!d(1/nWf#,J!UenP#Wp^1;.-rPA]Ljf!KP0/7mR0%WS`<Z(SJA\S?^o7d7S<%h>"<<:[Sc/iACQ?=Zu^Q*0QH`k%K8j"&p")4/)DOSpXb'mSJEX&)jnR"$KAuFlgdA>X+YA<i$*!%mFqBaJg0PN_T]mE\s*0pA/2#%R8d$hSIZ)8DqC4#hQk='%_j_IG;MG3OnQ\e#@f)sJQ+o4?!%ch1]^6h(_Pd=^KU2o&!&ONZlfP4jip7Hh`D6T7n]@d<pbebg+:Q_%bPXcr04[B.J;#HW,WUD'fGU.q5JtfG1-E`?2^3>6@"&)g,R)j8#p:s_Fh/n'>u\)7bs!r.,k]o&_I-gU#5\VD8bPjoK8>\fXn!Q2%>%Cb<`'j[`R2_6F[0-YoM>(;5dQ(dB.b:4)ol`J?_30ck3a65im0Ee*ABft4K>M_^j[>h:F1E,TJN0[q+Gh"J%oohUkA^`6'giM-%!]#+SC`LeK6E=)/AY;U&Qu83X8[(S[376\r8]Veq]or^Zq)(lkANAer;h&jdQ%6Se[1)2D[ATh@&d_l6"(>4?9o6Fa",rL&JnqD$%$N[3KeA*_)$A(=;d>!>@hNA3ok;`4BW6.ED?Sp8mC'BkR#tN+Q*p'COhlhP2,`gOT15\7Q$'RXqX&Dp>P^Sn.XGfbjS+6Pk##<4a%GG-!*(3cSg7D9i+"j]7-AUqdiRgZqY]cKBKErA>');ZnmgE\?S>6&]%ccRmbMa^?YW="'0#h@2B=isQ,*g%g!-&](P1oY^+;N:r,%qQ7nab%D]9p0<.@TNiU7ZX;*h&0Vp!SRniCGQ\[ccVmL+3:5"dF:<$ob#'TIRoBMoJ$2X8`VU73p,'q&a;#iBd^0-5?_)5ED)bZ6%!D7B.-;f'&#_%!oK/5&u)?;A1)Q3?sG>)#eMWT(M]ct[@A!=2uXrG"d?j,WQ,<Xa-$(!lC-.[1kF\=Pu+=1sq:7#6cY7OP>a]Bmu%,Boo89;-5uE9fS]^>I'n4)I'$6r)q4MK)_Hh^1KR5+GfAWm[ml%J-rD"^*0@8V"/DUaKT40CV;(l#C6H71+ctTX':El00T(e%mc(%I=-h?q?+,N'[hG";AWP1VJ^]cnH=/*StR@ue&=s.[iB<Q4\[#a(DkUclOIb8Q8=[oNic1.0obP&QJ3uA8Zu/-><4)TpWeE=(DY1O%+68X,$O9`is)Os%I&Y;ZM6eIISbbl-kt.Z<Z4&pBTt;d<n7\m96Cesh,CsL[j0,L4f9rN6Q#u-Q,b1#t`:KCMnjMSm>6#[/K-Zc?%.Al8=(H%(jr$eUee,3EIbRJ9<4=)DAGFC$hm!e30f'^[WG.^emN7=a_HT$@p'0j5&c<hVTgt]PlH@0d[H#^4eEqSHaFI+Ee`Z!]>%4a;@\3PB[K])1^=_rKe?kFZ);*)Y+-=$N,\^,Q";7m='H;0ANud95Wph,U;Bk3AVq$EIP#HXJJ/@f2TPIBQbJ:/.fL1p-Y6-dP#%%i>TK11a4N=i=q[hf%O9(W#%S)8.T?2EO>j3DH6$8[lQ.OD'.)Ve&_V'&QZd2b&\<@;8?Y#Ij^k=ZIK3'[m8KaW[0ZIg"ZpEd]t%L%j+oMmMMMiH(2MC379-n23%@A#']cPAK*l$Q>BYNLrOZ\qH"/0),erX2ohO>Vgp[=F=PbK'XJ9PRfndoSiU-K8#mR_X8ufhhW!ICp%Fi/e=>gJZ8_H;,uVRe0*jt[]e`9X`-YAnALq8*Op<Wbh7TuF8[o7V*U_N>2@DD"!kKeClmG>/R)J>$.(X(8FsJ;XWEf'bfe9UL7J%9^F4#!kr[(BR1:<`.d1BoBc2jY^@.A3"mcROI>Rt;RYnlQft[u'o#6ul%hd*2T'qFlR\X7=j0"6,BAhVbI$L32_hU/R1Xs4TGa:T%UMH@\`lUG3ETXZa@DLEU='<rM(<,7FdB6=Z!HG[4Q:]JN5p`ke![fCL2(Ml5]OV.ENP\e[3kr.*7Mcj'U#FP8lk\9W$D(s>9aFE.%KgL$P@V"R+#dhH6-JRE,,g2Vk#=Etfq[f_1K,9Hc-AieF2(P-r$d&8ih^?Q]@<!.o_d:\>kkVT]9@P"V)Ki?bS("$`'k9.W-\s`[%_j#^=,'=JTKJHAE)fib37L<9kC'YHh9*rT\FV-?=o<\1\1S(0D#\k:tR\1-/9r9q-odnU-UG)jDVjr4<A?P.8*.!%^P>X=RXFGDm%b<\p*m&GE=VO(ZtT)eu"2!+_P70eFi@W.;?\AAhfH#&gF2ac)+ecO!N;Ss_V2c.<,IY5^JV_+Q$_5s>CN5I[&(6fFgc7B#^5aI&d%d98uI7H$q'('MP+%2L-J=Mb>-WJV#pp-f967cZ%;V!?60_B,^LnJY_nMYo7&OY"QM[=1b&fF7l_KAJ"!I`Zl<BE@!Zr#r:mJ+(gA%86f\'GO7pC)R,1ilU<&-PL7?g`f1".[Gl/J%;V8I'qL@XYp>-:A9$%9Jc(8Xh#S6=c096W?K5']H_Nl0\R#1`'Mtc`#,J5+WX8lD%,-uC\(2Q0j2,;q2'HV1$P$PMI*,KkZ.n(R%1-2C7J8Lo&GUs0<BGHop0hCB;#TN;]0J.DYMA?fdP-ccM6ps#3W-re;FC]J"jA'OJ%'Hp"rL.50t#W!5#,8B,<2/tK+\:dCOK\E\MZs>)1Wf3m80qXjs6%hT3+;,Mq$]7[6QIgZ2PLtS>)%5a'AYE]kV',hu<Ipj/$4_m.%2)"m#[O__LDk5V\qWJR#2Dp3mqXbYq#B7r:`eI=E?tg@mT_;/1X$5LpXYHIdaTHF#]c9UTi.-@"j_MeB[I;oXpTu'r?j-uJk'i;$%CDuW5"O<m<VQK"L1AItc3-=c%OUfbtdeTUXD3qG'Xo*_oZZ22e81cg#\U3^S&E+0u5m7_uPrKUl"J'#B>/BF<=_<U_=^tTfLgl#K%Bpq@)3_;#sN#%YZ^__k_K+<eF0&e].PD<<]S""dVTN4=J-4(>bH)!%;QAJ9mA#fV'*Xr/op="P-%&1uJF%`7QQFqd!g_a/sMhTl)%:)G?[<Ouei[uGNfOH^T"CMU7/%#4>FKX"p3m4]BPqV-[E6HN76e7LA/R-rjH=nV3o@"]$mPG)B2"5>Qh6H?V71.n%5YXq!XUt09l%&ZJ(@neD3%VR?VP17;)MX?Eu'NreZ7_hI3h;tg"3^7m^Th#%(^>BfdUrs3"CM3J+!ak643MMeVe4cD+XkImBd<JVb*7XNQ+E#2Gh%qYg[M5M+0k]:9#5:7/0*onPVU-fWE#]4ZGRRiFgF\D%G9V%;rR\Mf8:MAaX)23_fX+eP=e2'@n/ZF_Op:BL"!,WgW723B*K&<F!l%BrP4#4#/5-^6>,9)b:0%E5n%ScM9%CBVBk-P!J:q>9'DQIr*suEWoDM]2Yo;QAu?>A%M*5<BB<-3Wl8S<#&+HPba2#kX,$q3QTmf%E&o6PJ77F@cj=cOjkY<HW5>AZY9!i(_Zd^W;V,^n;d",Uh%R8?"V1u[A)uQIhAIY)<`^OY7<g]Ohdb!,b;,ck;*s>WauVsQUsY]_%:8qVk;fB_fUQ^#2%agWl,A.]H+u_[haTO:\jG^K(B"R/)UW/rH.6_IJ7KPGXZdOkW>99N0O"CYmk>]DSZ]uPhI5'75";R%Ynquur%4!^CA7.H?^*2$b<OA1HHR?RuX-!-9SQ>KW@'G8YR+bLeR:2QuLSGn("Q1\?+A=$?)?9X:W5)sVnKL%Vi8$<J#C.p$2/$e]'LG>eD%@q_jYZ=YIsUQ8_Q#th7/&B/m=#k=4=Q=LN<@0*J3"BuGS0ZlO9)mqfE0-01i#GWX-'Ff+%L_9pNEftQ"R"bdE-W1]k:.1EMCR?;T%kk["<231.U67E?cQq'068tIE:kbprebCJa!&=a2Qh@\QUj*+!DLpJX:H42"pMcIqErIQ-1"=D"%-se<oERkHsM=B&=enk's?YsFM%6</^HEqUukR/!\!=16QA*R7a8kb<HM<"MPEAVH,E)Gt6)d($",QZ[@Y:&Xk4hQhKCh:$tHXkh[6SRX@U)KiTdB$X7O"gDX!RN.1;%Vp*4nnX.$r9VQ)?B44Yd,V2b)=r0.B&Cs@unj`fQ0h4r)"e&'82naMK^mJ*:G^"!Ak\_bV1bpI+Je]Fk$;h*":]]'_\iD(`!]`(0%R0C$T.8fasMs&BC#a?9@"O.tY0?SR;nP%G8n+B]+U/&c`45ub4S=@X/@#a)t#J\fpNB%>\6>,__Zmk+FnSXZ!BJqcCVeO%K)F7+Q%_D9"Pqq1.J<Op&7(6q+s2JWchFg7klgK^,QYmiBe"D8P<W:%[AHtQtQ:`X4]Xr6TIkq79Z$01-5CA6%/iL\73,;.]pYS'5Hhe:m1%]A"[FeV3&81H_iQ=3T*XMSD?pGh!oMK_Z8K6@^1P+u'RI"F><Z"@*:.H?c8_iZ,?TT?li$`7Dphfng["#m'dNE`U^e2083q?^Smf%:r;6HY5ubN)l=&m8Yg43)QYUjMbGN[,hg_6m=qOh]'SPX\aubh1ln7L?*,3>XY3GHDu/gqpLVq2rT2l[^\RG8h+]Ik_`hoPX,!0+%P!7_7>W$ZaT9Q`N'!2QB*Aqh'E!q5U'h^\nC8n3aG>2`m6Ik[.QD.'3D-\[ZA?NO>S!_%/C;-uG'7T?g?paZIBP_&,HI^WY*!+=p%+9=3M.3HTJ\-N9*5XA%%WUh\rq9e7Y=BftA,.=_&N$:ue"G;F##-B!KA<ZEN>%K)2f)lg>@YR`q->TY^iaigm)MN?'-1Z@p6rC(Z%or,'7fm=a>^]:='B1#ZN<dbYcrHoq-"8dn4)[J[7dGbe1-k3!d@^OcR0e5=DlU@l)K[p3`(<"m6fN'MXI&O6r>$sYsH!BQ.PjQ':%C0cjN%+pXk"V".<Cc>`)g@[bl5U/$UR8gCHg9=u^$)%YM+F72(/Ln-t$HTN'Z37=NTYs:$-:@rH\=,5nQa9[A8b>D@[g&32AqlU`%cH<T@G-u4KJ;i'$#pBFb9XQrA#b*dlPlWK+o9kuJ.XEtL4X.dp$L1a!+Cl=!>?"n1QKP33*M$=P>-0-Y(1=ctcBdP6C1T.obunF+%0VPiRXdt_oh<er_MuaBTS@.GRV!WUR93`Dn<VNL);iDWOA)_32l^%`F^`1+$c'&($#r,gR_s=q?)L607Ng?&&hg9``/ge8<1%hK,%+sN12_!L/0PR<T87d/"':3O#tHG9CbIe^L8i260DCu"2gJANp,]HL9P2C+:dC`[?1+^mW6>8ZX;_@E@P0d!^d4te,h@g'>>F9]]t%E5\mc0r/Q8kf_Bt^__.>]F+E\KK'e,@,+pC#r`i^&LTq3'u&/@QF\#N;n6"eh(%=m7;=Gu@XSgH<'[uQORHjClj"Na[nkgT,lGih%0/#MW^@fbC\aS>f0l,bH%sNJNe`l7hS3<MDqsflbY)dMhgjOEfq.-V]q6,f2Nh3C4X,f1elcm&Ns0e(4&!"r\:7lEaY+D1*CWYI=%?Cj;^jjho+lGKs'S(3-qMS?^6GNUTFpPp<ipr1Y6D<7U-5gd;`Y%m\5iRR7c:;j1PY%mXojn"Co>?fEL,_qtcki61P86h%Q6IAT,%HdF-f%6D2T<>ahH[Q1q5?9L>23a$[G\>i!NT-%@/>g[c0IS#N#ldatjkVFj1<UD73lc[PtZdn**UWmWj5(<LlkiVI6oN9,uPG?CI%l1*H\)DQ)7+(*Bd1OEk]J,3Spq8Mc"Z`uQ9G-j9DCgV"&Kc`Ks6e%I\Wk)Z;S*B\5B=Ct9pipk*G..6XIF4DAWg8?Q01@U$Pe5YY%3F2[@b&LGY$\(4NSTaDX*PH]3eQgX(s4R8Ek2+5VhV%/dK6LDkD6oT]o%1NW/EapX+1)nDrPbr]=?Q,\6<9U$Vm'XPs%fQm[-Nor%pOJ;G&u67tW@%T(4i_u`Dh%N3XnZ7LijQRMNM^3rc.]<PkD3";eQ,:6,>g\S+/IkX%SplLkB9YAM0s%F:*rP8Q.OpY[d`G^mN4,F%Ip-[<4Sb=539u(dT6kk[f*<\JJ"7$a)i-?;fBY(DNE>!.T^k;Xg:.=^p1WhVQ9[S2,GY(G8$Lm2G;N;`In^PLjn+0Q(M"HB%lC17%Bt_6M[+WL<>o6'"Z8W/X>6XK]n2bo)4)s#.k7_<:H';"B8JgN90u]-W/tU_2.%d;5!9M_mqa!,a0.Tk"@9A5d2h$SNf&"'bI:pk<%9YIh9T"@2b1Tl,brsb"g%BFthqV:Z(VMjrEVhJGXe'0Gd/:UU%%J('*J!L%r5qTZJQ$7`VKmh.68O6818-YR@82$iihdiXSVSt3[%hO<P[dj?%Zk2^<-D:<%W[AuoJT)L\>s'DD.YB(<B;I-/C6*l`N^Ttbm4]p[8,[:6>Vs46B^bsU<f,V.\NIgN+eX3&<78>7KOFL32%JC:pWMYmpmi]4@QCVfej[\0V-g5c/s$`0I<31-W.iSW]!@7.t\:suEc9L@_P&WdEmZ+5mOjN=]s^/,<RW>2pE-(dAEViG]!`3K8$%q!QJ2qt&253QOIE"8B!\,Ms*q5kGZ^A`lo[_nD@SF^)WU)RIth:qNR[pS-tfCk&Od:A^3b8'ETL8g]abA!gF@d%,Z6/_ndBrgL7n%O]'ejY3eE^'k1D2.l[&M:VK\TR24-/RkH.;m`pGl?<hr!_1,VdGj=;Ykm?1Y+8gG"h<ILS*]uR!3IS0Pmgfm\c`cP_rp]Q=eAWO$%NdQ/XOochU=-gE5q9c@#-5HOTo@k@5FEDqWgcr'Sr-WqY,D#lBp@1Vq:6kH0cDaU+2kR760/k9-\5,=]1%!][<IMhkiaf'8rRpJL%eXb7HXr=Tr^:3+2Y26dsH9c6:NkQK<?CX,B^"LkorkYcqgfn]l0tI76>=XMkDe&G0e:P#@_Q4g8cmO3B,IX)qmT+i..\-M8kLJ*5%45m0oCgcYT1osW.+&.Z0Fn`YSf,qY-?[R6Anqs3e2X5d"!;LhuJ5<B$S(<Smr14,-jWFCNI_SBKVM/^9N(ND"3F-"IXQmE>``.-[%`I'ni+g3;kYQ>Xbs*aN]Woqd)[sSsE2`h>[$f<c2pEZX=h1>s:cDI\*6:KbP#Q:O6mAg`C=8K@L*dmIdp$m*<!rp'^DP+V':B1=f%UWqoTE;7/-D+M%1krSk:flTFiji.Yb2>I@%Br57gg?n=;hjiPn^%<FCWs>9"O/=pZIJS0e"OdNX,ptY4]pU.5B%Q3)cX(V3p]`Pb%imAWhh$ghLd1`d3&`:1GX'b:$WF7e%rE!&l?MBlZm="?[Hi1"$fD_ne[O1j*cQkjUa,]YJR9,egop\r&rs;Gg1YVfL61Os%os=>a%gMkqq40-b+-km86\_<q9Ss>]5Bma%]6]:Khl)Q:EHTF*VQ`jnkGrmsOYBd2K@K4uhIr%l`DpH(E)n(aXVmuZpo]b7oShBZ$8\FmE%a`lr#mC-0F><LE"UF4Z[B?tMI([LDQGP`I?e.kMKX#W55`&BL"ApsC"UtMQA-Vr@Ghk=?=odd=djo.Wi:"Aq5<p;F?S2:1lZ3q`o%?/M_)5<Cp:r8MSGM1751Ifm<=VG4k>Ym:\mK\u^AnobqOjh1C)7UtW4qVc&"?G/R;9:)-;`<JF(EQ9]D<T)E9g?Bpdo>p(HZ1Wb=%A"Drin%@1n1;BTSQZBG/!gb-dcVCpD^0sOBJ]goV*9*'1`TI"dg)(#<MAS\[K2bO$KIDAErS[E5Z"W\R>;VaYgJ+8MM^FYS`OFi7%;MY.=E\;b>O2_\_So0QpO;n1_Z_O#_5NhPBmG$G-g\NjL(%(c5h^s0Z+aWnTmIf6d^=BqLN5Ff5lS/`rX*q&GqA-j3I9YKMdBiI.%2R0qJT5kL@1,1=Xr$8+ON1=L=!pdR7Vm>N*mr'h^m%1V]_TdPaTu#!'IjG9$5lZ(P\bZ-7^#6kUF/,)aO/AV^qrI*q4(\Dq-YLaa%/80@SdH5KkNr-df?!\Nlc^\NI8#Q:;N_fNDlg)sMa(H@i'&;4$8Ho%T\tFOtFE)ADIJs>7m]F$k^Qgb/YI\T9$+bHTD"eG9/k%`G%@NNqsMo6E=<rRPijUEAShX#[3^PO97cT!F[-GE"uBu9=uPD2*/\0>O?qH]U-De*Y`:?bF?Y+Tk8!4_o0BCn^7ld[AL2a<hZ5Fg)=%C+oSEI(_O$4'@"$jdJ-e5Wk/KK/Du7IYd_I4cm8tM&c0"[gABCcK9Ue5#?"aOjE)3'5r(R+4BY5DS4lgq=(h@gASPV0iRGA&*&)\%9("-(aZ".Spn"#(T,c[':+pN\O&qsF5']I?U9F7"h?RS_L@3u?F0XS,mt*@i^[;:`cUtj=pWfis1mss(75VXe"lo<to^*.W/[qM@%bHbFR^M2=IAHVqsL=ZYpqtS9?5Fm9$nZ$4+=M8P#*q\EZ;pBNoq`gM]$oA=!pJ7urcAoW'^O@K\nosWAl.=VcV;`"ml7Mg0[^Pu2%DYn&-HhP_@%Y)V3OQG)q5s4%09n3$#q8pb35;+)9r^a+#N`*g6gK+!:_$,4m<e,*A*6g`J#Y/rC%K:)W:*'3.=#t%Zrp6uWoaT;I%4BqH&p=kU6c[UG@T&4<I`Qt]*AmIVc4$A'p-7sTErd&R*onm%#h06I-6`kq"Ou)mj^I8G%pOB7BFBYY>0#&Ome`k1?k>qKB%'/7n%He;Xp`q[P9)/jc%]ii/5gSpqHi50e5p065]VA=S&+Y_gQIet.p_7cQLmS.IKJMNkHc4ZPEmd1?$qhD7(<Clsk*0^Yq`ag0Wf`8dI%.%7kokYWGZ>lS.+5kue[9qPdVTAc",lZP%2CKp&X&EoV@Ld=<[^!CWB:+rPuo__e*pMN.nC59_X\*b1h5R];'5jXKFFZU$D_^cQH%hKnke#7Kh_h&%4UDbcoeH0q[DDiN:baVa0S#)a1ooQdOhX/"q&s5o74dH?FjW,tO"nB4o!#,2:LNbAIX`TbA.Y=BDLcXqdPk?I&O%d>^*LL&T)JI[F(aNS2(rA,Kp_a52h^Ob:`3kaIZ)"?)1\OMnWoK(49B1d>@)*'a=l1$*e(]A$Z4am7jXRaYiJE\;UAhL#RrM6GNT%pL_'X5KoW>B$LoCkD,Js_j0ctm>.Y-j_$MG6i-E'VpEYcIt*9lq*)dVHj=W?Dju7+C&'nhS:8iC?:oi5h;DNfX*[4I+,;'1^&H93%(ju)R'!)*.&h(0C(1Det9_Yh=r:BCpr+>o:S*-9?8V]NHdGM8^qDE29G<bnDF*)kWErGF+LNLU%59pF/*lYh+jIdF6]:9-b"?NI?%(c\lWh=lq]i5kmYquHKeHFr^>-L&qLZ^X1')tDt;o;a\%L`6r'TLQZPoh?4X-e")rF%^#?c2-G\k\,&.m50UIfmRgZo$EQQ]egtj%-V%h8S!u8oifba6,WV`/h>Pg#e$%@^Rj/jN5L\-WrUl_8oTS=<06_p?m$--+9h<3tP$Ob7H,#NP\p%2uT/-A0GQ'uGq7CY0:P!s%%><g5Iqmg7/rmae8WVHYp(Jdr)Nr4Y>Q1W?o$;QaK9`MA,8^WKh;c!o1-)rN(\r]4IMZp.3:gHBQl8Z!9rbSoI?`X`d;J2!#cPaW5%D*l)*\lNO2nZGk?(Ai:2%kG->/<gOF26?=`o%/3%SpmTbqGjSPLMA5<MHZl'-fM7X16hZLRLOqX9a`;g"+mCa[W`DoXi<U`qJa4L%"?L?@DiQHAXtfqS`uGk%e&kSKk+=JHI8_Z=hlHXUIdp^G-oJ7/\=>_s^%q'[jg;&7kn1f]NQh!6['JK4?i;7ZZ/iC7fjIut*i8*[%/ZLCn&#^6*`_P?r6+pX[WdX[:8XnhPf[%Fc5l@3Z5PnWJn9^["]@I>e*c,*O3WH<I4/88SQLaD>/Um%Mf]'C>'6QMH`0Rm/+(96+%f!ObUh'sm3bg1J3ksm6V\GC;.hoRm-CRmPZYf8i?=g-.PO,c-!O$7k]7J!6SK*E1*jC'RHX&F'LL>/_rQ#*"9IW<&M$$=i-9i(;N%r0sH/BC"Ta9*,d>>WlCU6IgGurOOLQO34R%F?0n=mHIc!FFbVbYL]o4Hk`L!^M;'@XTu?Cap7Fhg!S8MCI)<4pU="=Ug[B]rT)q@%J+N365?RaHdd#c"#?9gBmd(M>RNn*JI[;$H@E4S<?hCiGRG-bOcJ''BX76#"FgN7$)JOQOd>2#l#^m`+`UiW_Q[ROg_e]n\a$/0]%*j;cNpHH=OpSjTW*gr#m<U?c^.mBK1Z+8`EX2HTBif5Qk4X9!17-G,@M=!j2D5;RbM:u[dSmb2,<g8=JQtLGQPZ3s*H-'^T;Xc4o%?lkrDP8;k6q<@F9k>*_VW1*`R`D]30_EF1MVgAC6q"a`-$[i!<k31)PIsHRZ:Nlj9>Be,^^]4:7LVLPc=n?"grl^.am=MkJG(+Th%'t?d6Tkbu\TAKCemb_@k9e)DB(tIp's*R2%iVD(1%l]uQ>qJ$Ch]/1\%KFHfi4iS#?6!fWC"IjI^:A\3)Y'r=iL:g@pKF!FB;]Ai%S+VK$fp]?T_5!Laj\MK*8H'M'ksrq2r:p,Em_lIX^>TV"b$CIFR%ASK1[k>#(Y=-sT!l2QoCqqmmb/Ypg!>14/3aC>nDb=gf"Gc=%?GEV5qsfTthtKpeY;luf^/*5Nf/t0/)lk?a(FR]#rp:Z)^)+u7E-?O)q>016rO]SPfJa/p@c,Q/2`V8[_Hu^i0:#ZZUj:k$5PsGE%3ruP2:63.+`ufNdn`BAenbNj^cu3Kfk"YjGV+jW,h_2qddbl^Fl<isAn6Xh<i8+>M6[d.(o=&#=H+$aDo^,rTEO\4Cj4j9Yd/%=g%^,S:7+LRPXbD5t4XSFI6Q8X3FX!a5mPBqJ`rp8e-c08/Y7_YsVnFjOA4^3*f/NIXFZfsQ#f"Sj#k;>-21I.&?l.A/saSV7U0d^K&%q:4d"ki1juUShY(\U&_420J_G:H%P)p#a5>7CJi=#:HE.7o)n+:2b64c7'4E?8/OB2E+DaO#AAdj3+dPc-!4J;!_LlngV,[?Eri1%Ri*[EL;0p*BFT3#afYXt/c0'uLbF\2V_7psZT5V,^,h^slg^=jlV:5VLtq%:KOGs(=%??Xc1L&lo/$*o8s,fU]Vs2tcYotXhlK")%]"V<c:B/TC=.cW5nSQVI1je@dlg&1:H,@h?5N^DZF=METZ^uKWju_"nKg3>><;Oe;EDJN[QreM3oW.Z,l1=N7Kn&MkriYKW</:Z`%hoIXe=`sJ2XX/P_16&pVI)3mr>b0a/C@0F%l1LA+r93uu*G.C!Y)Z92[H-::X,##>/oC73bO;M!V>gDEo-7EbX2FUgopJRTDC)mE%B@aO$=*X2QqY4Zk>>L:)N\6?YP@F7,V$;>)9T/Jl8mX<2CV/&"KoaPTYGSj'<h@'#$g6b2^+Xck$JWJ[MtQ4i/?.75^X%:gI_7lA%q9dIZ[1=pOO3Zsi?M!Wtp2_`GNSSpPdJJ@6rb(p\d9H.iK+@^_eY$bebY*G'oCP?'E?B!l2V7]BFL81@08^cU>[6.<Q6Gj8;$[8N%h1hJ5bd-0uMrU-<R82IM5YbX"nb!FmmHT-^UNb6P'tCn;H2`s.f.X2`pi=*"DAAhTG^G"b$UVm?/*F`#n'[A9Z1t](jE(OK2acGB%GEps"QRlip_:a.kq;ng@]ANV<VaAi:3%rmS#MV\>*M'8jleC_eo<d#.DJh$_NSP$_NG^=h:A_hLIt[/<GHlUC6tk=Z$U$MH2)sJt%[i=2te6S>eG&_U'qY??@><55B:<p"#T3^0*[;2("Z1CQ5;S?W(E'HMcr;QN>k4@o^cT\roMY8P:hm@a[/!RcY]R&\FB9TK:"0e]m%Zp1Wf[Ti\;`Of0c6>:6./!QU4HMQs-/F->4N]+@@DCW-[:iA!9H8V\;V\bt2^?j+6Xs^i>E(@8D!F5>@pgj=@*R!8mF8':jL&ZJp%jG(MW?<U0cU<cT\DHgRLn/<.h>KY18O'STB2^e?<VRlhM_-JRIb$6#1?ei(,V9IKCZ*&DfHWu\C7q_/b04(p=ZWj:IQ+Ga57:!Bg%d<]tQn5SK6o(r"P8OfPRmsToZNr>e,2hX>CadbLXgY=`9l\WEKDC^X/o'5f.Q:4.egK(e1Q;'1*--?7RG]J+OIWVuG5jg/I]f<Th%LL-\<jmDZoaurTPm;3#&f%6fq04$Ql='(mgI!*&<Y#(g)QV>p$Z=71R>-Zr*G"ZC"h*Ru*m@0@r&s?nZ^,2*:4eHo7fkHPfnUB/>%gfXC?3:QpD[G,]Z_u9(fZL'V"A(Xki+/eK"(@)0>f1nb':'?2jbJlLVHF^b>I<29^Y-(On^QFE<)m.op$E#)T3mW!F(D^Rrri\7:%F6'I,Qh%X9FQiX.DjV$mZSc*Ug3*<V1D^Y5r?2NOg3r<6(T`$8P[6guTj%nA-A?D[]r'LAq`@ItY<P7bRWco5cX4-(O\3EniEcEZ%`T<;E-?Z$J?*aT,Kg,:mn`o/:qs_gQULar"@fC=f,D6&-?b=j7UJLgs!@m`+fQ6al7I1ns=ZlJ]Ql$n31GNRleR\0=G$is-k&G<?%=;Et@K>N0X'L(mn$EmnJU)Io(!R30-(RNALYr]R+.gDQfpAGa_Y!l[@_-ZbK!J/Vui3tcY8D[!Q(-d1onBj``]g(%o6=D,-r7b$=%]mp",lZ[jYJ%bm*?Q=RhiOf+)*rb@&Ie<ZrNW8P=s898%DK$ulXag8o"on8/O![U"_uD`Err7B@J,\2pgm7<aro:I`*k604P9,2L%Rh(#?T0L'do9fQFci87QSU\EK59F3PA^gP5]70PMq1%:MGk'kZ[6F32s*an9QbWFU?T+CG*aS^1m'hImo&tRPoj84Oroh6!q7Zgt%^THu)bK9>dhEUf2s8"NQol!(najiKCHMH+lqR?KLFu+))m_&,u:&,,*q8nhU5J$^a0E1R0j7Q46ci<rfpHQ=gA,P_bG<X[WY<TVm%s7kOpIe2Mo*rb5F=*oCBp$TS%9eZ;;]n>gX5Pb=nHd8`mRUr+AG7YJm#u1tta<jk?@ogO,.,is.rnM/$<Rm:`)/,,Fc8p<#(,Ods%e^]qckFn"&A^7UXc$`<erJ6`e;YBV(R]i;g._P\t`9c_p\*(Up&I.(+N-/R!]j;k)oX<Uo.tr15dcQ$7kK>62lu>n$4I0I4V8m')%p2Dme-)>g%S;1.Bh-TE;!ksLs5tla'?"0qtNq86,UgoY#kL*Z%F%NDj<oRjR+$3BOX6J+.`j,6g^(i]p.Cj7en]gIjP1#IR#Ct(0%O]q,hgPYO5p&TZ_@`%_7XjB;s:&FYBVFm$RO7c9Vn*5+3HM9&R46bS\@6&:)m<sIGi\tR"dVc7DU[='YC&>$?@oUAcAR8!4peBIF%:)kM]-<8rtO3=pT9cAltX]:56`7Lj;WpcbTV)r8Im,tG92lTWrm:Z>D%7OZ.D.2tH*S^'2YYr(H8hYrIrf_5Tf9aFhqbuBD[s+WH%RM=*I0S-($c-lod<*[O/(&N4JU4(MF/E<OA_g<<(ak'm/$mn[qgdtoi`_'ecB<ASI]K@mIW]'<qJgS0LhnFN2##(J2eF_1`(lA_q%CU)==_f=&!4,\-$mDaY(p$cg2iN7)^0I]O02Jk;ng\b>nQMi.iYC36+""%%*<jo.d8,e]%[@0oIKgXcQ^U;@R?M2:tVKClXWDL1>%/HnhJ/OVe;&+Tgd_CYDfO2?)"iS8q2D'?OHM!?j)nobf^>LoUXA9<@7>DLA@9o,??Z$>kCl<ET)\kptA,#5^52!Ic1V&_cI-(%Y&%%^*0dIJ#QR.Eu>(<W@G!h$$MV&.V`Y:&de/J('gHp>N:FUaKs$17Uu:[;$*HN>#G#R.NEgSD;0Ir?pFYBcLGd`M2drTnm@8oB#Gm%^e%>YWXhlkPAUckq`jEGPEt<$-urA2XDdm:p&&H@5&esAqsF2sd%j1K`R]LSSJ9Z7RJ($pG^if.^%Irgp?6QVE70f9qHOApoEM+f%E811\qQKS]j/705)RAh-pUeQ9^e*:CPBb`N'Xa>&XI]a;pZA(9UrHh`5+K/X(1C*$20`e\p\MQ\l'!)+3&I="m&Kun6ISQMS'df+%[?cN%Q#mchh&MdrLAgnTKtauV3,,:uZsc\_h29+aoWL-"o6;9cPNHW>DSISnZo_oi@@T/1/<b7@p.ErUJOtE%CHM,+Rs%H[:C`2t%`/er[1l]/8cL:L']%Cmb5(2Ie\\XQ>Z]19q]fG#U5uk(:Ub,<IQ*-tg#X%!Z4Ie0tg3C9^qGGs,>InUHrI-&PXR=T<@e2_Gm5JJ:%+jpbr'gutK.H":[JYdTT@S'4dn^5\gIb,"uhT!2!Bak";rAK-Cpo@`S:#EIq%dgtRXW0P.^2:MGhCT!3R['2Al@-KO2G?.1]d3ir%?%+h\=UY0#BYOJQ'C`'-Za@&ff!-[tZM\JJ]R:QF\'<A<EBZP\ldO_4GMo[fL%o<8rH3p*(QkWGE8]Ie2hglni3*ZR4+5NF=,UN0%h9+&=i7jme;Q^r5C\+m>Go-*'OK,mh3YWP4I8<a!0*?^+Im9KgK77)50C@Vt"B0-9Qp#\/"MVPsD9[u)^LkC3@OrNj0m,u7DQMKk%:.Nn?c?/ukg=`c\c)9+tIQ`,3?HIMC<>*>#:o_a-b9pB^?s@f(mV_X"Dl<??Y=<\Fe(e(ocFSg8hXX]1*T6X6/i2ZDB.)B]e&V]L%W9icbZVl0e?Us+d<p.h`JRA6*^02jDQPPSM+UPLEb5RhH:)&^A_MRlrPAoO\q(s))NqMnV._pY.q/CBS?6+1rCTlEkHt!*,q)EVs%X\We22daoF?]i46?[6FOm^kE=RC+,V^9AD\;!k)227'F%*O+d[3A2t&<&P,DQ"#El*P+&Y2AQ1_$aD),gG28`8^D7No@LCTc[d&/%[!;N54r9(Z5.M;/&%BQ=W%IMA"ai''3-NJ"io7G[G0f\`jQQR#O^fus!\3k(a,%pN:T7Fm\V4WEs0?:=*pbb+piC!iX'^:sbX[\E%EdV#&Hm3[.YO#us]-QaBapMVt%"Ef:X@fYTe`LYi61LuSqm-(4nJ'HT[.97=2sX+R7fheZXl$H%8snQhM++nV^IFuR^@WufEq?-J%PW,TRLn7Gs?`sm2kIV\U@H#$53Kf[\HF8)PoX5Pn*osc1$WeC=56sD^ViOs^BidA;N?%F)gY0RDEust2`Nt^p]0c3:n[So-<,8Q'%$gC(:"S).N*_UiV&XV%[_TQXZ7[+Wmg:Fmo0l\Neh+??a3A5>F$9!D6Zt(1Q3GCV3l5"Bf+!QUcoeLI]2s&oM(GI^*IgX/@j]&S(%MQa^&^"0](0O'S+(NuE0^euZT^@\hu;$CHfP4RuorYIQQTB7b6SbObt\'cY2m2jTJ'AqRr/d&O0.u7\m<k\;BII:42Rf3:3>Noqa%.sn_/JQ@=UT0;uW[nB0MGh!`)Yl5U!X=Ube(0"mL2_&]L0.oF)R+Vn8j]:7WKa@P\ptu2XX([g."nO`Y6H^cbOJ11=N.NFW5g+t.%rkY#O&&4C:8%&&apH&t-F=KeTpE]5&U$%'`8g&/a((7ec%sl0f`0Jo0HUcA&HgZ.PmKY?]r]+T6A[*2HjaqPR*kg@U,eL<D5:*@4%13mOl[OY'_i`A65$V]i!HXt-f)k6!`=TppcV$R#E/T1s-Lrc_T<7R:^'b)4u0#52OK65DL^DtJL&m')q,saB<O,TU>647Z[lGP;M%KkK&g8AtKt=g8G^Kadf5&F"snk6\S2/]gZ$&Dq3V^A7^8!F9Kr+sG[^=+<CV/chg(Q+;Zib<?P66pMiNG3gU(S5WQ`r!ZJ+ppnRD%-ddg-c*g7W9-a>_A:&e4B0Q%FrSl(!G@7W(T2i3QYZE+,6]jV7h`'P?Qt&PMT?#+V&niY3p[="1inAjlDm'qBIJ9a=8M+*Bi^9uQ%FS0$"'J%*^GB,-Ca[:R2E*'tC_8UqRSK+J&"Hc=H+uKQNn6'OU./E)LEHDi5U""s<\0_?8!d7oD7\H)D?&tf6P&#r":G2l)D)=Tl%TC[Cb_BO8gL/e0IdnBStH[\V:L6^*)]=-6ING'WhqSin3fSEbZi]\//H'HO(kq=8i\P+\=ViGS\JTDVbr(Xpi;L:C_EW/3A9gq/t%I6?I@*T$4%4%oTna#6\ZQ4LE"Da'`r0mE4m80+<KgiPd*$q$Sn?(#6f8jAk'g5PD<nZjrSa+Y^cN&]\>qD>dIgMNY*a:Wd*Yll(!%p1]8l7bi5lER01XfAa^&(u='gPfX#rS]AG-gR#C'=mq9Z39tuI\\+D'p;L]$>rp9,5pqnQC7/A^!L!/%gU13POca5lO-$ZUHi(Gj%\2b[qV`BLp6V:r9.796fa07-Z/hZVjKp2Zt$kSWKJt7RZ:E@qoA$,*S*V6T<2<ai47%N`mQZL8]`pU?Klkgdb9m^5W6cr]K%2tdd%`!CXY%fbARDK0rc,ELse`O<:p#G:V#j#YM9V-%S`Bf6[[m-oiQa."!Ud$Y=Fm'(p/4d"nELsj4*ZG5.E.+Nbn6A]8urK6*&.i]tn%\%0e5^P<h?<57kr(tBkj@uc=mZIYXo3jsfLO(S'sE([_/4QZ-PqT_lFJ,_H?-YmDDO'U^iq6<K/#Y"NZE2j]E@HZCjpD<oBMYPP/%-\*Nc]+aUtNEg/$bgT%b42rh>8FM6VdVUq[blW?3p:t^(SSXmb;W)G7j3,*VKm7bCCCnc<N<"7;Rm*7Q'eOP+"N9rVpEho2f1GUD%J<\q3*CB@$9"aLQGmKB\fDl-g#tR@h^CZJ0S.e],XH/9I-[\SB)ffRN6YO2rhS"I_g6Bu$Gqg=FUqHgi2Elr:EOoSse=^]&`uEb2%Z)>4E2gGZ\J7AIC[&GKdrX-R+AX[jDF,qQ!(?.bTr_!OAb476^Jq@YLdn(QF$+(NSchGCNqD]PO#*.VXBU%ahQ(/h>P)*?,8iJ/T%\;u#DjGYLIO5C$E/kiWH*_u.dSY,k3(g"MXi,Y7M<5OI#^"bft6,S1ACDD-\/0,b`/$LW(6g:j%Oodo`Mp7,g5'hGl`nib7aMSnP%B`nF/oWnCA)2M0t-?1S7K;X\FV#c&fOW%-,J^ISLHb+.q_L<B'5gJq]H2G,Ja?BuI!uAHua"C-hO7"i]\*Zdd/DbQY#AjAgOu[g'%>8af/r8ed!c:,`ZjgHf<rH)CPM)]DBUt3PU?6l#QFaeYP\,54,(5n36_"4'Xif0XF*q/t%,:'M1d>++`#id8O>fZ6X4;Jl.N;IQ^%LfaK%LqHm%_=9WMk*,\Pq]1g2g-5>p<HOo?LT88J5Q+6damkMjE1B=,7`L6X*"U?<fNdCF&Uf6LBQ(mq>:1-L[s%<b&^m2iJtm_S%nr0(QP0&2:)kG;0!m]b8hTQ62JB86A>YBUhK/en5&9:C@1H[=sn5U$rpi(W0=sS:D9d!?<eg<-IqOEB$!+QF--E#9Fk:L^UB#J3L%@9MWM$W&-[J)Y^SgdJH-c1:M'NC3WH$W8]5EK"W]Gf/1eT.&`^LEC]o'CAt"4;mX[[Jt8m51:t_^i1Fci)`@_GB/R"2hM.\5dH(f%UY$TqHR;Jrl5/B=iAfh]lgldfZ26%!OF?;@dDMr/CoZ2NJ$hrjgc/b.[c&mM"r(Kc;Tkbi?R7K6QSKp_GgnM!oZeY,Lj4i*&r'aF%hu$6FQ:#.+&W!4QB=5r/bf,Oj18'm(;p,2%Mp[=KEW0@OlFF\9$*8&GCAI!.--Rq"Ld\=0[HuU$PH&3/HEJBuN#LBPn`*Qkp[&Q-%3?@4JQ98n"OLlRsX>d_'X1hn<:h'+gd\jC#A@8.Y[SPHUAb(7rk'I&J[X.tf4b;H#MHBIh[l./\*:&?(I!a1a6*WW/jRId4LNdtE%IOr5urp95U])"koUtfN592WH#A2lAp=ds9X&*oJ8\6f6R:0:,G-H)S@n]?`/Q'-IH,'WiC5C+]ZbQrDp&J4%5.XT$i5d>jh0]L_*%9`0r1A:-f[48UmaNQf;O:RqOXH=WlNW"LDPh<J,6g>X)"dQ@Hpk:Z5D"rW.'dtrt\HJ_V)Y"b$O^Y^=iZR:UQ<qc=cBg7q@>":r%%Eph9m]IceA]S;X-eb`/G];LSGA6-DP-hkiZeMt6Tf#!9QO&Ps(Ks22u>3DmB)K1^>c^oMB?]+N7XZEV]L`Mnk_W/aM\J/iJ@!Hg6%\Q&>tc=7Zu@Tc=)_7Hpn=t.HQnrg%f[>g6Fh;V?g1Ycen\970+eVNB<X$U1NC[dP<FG8bcG4-T>oQr2))1F=mo#s4'](6q^ppoQf%^9u1O4ud3SOh'%p(M'LM,Anl'cZ;CCZL(CJhXTAg'&:R/>eZJoq[%imH.V5SJW7=0Zg_dfR,U@a^:r/\*fHPsYje^dDVWH_E1cYX%?]TAO9EVhJ1RM!RSXskp[o@7X4caN5D@@WmhQ(REqdK/\K6BTOn9UR6@mcBm`rBH=W`(iGYAC:dG`96V)nWB,-CQb*nZ3i$)k(A:%-!"H<>+pZ@AL:]?4Ba_K>a"gZF-9[Ump>#+B>sYgF"2M^DI!7D2a:\ZNC_*SHL8!:^?Z73>O[):;e;pG</+7hXh$6P_^h6oPXGD.%rP"mOPNY`.#'Z%:Ki<5X$hBH191)Z"hl%0D*(lTlL983)n/$HlY/4RZr<+`SAXU.`LTcJWfI!,I<VeMaQ),7'NAq2,^6[mU"SJ'C%bfAJ+dVf[$GCB?6[)W`>l7GMKI<-,KO!>dm@ZbUX)u,0j1/M(2U;LjO!W=9I/b'i,d>I9[:_$9d:SQAP^4LY$#lItJnc0-bj9j&=%_h^)t/@0Q8GZ,RAkAnNiCJ!D]]P/cPGtuAodN0&N]TJbiS^;>/B93isPW1Jf4@kI4OpI'T"]Hs3"#8LOp,fs(p[.SL,di6LDs8pQ%f;FAa8`D31k>%d7an+:FMB&a&-&V$aSN?(#=J&.Cp_`U4M74]njKnK`*B[_JB*(,=T"!McT$]\Gr&prfRkh(=XD@r>UEl1/l"dd(%f(Em$hU]U#b/nL)p7HuqhI>@H`]fg7j'MBFbHU^9o=g0u"DH53iA4Uag)%JmJ0sM]*_]dHK]FeQ1L[c`peI^5AB0e\GTA'+F5+@b%U#ETsLkCqX%>2S=RsgfkP\s:Gkao_L*V8^]YFc_Tqd'LBiUi.UGB6Ri#4\'jgACKXlcqmNLNBB9d-g@A$Fg5F/fph#LVT[!;p<:1%T%\JXD@NWAW@:<%g,#E>TBL:^YomZBi2I^Idj$uq@$E#3OTU^a:'bm6jG>9G89)`d%[:4jD=lNMpTO`4PaGu".[fgfNt$?dj0#rg%GmV4Ik-jkB=Mtc.N-E-/1dQ2#;i%bSp34mLS-ZZVbkoHKkYfl$btf/eboGSeiPtP/8[mMhn-ocA0r5IFg62f/EOFBMZoh%caN(o$%13n)NJ=(_p"'16Hm6Ej]EC@u*LHZ(T+7TpG*-9%#$0Z0@meV'=:.W/agERE;\hh==:66.'pZE)kIqQI)5NI8ef@S2cs4B`;)b(eh%64<=-B.g(#_(-"ml@&elNG6MomtBi,],9.Cbh[t-qM%B(KUtVB="&YkrOiEc67F%12Sj5XhYl3p%:=fCU=RSg[N/GIFW$];`0O6F%?669ErVi&#bhe3_]89SLWD;He$=W6o?QQfEAto/j#<Ho.Y<nVXQY1fj3bCU67E1'h3BNq*Wt7B2hC73cH-TTLY<DcD--V[iO%AdT%JT@',me^Xu-EO$7/R5G8""eW-$i9CbWuI]"i*oJrC=)15lBVFgH_Rm4VoL9k:%[MmFi?_=_DA_3(s/*.na?B9ZLR([6<rp$J*eUm%ei5N+F5KnY[aTTEae"sA-Ft'<1qq?R8*"U[p!r2@QJk<jO%(tqb6YuVdKWJhT<%/q]cVJ$_+/#%KumiR:!DmDE0U.pc.rs6qq#8h%<UP3\!_;nK?Z5hp3mR,ifV1D@_t#l)>id3/-9Wee>Ja(cB?Y^b1O!F6]3WUn.1Ml!:>t/:bEU8bnn`2\U?:R2pniP;4\ttGpa`!=%f4R[([s`O<WrdLCGA;:`(6CKs8/lo]4QGc"Z0QaA+/Ws*!G\mE/LFl/Ci0G&Ni><e>g+?J6,mEHp+tg5%E=V''7CCBX8c]*=.3\8%5sDMrVltu.lf?QEL*MRSh$]RAkbADnS!VH*]H5t?p!)c>.+[WG'KqtTa2WTHJ_uZbn\hE@QS__pGN5IdJd/8pQ>.9W7=OQ31`'G:%W+DlbP>a%tcJN]ob^%b0W(u=)W+@*@3h*b2W-NZA=rt2!Ea8M4P\PIl6:1(_1K)DWo*7(_H'3t@:+`6U5?[.sODSI7bT0Q^N2l'8%7b//d3TTk-\CC(tHh+mHs0_Ln!`)k!kh#Ph,a73/-_@LWna$-q<10`B#7Ng5H1aAAXl%e&4[IsQLF7Q.jtG^'kkh_rIFR0#g\JtI%pURqV/ri0n'3)R:7K&f="&ZfscN7<RB,L<*EgP+cZ$-[R=A"I1hZ;=DGVUM[(D[.X`D_ONXN5he>]&'$cTQE\_hpS.($&<i"D=@1%AU3;4/qQ$-dd%6"c9?4I?`tuaoKH2XY&)b?WcIgCQ$LT%l2/`u\59^,3>TnqWeWf1*Bd`YZ"*V54/U2p82t</msRE"]lKRlVYj9`%^h9Z7Oalqql@I8\PN8A7LT1TN$Ut':LT1SC;a#FY;h(`,E%NmE;"_V:WpqEnJ+0.H^Ft#]r^53<aFti<j?qJfrm+Q]>5lKrWX"W\%)!pTR<'B`=C:j4W`ZM3%pe3PGWVqG[<=_c\?cW-N+0%dM4J/TrU'e7*:j'PHnODGLq4[(F.u20P;$MEHg*`*JZ#'F7U$<c]#/);=%%or3ZOE^JGGc1F8otYgiGBJpg\Tg;;4])_ChhS5PZO0nEpP5cZ>F,.N;]T+]aif(G+0$AhDu%uq<Vm=]n4VXP(6=M'+PtejF]g'[%!GV@XA&kdjNgkPdTp'K*"H7>I8%!!U36Mu^T$7kV)u?<$%.DM`S$RCTc7lE,FEDTt,Vdr%p?ZKA2Oc4<#F`"!OqkCYZY**W_pP(#%JJ.@nhqGCsR^7Vp2J(5bTK1d+U@]ui<u>i#%eu47,jj:?22ZlucfU%^"_N&TgTro/Ze\P?FaH$%PRC_(IsX*J=3LWnT'`k@K?`)c%2Tu:KNpU-Edpa!!B7%-HW&]4C^@8RD:TuL%B[?CK@XkOh-MoRLqOR,Y:;?Mh^OLg*V`gNefPnUJ1j+.'7ru*tS+,$)pYb3#l#&BI%CX;,cAPdgG"RXk^c.NbC7>KX(3EhF@lM;iDcfSod*citS:O=uiF*<&`buF)`;c@ML%a)'$g#L?c8)#bRQ4@mY2.?7@!(p"omI]f!%_^P?1NW6OPS$TI#O6tW\S$Tf9f!s;N@,W7&9)WYaEPA"2G=T.:le23LlD)(ac1O5>m^DX._)0MK`J`T+hp*9EBg8)*B=f)8s6J?:%mmc3DZak#&qpW$\r@HSuIFMLKc-UJ5^Q&64GEL)$7Wdpi-@^N&\DCcRcM"rPPFI)ML(+*q$?&;&EST04J2u\IoC)^kNq%Xh>%cVF%c4Pc"6-&b>YNWab(_<Lr/3CjaE5Nhha#NMsLO\V,pXWUJ]8gm&0,jc%@luTFi+P"hj22U"s.X#Yl*0br2P*ph\D&I6Euq]&3l\)r%L>?A\j.e%]X,_2$:S,:EMRR)C0_bE^3lZS0lY#'/c@6YH?TQ4(]@-[Ya7uUedFiZ$:NZ?he/dS#?d"mPa7sKIP/_X':XGI#LQ:nu%)Yeg10g5[\j6.<jnS@#HFH#tafK\[=TB)L7ds$`UI'\:A*TM5dW5P02S[N#j'H-o4q<U2_B@LEKVISE!ao&8T'6fDA=C7031TQOU%AmNKa,$R<Jg>m[cdr^QGa"Cu[0g7Z?)pW"*h`Wr-CYFF^j.V<7QYAP$#Oh$U2]^qp2mpr:A)-<t>3<PKD2OAD^YEtLh_?23pu(i&%N=GccjW#j(J*7^[qC^*142se^fPnn+V#B+t[fcGToO2n`j7j($^O#.tG)WbGV#J&NCNRVlTS3,"*TNj`ObalsN&qYASEKi#knG/u%;r.s@@E8/!#g!K:`k`R;HH,tVa#L'[i%KW)Z=D\g!ltN%$D+b;S0KgFK8spn0BjR#N772"[M-ueA),Q+bT!dXU18S^)\+7_(n\k_%T=SOfkDk@JcnS996g(fR2H!o3cfu>X7JoAi5MM3<=GtWarpMnfI5<*(mhg7),MZ_H.6>JJXtT8XpTs-%GKtY$V>n/fnM-=&1[5gL%kl.id42qBj*uj#j5"qjd*TPckNo/do=5DhQD`F9cJ(>Y.5)0jL=5Dj'F.p[ilOG#MQ<A?c]?c0Ts/nH=D71JadeE+>_qj0g[qfCF%h;Ku,I:$ESEHaBLBDl2L_Zr6gs&""8fZs>]FGIJFg0jOPZgMeA2r)t;s.VU1;@-^64eUFllOJ+J6d&.!-f*`I2=Rs>%Nho`r_[n7%?qfhBFGJ3196m;D_l)]7S"_uljO[%;efF2PL/1[qbM=3,0%]iu))LOfpSmBU#Mn@Q(#:\7%X6CSA,7bUe/du?--`MQgnpWLT>a%Y%%X3aA)Ttq*GD?_%nG\X>E5)1R^NPBZWsJ]1GPH./o=sK!+'#'q]C,0.);a%gLV(7YA#aDGe/]SuZ.X;U]=m/cQ,D'oLBgchcF>sk%eb)s%a$8euG6pEOYJNuF_qedt:upMVLBjtnVVU3KDtkH9c*BDnfS5f*GIX7\RsfMULjb\"GIZBH521JlqK2HRp18hOGE;7grnJO^%DRPVN5I9csGI'"Ori`oNa)uCIVE;H:(].k$iEZ+,#VTcNAgAfgE<C"8hE8*A5U$oI9-fsci",VF0(1.e!9e=YfmhhG<?j0[XW"@N%pU0KuI@jbO!.L$t0QQhm\J3)g;XX+"n5en4=uh?d2IS+K&B/n_],4>KiL><E\?i5SBn7o76mtnZnXcd$C&I_R",0`o?!e_F->Xmn%o3MZ`Rc5*lTL9TEJXs:-PJcP'Pn)@4i(El_INM?Kf[AZ7(>;'?rpG</ro^I=(Pg_k![L!;\*m9^a2"1[!PKYSpb+p'(b[Y\QW_<4%*HqU<NhboJK6LgNU-g`V9A5s)9$1#%ofa[1J,9AYUC]eT=koP:2H8Pi:V_MLn;\XLLr/OE!X@@4fXsDN3/j>W3"%XJO7O_MgA,DQ%T8M%Al\OCVH-uQKl"o:9_)D&cG(5CL^qH.col"cW?Sha30m'XtCOLBl^&L^0Yoio(Md'ZboSgMH\jmLmJ$0e=P^H*:rGHB3T[VOQ%;h)n1lfAF&dDG&=5CO[(M2q9e]?+9Th*OAKl">Lg.W>>(XLrZk+1qVdRVbYumB#N]RQ=dJSur8>ZRKd^hOhHr4-3njZ'eE>D"ikd%Z&j:(UPOltMk>gT?Y[293PKpVfZ'.t)TWhVcLQoMo!*>.V]7BIH%X,_Lk5eHNV,<A;r9QoGp2T&T29'':GJKe*Na>Y^5oquO<+h>%9RfnB[]\A_f9>0al:\aMpH06SKK*2@\J/s)Mn<>)`kM+Kg_R`;f)(Nt['sdHf6UnL4>s24p!^UWs$@qoEV%fc`T&?'.$FbmL`#@7%C?$A=khOuYq$t%IC%=)=@^tETbd"UQB>gH$%iTHK[5suea,%ICW@M+o,H(q2bVqjDI4c5`,_p[RnXL'(]>VU7JV!^W4pqo%]Q_\@%oqnm&/&QQA:=VOOhAY4>g:-rh>Hq8,FIrcsai#4+ktT.jCHGYp=8d_Vlf3=jH$O4CW'FfGLbu+5+lJj_5&t]u&AlgCk9S&=-JS9:%!$,,BMabVE9qKBSoSYa)Y2t&*X0P3<'Q\`8Q9/jdmdEj<\3h5`]C-p<qoIq6h3U"1&_l`VrUV<E5p].;*oH`GSPKoInG@Y\p8q,5%BpKjGr9dGS$^#IY$kl,>8q6X+fE>8F4O.k`"f^Sk="TJqQCM^ck'+19Sj:%Qc<p-12>u$F^c`sIqn2*P7kIZsldH8O/kEE9[62,!%@mAhpD<\Z&cW;H#bY0Tuq_b>6);Lt.]%0BOjb\6K@-e%-!GZo02sY+SQA6ZAR!)1,Wb'!9N5mdp:s6[j\K%f=\N<ku0Bp26f!$(h%k5"fOF_TEQs1UX+]q:>U?76EMb9W*]YQ+U^<K$gIpuMX0&8T3Lg'r^$34b^%X%DYb++O!03nSkTIeVeu;84L)7gMS2id=V<Q[EP,%O,.eCJ1DF*[5>XX]5XIY!]S&;Va9^r@E"pe'`Dd0rX`,3q:8bFIJY_+Y4HF>^<`@REgt[(02I,PnguG^ikgEKZX;aLo2"@?\k3@r%/^$a9=Dcl;?H6:]Ah@NBG9Qgrf<b*ai-ZL^o>(0l)g/6<,LWiE>'sMU2m_E7A1O^0oaV1J!)8aUC1oqGrU]6M['Fda$^Z0_WUTHl%'=7QP=(Q$:_+Sf1n#]MFq"Vb#qmcMWld`:S;Ei6O).>7LGYr=Ber)I9=PlQS'WXjZb\uo%MOc3?*H7ZUob*9eafM%6He9FR@jJrb%^#DKK,2@[X.YW3Fn[VbO-s#&=WKRdp]XFlAa[g_L^,SrqWYY'9mB3mDO.jYc:;\be[]UFMk/4ge=?'MG?Ce:UC$EU#MhOLYoD>>r%gj&]fC+&-#Hi<QHr0mG/3.0J!S=&Htc-GeRM>4FWEq37Zs#Sn@4m8HoDo\UHp\B(#US`J[2(S4)QVc`jI[00+,:Cn#G$A8]caOgp%eVLI)[MHJ)f?`Jhr#iTH]@\[4V2+)jXK]E&hemA//)ccJm=VX-48Oi<eWl(i'"0]Pdcj1lfNr53$JS(+Dsd8q<jLP.gB;6D=\]r#%V<"qMcCQT"/lN-<XRE$ReB:K,L;&r1c[G'.3&PWl8l&4`LW4DjkJ@Cp3X<*WTnr0&$aKFZ1E?EmW]7]YZ>Nil>cq\iP<0+eBOB'`%*rFF]92n[Cc5(oaR;_IH'FA+dm`3A0W:uBW>Zlqh<Yg\&Y?[lDZG!aFE3d*LQqIZ&X=>%3Sut7o@>"JlHt,$ZJ]R)D[G/<s_Ho(1%7:4*<<JBGCIc'S+mO\]Bok#AJhe!d\h<*:"-N/"t4qPg@)0t^U9Gj=b=kTji4/^]JkF`V@H1t-g,5/:O4`Jr`+FSCao5E>[%JHfC%Q\E,_kSr\Gi]$QRh,eJe]l;uuitCgm356tu'*f>?iFqe%*cJUA_gg7SafJ_R-WcZ&E18c'am\Lh3*oCK8.IM(I!W,(HkP"P)I't<%KkJ!mK)TPfEE@Dfl$F"r<@t<4D884d[tR;`S]E]njUSBWiYQ%LV0jmXTD;U1Ic]H/=%,F=4=h5=Np[Fa7cL<\0:lP=^r)N10OO_Y%ahK@^mlVs#nSTM5CED:MV0o`GR/-!&:\GSh2mmt+=KaBZACgH<iRmVfGKFP3UgA6gdp@9:kE<j:Tcbu.?F)$Pj^,C,@[q(8X]-/I%eO?UKs1P$r+6>_E&'<F@Apm=/'QW=,3j(m^77n*b7mG\U_Nb8jT%GI(#W99G_\?gepub"V>mn.3=Mu1]F$5g<TB*`#Q]jD])=F;h%qts/YEn0NNQ;bBblVb+_+;S:Hf1.+^*u&+_k:Vcn/%jYDkddn@Q]*.e4t)qN]<:nV#BBPXq-]hV#PLdXQ&5h07Oaie/sYj7fDAbG%kH4l5[?U_[_U7c=rQc.Yl;Bp9][r'Sf#hF6=*J5LYeRrJ_qPQu^2]mjp?!(C\F<6Bhah):'_OOW/7@r2AL.;AgjS$^84@WETCM84%m*5_(9efsF7!b]ncL,TH0\<ohm-\JO>hIc2<;Xo,S:1FCq4q=K$&a2&G9>58[#aP>n]P^[n?TWM?`Yo.DUDFf(-j!C.fS;#9.R88%>['a+SeULIojlr(%jdT"pJ%>+(WY=o_=9#E_+bm;,05sa/%jpqN)DsTP(8[0j\es5JIUW_LU;%#R?;Qk+7)en<GqoHq$#)rp91o/%*oo7P^H8f<YU.oO9Y4A0#%jg)$Z^LK.&;m[$FGXtO1dC%(:2P1m1kq\mhPO;3_Q.72Jr[IdJ1juR>YG#YCbE,I=Z(Clt2<sjGC9)%cTbF`?gEj0;^6A_EcqHbFh+$Cf!Y`+#4^=Rm,2mTUi`qADIeh!\QWEk2gdg]_lL"3VgBYW9K[!rnl_i3f3#*hG/*$lKpPheP6ije%m:7[?H<!+8Hg+Q$aLF0Jp@3)Wl\\)to?]t6-Tu:Ls$Rr%&$^3WdqqSjNn5eR`VB=1='N`fh%-3T4a1=A[ME<4h/>D/kHpPEgPstd%ibIF0)1BXGR[tuDC8V@\Rslq[h6j=eM7d/tmH*ULV6/$dV=\_5bCVHkWo0#^AP\JI#Pj"3n%9qulK(dD>!4pie\?HTf"N!YY;^Ll%WHsE0i-n;QdOr$#`FG`[Z+thU/,t!Z\1#!h481.VcUpX2]i[ffro+9fP(hH,oqh<Hp[T3[V+(iPcB_qe0!(FN"G(D=9BC'U5&m/`%1UcRk)uO/D;Y^B]F3VN!X74CCqSd+8M.\I&ht2=I6AlHcjE0W#25$q>D;_OHfs@N_#C6[E'"Pf%p2XN&e'n6\CF9O8*uKg*;66f/%1&_$N]^;:,rOdH)$NDq)9C(?agEauKQ9K\%HV_E6))(K3#]$[T,Toos]XP&Q,MP.!`M_1Zl4+"2/U+'t55q)$FsD("'H3;mg%k4_%pF0s4D'cKoN*!bVkIsj7EU\QtA&Mlr-/a'F=Gf#FDR6ISUD:rSF+8H6\1Ts/Wog1h/%$4*%sH5_1[XQVfFP7!C*@_)Qg!%MRm2sS%qA.ZQqK@/q[WQc2a-KGH_Vu]6k!?AG/S<R;c!'P6qq,%eUa+d@"5E4M?:kaihQg?3i52#=)E3/8FB&beNr!dBW?j!$)#p1?<kBl9%\>^tDn6bL.RFTU/(Ar-U=6MeJNo5\PXcg5>r1(OX>M()$90Z4t+-[fVQ?4Y@plbk7WW/>,!Qn<D=MNQ4j`h2;CqYhko,[R5(Mj+T%VUu'Dpes4oqHEhQ3Ug9.^7r;S)]qkf`M[6YQW85\Y.a2'Sn=%:T*&W2?)Gbk:&,+hr:cFnMP47b5RLcYae4?/Y!bRKrmo3D=AM,F%>41c`L=oaYae!U(HJ/7tQiUtgp@CP1^HZXo:J3543u^-L"Z(ppIUi'+;/\IP_JH.>E]=$/ZZ*RJ!\&V?JJSFeQD/^J;'8M)Y_MFC%M$)_p$Am;07"d/LKY^=g"Q8SIaRS@Tf\bR40P"qGm.&]R9!SBkCOu_S:#].@UnZd$,d'E1BBG%Dk^&q^fL>_/a?n&r0+^@/Pd7<+%`U18O2S9ae9>s4k+*_f[=<X9M7fapp%8<Pm[p1[o=Cd$3q$3G,7Ml=hT$LFJ)]s%mQ.K?UT*=_u!2EQH>Ie'n+W<QdX08)sXc;C#%Q2Bn-ou'khVGp*"EKC+S3aTQL7@.oLMbb_t]jeXE@\(BH87=aW+I?u;(LLnN&LN)0=R1PNHk\KR9(e[]``_Xk=9"h0>LHu#^/Knh%hUD!hrHp!mn<mK01`gsEV>K]8=!h414?>^NLE[j=DE!sl\^Ff&^`M8)=>Sn6BR6ZIQ!fI\%sC_6mWUT^pKsu[9Y.`7adR#B8UGXp%/[.BEH_kO7SZm#sH9LPS>#4-9Gd"qV/nR/LbPB$ShUOu"4DT+4iK]V&qZD:MEpr*)p0?-h>!fm?&bg=<ia]Yu\iG!e`o$3en,tpO%`$t`cTripkFOARlo$2TbI+>f]Z^AH-7K0_$1@e8`U^o]7gem1r*DDpoP53K8?\]g@.kqY0,36J,5=p$?>m'u(h@SE.NE(@:!A'S(%I??MG*K3!095;Y`*ifKKmWcG[X&ZaH@n6@U-5i2\nQBthPN\\G0&FM;[Gu-]CEr\`p($_B%;1-r$^o4biq\uprM!E1_QVNP#Xpkq%jR@O3cOF,F1gtT8jVPC`JLcH1B5>2DpAEM,1\8K9Q*s]t<_@?K^U8Z3+3?)M7]s,@]2J,Kjk]7"f40&SXU`]Y/7!.O:=q"^QC_.7%d:[eo#NCC.)9E!XLSt(OD22aGIU@F27m;h'g4PXeg08EG>I^YA`%d#h(FYUkdOh:0276O@)/oJ`51]"G,)p7*b04*i,P/Y<hS!;E%(C61P4oLs*]TK9aPoiHRR94f-['0&Hk8+Aha1GJJT]9X9/$TO_HkI2&0/$>YnRH'_<,+@s->^AKiK;YP=#YmYk0a"j;<dMG`KX3q%;#%WRHH5R[q"q\L0MY'5BF*J(#WDJ(oj.9i]Q8e(IC8\iAQ?`[lYFaT6/"?a't1`#,Gu<?kO,N=Z*jGU!GJ3"$T+"A#a2^S@JGp%%d!H<e\,CSL!rX!qdWHN$XFh/<r.@NT3[]JL`RhiL%OXaQGJCH5$p]^+,C(+sVuGEX&&F%4?c]$)aVJdl:,.4M3X*Rd&3R[CV0VW8%b1D^G)#(SX,:DU12f`oq8WT@hSK076F:*BbQ%b`K+m%)D'XB*Wmh9*/eR%/01,<RK=:_d]hBbnN2ehWuF7-[Ni-U_$[?N8mI7__?%])-_DPCd0+SMi(rmrWdFQZo?_-C%o<T$3"GXS?AeZ:id-o`YsC-I#es4;(8*bS#-l/&oWrhsmkt)hq=7AaRKu^&1\.>NkZ$#c0UL%#sF1hUlZ2k8@cLp*LsUO.)C1KOkMk`*f`^)8sDZ)M3)aT_RsN?<uh%+rD<W18o[8(^=pn$gcoc=X97--h=sa&`t<U`G41]a[!`lj%$TO6WO/'u\*&sQhNcdtFY]q=l\V[q*pR1[%h>JI^qsk=^>BhC>*b_h3*PT=a#?Dp";n_6jaXP1;m/Far.)8`!4dVuH[+GY]g5u5f%XkX&#WkF]1_Zn6Ib5F!^!<=2$a0sA%**+KL[%flk6]oZAkuA!+[M>D5\,rhYEQ-\=!tO[na7\CKn@7I][Wcbee8jq<@+b=(i35J>%&!%Di#r=E>FY,D(K_4uM:rseiY/?QVg"hNq#jhag;IKTBriPe/bN\D7rag.t&^F3pQN_h6pU]O4i-$gIYY"gX91/V4$b+O.@+\1g%Q6)7TBDsK3[9s6\$+<'j=kg]=n[RHSTbBM*=.IU40;J!HUsXY!i\6,WIX&W6q0\AJbeM4s/HuEdqON,hGcRLlbJN*$M-f.m(<N:(%:6^..EVah:`-n#6!N-RDN4&W'>2?I'd<\u$/epQV*fBWUn-T"A07fIjSJ7:HjI,tEHsDQs$^&<oa)B@[>oe8$Hh8XkRM!n"q=="-%@^3)TeD.mXq5Yl_,KIM7^o'1s/F7gkhRibTJ&^V+qn9?,lQDhCI?m+O/3[Z+!uEQ]Oe87Ug!b"]%!HiU-/Yd37?-jk[i;0UgXroH%*-ZI/T<5ElEbMe0Q1Q3Rnh?2+T20oekRWUF:<PA6'u,;Oc8XMm:@W%t)8Sh+%P5&ZfrTMZ0^FS7m181Y-\LuLS1O"p=\b`6;L'_t%Mf5maeWg/!SRgaJ+1gm?2j^gk%bR?oIq,$Ig>U"W:<RBlQ4:Z@#$0MZDj&)XBmg)i@GQ=kB($cN_d^h'kuH=&G2,<Ae!o,]mP?1O%\];lAS4\"M(JQ8aGED^5Y5_>R'%m;5*pXI=MlS?DUFcE$BP[KHT6]AAUNpUl+ua&JHS_,(leTEqZao":W:.)fg0K"M'[ablJT8'_%F-bIgGY6!n3Lh(G'lhZ'Slkiers/LHEJs<IYk'2F4*-SB5L(=,_@^?ZX=hfW`6I=&4.99?6iORd80R^VV;hKRQfl<t*5grK@J-q+%]-m\-,>uNW6L*Vq$d3I3f(AQg;D7>tdB2DOp@e2(05m@u>%@^ZX=nc9GF3]ebC(GM(Ua(eIC6Ep1IMQNPD%&dIPsqL$"HJOXVB%i%@(*;RJEtPB?L(tM\U#c,&YuO,V>.EDoeV\#d&sb=X5_\$?@jICi/opu>*-Hn,/o3Q]?@8^kObkWD.N_VU<POBc3aut-EfYJ]JNHp%p8ff2s8<?.FhUUS_f+[6`,G(3c+MQNT(Ed7m2fSqBqLg$PAUOLp%sg(XXlB=Dm,+$I-;S)WsEh$no)5%MbO!10#hAEG!b;XOu8hQ%.40"S?T2ScKGilX)>)K5on(Zeo&ZM9;t`%tp6,;.((B@WcJuGcB@`N@Grq!`Wo^tEaKGJSo7:AKf!bed8R#JPEHZ,OebPRb5*^>%%Js;4;ZUan`^"gGX=og(eD6h#7pP3e[l70.>hIBV=&nQd+L$j;]Z#Vt!PGGAhOk6Renl)jcPoDD`ce^?D>3XYGAP=IhAA=`X+'`*g%E`^q)r]+1cX<4ZWUX`iXZj$F!q"4Y;UUFQG0juf;gg-3$-g;!9b\sAfDLIIq4a0>'2r2&WT>?]6KpV.H"]aD>.7BD1+7G9!MJh6Z%<h`ue;T+#f'L9--kO#I:E*0R!]-dpTag)5='sdXn$&<ZGD1j)a]-10M;PhUnFk]K<XFX!R87jofAo]t2P2BuX;KsL1---m:)(hZh%ZPhQ"b#,<Eb'c.>kJ:!J>'+jt-PU!GPhk0=`PTf5mONXI.(=_%iA[g,6[R38*V8:4:[G&"8NT/11Q0DW/?QYeqqSmY4m.:/dOonG%aFE8sC0skl&u(`o[F:dnHC*"S\,cfUh@-Xhd)iD^EfSH^eW<`G[>WAK\lE\pSi(Q2Q-d^GAm6doqHJsq+!2<13CSApEO/T@\nXDD%)BX<uYhV_a!]@B&j"4Uj5QBjqH1<@;/Y67C7R!ra`>N*bFRJM#>1d%t$#l!3o=;?JPBuYFn)+35YoNX,bX[,?cfr\$*'Wo&YkhJO%qs_1&b+,?7%:lh9We,[_o&_cTf9_lYDrc(:@rEn/B;Ipm4jortNeA]Cs)0]h)l>B'BVI>mHJJC4[#`r0YOC@iM9oF>27kArBA_%;%;S1=9D>\=]d&Qi/NUQ:?H>YTeOp;.$1902WDSY:p^ALM"`N9PjbER6mUqTFf/$4(#U)Q&/Wd3%D3`qL^KmeI<$tWEt+2>;"c9In@%%gUX$2XrBUY&0$Y7Ub8d="NEVDJniir>Ftk#t6gMR/iA/VekAUE%eP9FuG>NonueKFetU`,/s9#Pu+t?eP8aVfo<Qb5'FN*X>h^c%57nW-gl9T9.o34VU9p,X,]i,0m.<!DUHKT;AX`?X]2[jBc"m+3frsjiN5aSY%.`(Wku$45\N]Z<!sl7"_Bksmo/4WU7p`@#V((Nl%H9G`solZICb`%-kG[E,jn#nCJ23tWWc?G868/YZbAccaS.TYL9.jqjW6/G!K=Mfe:GNmq(7D9hZUbD'?9Ep>?iKd@oR&7u42bNn9%\\bWeFH4EM;]_+2m)pcdnQ'tj0"l>>-Pr**(KX]8*#1:s:=g:Y5pU?udf!eO0t>*%h`k<%rn=FgT3=>7Cg=@XqK6Z(nNBPr95PaJ%U<?S5/Wm_A@V*&iliOk^X46k19f/DZS5dc<I$jo/fnl=7'T/[s*iiL=^plISEU^;-aS.b8R&Ag;otm0Fj\iI7PB)=]W`5p%Xa7;&%k_Oddh/.%;1##b=N<6H4b#qrmI5Q%SVKqf4[F/A7#H#PN!]OMDeSfeOe++fPKYf+ebouUMprOJ_ARH7JLA&Y*\;6\DVYsh^g$!#%%L#(2-]`%#>MB$g.K'L+5m@VA0UkQH[m<DU]W`29>$6jbT-0":OA<+Jl-)TcnTsPN7k1'!;f6.6Y;+8^!D1]m6Eq*@kmTpqrRr_u&%L*e^gAC&'Z@kQU2/l&#YE[5M"-%&LGB"/2,Ib<:%/gfI.I#?,@CbOireQ9t<.i5tA5I-@4eWmMS);XgHEacZr?K:pDXEk=MCrcQY%0@i(#(LZomb5mjCc)G%J]OQ@u.eafDrhf:=WK!p$d4D0%hQb`Np0hiV2f9,s)l7BL[>lPELBC9_'rG[QU2[A`E:V,65o5BJd`YWR%"_hH3GDA"9Z:L\Y\@6[J=ki4a?"Y&!pY?5/Hg%g45N95WeE]`8;L^,??75C00%V\ch*c#i8Q:c5h`L-JobI,.Nt,EiP-aNOf&oog%U_r+TS+b0lC7AkY@9-M!FbZG9EHRt]*^<kEZ\S2-k:"#R'p<!FR?NK89'5R8Mr#[R"ao^U'm;G#=<\/^NL!It;gJE7quP!.=5CXr%H$BDpC"<S9hZN4JCQj;mNRhG+f)=&UP8<S*:\.[4!B(Aa["TeAq5.)Z#6)<E1)*WlJ(ShVNRb=kq?XOap$"-0XW#2Z3pbJ4$S*PW%0TjMUR)=CU(%no;ei8(;#%d\a*,O^Z2q?LVDM&2k&E7",$XMB=D5k,]NiaBQiT0:p3L60O_M\S-h5NZs_B8KgM;OpMr*]s@d\"F6%K?KhTb3qY9p>t4uU+'3/b:6c*KRomiEDLUS)>X/fbLU"6[U2[qf?B5ph\(!+DaVj%'7co+AnR%9F4TNB[F_CR_0Xj`%i:SIQ`>S!%GWf0S%^nXP'/c%=;H=YgHS1Fq_KhiDY'g0n4]pm4DtG*ucY-,`=3=h"b/L:.F+`6tQ4!pth6EKLpA)-se"+[9_;Enhf[X]`-*(uo%F6OtK*oF',;Fm][gVLJbThVd^V>31lGNZiI4/bOSgU57(p3S=F!_1WS=I5\n*`]N2oCc>LpZ;)&^)5i-ZC>=Zg$ac>*.=kgp@Mg6%V>-_^eEP)*<cr6k:b&0%d6>orC0S]Bo+,Vt[I[;Jcc)g'o@'@S#!*LcmYt>uC[6Bq[PogFnej_spj=O1mN,_$c^o<;=,lX2XYjH0%R<A0)_p4nTD?6Ah2'c5RmR&IQPF*L1=<s'"8O&NUF)MQo2nA\LbsV$#>'"Ke]2%bQ@2#0Rq<nq2VLe=SX()<9Kb^j/kU1fW6G(9A%rHG@/XVMSJ0<6/<n@Nt]^V<fl(KFLoB(dCS^6;@O?u&e#X0oQRn<Yrgq=jX40"TJ=BqVt"E/f7rA--XRV\H2>WCu0]ZsJ%o#7Z"A%)gIjkFpa5u:BJj=4`c(`qcG<deHTfM/NH&/ih!(3_l'S-eWA'Ki:G9ei$LZeU4P7gHNL(JeN9ZKmEDbm%'9mgGIg$+hA5,lH-$Y,%UFW5t@k4JB93ttAFHm\ld]tp>EpB0iElp!7$[8A:d?RYImS+m:Vg:juf(GUa^B5ti]g'5'/9%HWo:&t=,?K3BpM%^2<FS:7rMV\f%V2]bC2/oDcm^$Kc<Y*38&ah4;Gak\@[c<'@9"SP0IF;c0>JU*oK!ZOUYh8f4rSF%LkG7U`.`7e1Y8)=sm98j08,MfN<I8Iqc)iK8%GW-=FDhE',!WGuCWKaMC4&4Y3/oKR[$D;J.g1]X9(1V!h*G4#Wq0@pUmKRjY2(5Nj2ZI0Ag-[<9/VZQ@jR,97H5aWsHV&gqZdNWS%2`j[CfmuJb<-##*m-VXQKJE?#J#r.t5RD9EDp%iob2i>Re9EPG\oQqUCle2B])so4Sl1blV*s1$3d]Yrr9-1":YEr;F_kF*PEuK8%XrLF`J_rE]EtK_"ATh'HG\)!;&#E*UX17SY2)!g%rOb[t/)@2jrJ"1di:c%9ER%d``R3nU59u>f'Lr7<s7V"rqh'.n0!MdB)N&7_%Br\fCcFI;!([1h4<d/Q5G+hC&lE54cnP:X%l0(.>58dB_"W'(:Pfq?EU%GZjK9^(Ca],`8Kh[2ilF3)$l\uuUQ8agU@h-Gc5,qrS%H$*NA_340NTOD4,6<TDlUP^e(4Kb*'qVK&r1e3n!UH&8G))dC*?84\Pe8EoBJqlepjhV90SOH`8PH/X]-TrGsOD\[d)2J%<3sqGN%pM&Eo2Z[%"#,CVgq"%2[5dBj'!W;a?!3=U[oN_HH^'T<fkMtt3M#[,p!,>[ZG8J&eDZ[^4RB^r:r:qZ>O>,_`!r2@]!5N+)mfN:U%9`Ujma'A[p^'Oca=(C\#M#[,p!6g@\]aNcE2Z[=Pin1jCid\WJ!-Wki>l]Ag#lrO3mOeKYJB.<BO1bYrrVahj+IHtCf)P3GP7QON%0Z3m>Ws.8H#(RTbs1?n(%,CmpT3_I]?;tLl!8sVU4e7VpJX^h;9.WAY!4T@//(*!2i/k]m$d-O3].u&mFPG\@^K0!hDk-QeT!=G6%,C>UK>]^?[=g2bWVAp;RSg1EQ8qt%U[M0bG4bI$soBW@:S^mK1b*#[]EUO%T8RXO51kT#gjhe<lI.Nq0T;>U>/l95aTSs)H8s[r)%$Dj$LG0`m0TH\U\7IV2<2<.=e2VA#[&(Z<@dTGqN,8HBnEGmJkq/rkXmhD,ZD`;\\.r=p$@]iPGX[PT'>;*jR["/(2Ss;h&W#S_K%`g`7G/1-phK_:00.FAVMqgA*%(NK/frh((nW]j\aX?!8A]Q9G,P+;r2K8V>e(#]V.^tZ7>hB'>ke<nh\<^]ct#aX+8Pb5bg]rha&%ioMp,_(CGVBU0^^/K#P;q7#/VI\pV/"7?)4<6uGkq_`n@Vnc,#^6YKH`Z;M25@I;Lo!@=9BQegX\tD7SDrEuSk,$%VLI/#m\HM;@%g9Z8?'%tandQ:HZ(1*;NjAL(al^AA8R<3E`,\ZU[MqOC$P\mW\)&H):dpqF6</<\=Xo5X@+BHH@AfTWeqUY[`L=Um7G"(r8q#0Q]%,n!-c!'+b8HU%:UHCnuc^42Iks4_4B`&V7$SATg[qH#W=7*1g[<#,C/&R'Vj7HrJc0fE,4%RoeeZgDYh^#"0UI6Y1?4-rF`j[&]Y%[kO/?A'a#LZYOVZ^dbhhVr=Nj(9lTsLA)j"/dq]or1?drrjU;X*")30;+R'as8*32(.RfCJ)QGOpl>pcrQguhG;+5h/'L0:!666S%&lYO'8oq#+V[QQ:kF)Aa;?l>5Jr,@G<t7frPS-BTJRh-4#puM`8]OmA(rO],#-TL79JF\>R$?#f8[2[7,U#iP8ZHUP8YV`<,b.0P%;j%@b+c0Ap2$JUuFNp>V_g>ufQOT?jMPA:8\,]+L6lJXZ'F%EV<<J&I&l%2LbL83ICR$JMP6q8_V3aP&rgOQ9;M"m*csq-t-f+Ln%pZl'@Qcms24-!P$7sq[^G7$`*6'g2u'gja=Y)'`i.f^5]Z=%FO6mF!."tggCP"]&c->PXC<##[lCK=>r9G#0r&TKHL8J,YR7FMZs%Lk<$Bd1kgkB>]suAn^NKA4kBK;ZbNKed+hR(.JfPP"[qC0[UGR)@WKqIDDa[9dU,tAU&4ffhcSJ/0kV=ghg6%.KeP--38sR,"OrC%6:<\/VPl;j7"P_1;q6Qol&#XCA/Wt$+eC@n/kZ4=%:CMW#-QB"$YB_QK*`l7C.V-6!qJOj'T"P%4=:J$3=Qg'd+MoL9#F@(OCZM2%%?`"W9a-InMhrp"X,<YQru&Cc_#uH0Bk<1#Z;h=9FqcH!Os-fP"I2A7_3ubb;PmnY14!?.Af;EdL+3j-0GU;l*(X'a(sFg9`b*.$%\8"sJ(sdNJ!*3&5i]PWJEa<30pF.+B=j]*9F%$2F;0AOsXO>K#V?/pa&F??k,F8G'Rjpa8`#UfZ8Bc<W#E^2J`972"A>G_%49>IJ%!#5Y=5U=ufg)'k:4s2:'MIss475P#GYl6N5ODK1bZ,Zu7Yoone0T`!^3!$&l#(e8g,]-4LQYF")#[:B.pJaT%V^)g8U,n'"+4s2\%[HP21d*WX4*#g#p"QqL8!^]kC+[LFsRXH4\74(Dg#-&Gp*F"$pM\:Mt.+_.Pp-pj>ZN78F5P1JECQ'KH>*Y\3Kq#AVSJN<%6$.72%Qo7;[,`!_]ge^O,.jS\6l'e7X^`\ICf]n'+M(6=u72fGd'boZCA#d@i#3^d#CQKk6UNg'@9Msd.os9`?(QH[F?@YehBb_N[f*$'t%@Z'qeKo'78&Z4T<Gb+t[0U_\NJ1:]K%F@7\-=N!\WX0kL1(@E<!cj!d1/q0qLo*cQ!g6'MpN0pSK2!_\Sqd_^<>,Xm&4*cJWX8f`%9ui7u^a,cj5`!L=krpu;\l&$";$>^:-7>L?U'O.&8m>+A$<[QGEfWaF6WD`iO@;PIjKC$@#!m>G%g5-+_6a_%r+8N2;o`CCTZnT^%:Itrr>$Y[%>VhdA5V>G+_0i8[R-Z7:GuY$&8)j`m2F3?7"B\O+kEGE9Wg;n"=HUD=LNGtW)d_Al)?S"iF`JCP`["QWb+OG7K<,''%#o_eMX!gVkHgiHncPf&B%8I$m9G:,;=[O&rr.KqIer(Xc('bALp1r5H#gl2`_a'[-8-(D3;qU#[KNgoATqhjf,SR!m$uNk/!0Pra%Yj#[#KJ(,`&M5S"$4JMGh?-u.DKp:K8LR5`3X#i[(r9A(^g\!hp^^sAL^",$9`W!U.%4uXTR]HJE1(C]5<=al!$]H;9hW6Z.*b(&%TM.1Y3rh93'-tT8Q5uV"_]Xn]$"7dX2&5#&S^UQ,6\=Q%:m_Me"\#]Q"ke_dUoQ%LE`WhUHl$T8_i_p2:17u@)MXD,Zhp%MdO'Y]%@IfPF:8NuKdKDH.-F$<%;m66(!ZIBI1N5u]3-ha+(23pa(_5%"S6=5dRB25>*(VMGe?*9iVLdJ'-Fk7WNnHiH'CiS(QD%i@VB?_c%)><b1-BT6l;D][=VD'3/$osQ!R`U@;10TSmJO01/.$eqJU>?Ff#53XZ_,/+u(/)6P<3R?]gBBQ-Ctm'2+d.A4UBm_#6U??(,!3Yf%<C%dFb..D]9f\A:VX0I;@[r=e"":9SYl:1!hVoeo=qFE60_)D6ViY'0kSm,$g/alF<!@r90$l$cJpe4>,RUVQ6%`,='aYFSQf-4@%.cXAt#!YL4n/436@,7R9+sRnsWs17VAg\$r,$KDPN]qss&kN0L#]*ie#!/*e$td;uE(2Ze+daN/mZQO:OLM3^B.5&LE9'T_.sSL!%+G#=NUQ.J>09H$rd4@f:(174/(J0?UdEm9Xd8bE`P*'2#A5l*%Orfo_`[FA!>pZZZ+J<lY,,->_kWP#U-mMGg&$-L;+X1%u"qsZk%kQF8N@K<:bWBut_(s[2Tn"TSW:g*t01<k[l!YQ7k14!e.09TQ3*r6IkU8tGi9SXW&O@<m$al68fGB<Xa@'h#Rb8R!%7NO6k-^q'O%aJHf-".fVE%2D#3Ql/m2C`(Bu'&q,A"B?Y7BPemqFI9aqU<6$'THaL<;,Gn\RK=*)pCs,NR0FF(&)^2R32T/!fIk1.BY\$2!LKsA%N(06TMTR'7$rmKtgP4np*Z:XO0K?-6K8C"jEKRD<)BBP)*GdtJXB>`]<Mi/];kggTN2<7WM%l%F;'k?lDTBF(#U'Wc.6%QX@Xgu$%fkD(,>3hQ;Z&GG.1=?0(8V9lA7?`(chD<kZO&N4(/2RHA(hA.j_'0W&PV`SX7h)m:O]Bdn`%qYE$*p@20QM4G7Xd,0FS$\4iabnt%rf2k#j#NGtBra/96ue,O5\@;i7I.uZV?#bFQjXBXfEUY%'Hh3ud$*h#W(_N<B\F#D-Mf!(=qKbHbg6Id8[Vt)b8mF<'be$.cccSj%C%3/sOXpl^1^jt=YfpKUe.#en"X9QHbjI+4]3mi?$rI?U!<d4SPou6?*39667$L=W17:NW3-a/7NhH`/d6nUnH]eO5W<9d=0!$4Y%74FtU7u'l1WBnr:AKt=D&j!,*biFg7TdQen9FZ>75neVVVGYEf`Q^b!X5c$]pgs"4)4mMXfJA7uO:R:Y/d!+$Zu\s]-b:VT&1.e/%iIuKX3H73F6K<t^kKldg]EHqfHj1ksih\?(&BA64%'54X(c5_3)-%YA%#kB"7M*[1`VBoNI,\'[\:59#+LsAQPa<q_Y*0+rrmWgU%g+kA7'cKi/ff$]gL4lQ<[[Zn-K/#"cSg/m%bg=mNp)MFQZ=(I2)R0J![CB','X.Si(?QS]O(%Q<Mb6f:;.(O"&/=+D;o@N2%&>E;%OUcACY]C:*U1eLZq,e]X;`0g3.]h5YaSmGRN,C2^1elOP!A-kO"<pIIb\g@uW"4\X/,BIg;ofCO<@G'RN+,419_.?Lbqdau#SQEF%'jY_nm#VX!jq/rm`]ck@cm+-FJaMj7$R;s7(*h;I:>?MT;[pe6_o&/*L0?<"ag)CV!G/iO_,Q@0JHHEQ=Vn2o!@o@??u64=*IhT]%#oZ1ZXl\R4_BT)e?]pf6iM]!]:U$(QN4MS*Qme=[N4F*3P8S[6>;8aOJLE9155S9q0U#$O=_I9S-G]h,!9cE.9K`AL2<gcK[+P^O%-_/g/FLB>kXWa8sPNIb>W3$Bi`j8T>At9)]QkC!1Ap8#]A<"i!4O5&NPE8@\n2cA_WlZ*=Pa<hf2@O^?_C.gg:f2=oM+U'H&S4?@%m5@JU173TX'kn(B[[3[qYaX?aKD>imH@G(B95$[#`2jkJ%T-1Bbcl$j!ND_<+DZum`3?,YjJ+=6\cn8=Ld7L[-l.g>pEFjGJQXgK%Rn_1\%%F.#/B.\@,_\&T`iLDlk7$$!iAF29U/>L?611"\At[dO!Z7N+-7R0AZ>rKLiF#n1X]!LUZtQ[s!+aGtMBL:\BWUN#7"ca'%#QsIf$d>''XBZFS,SNlP[.tE\L1p]FNcg>,k]iuH5U"<Rdk$ko$HsD76OmNKn:tC,V.D'.$64.f7)=E?.p,7Kd$7:&$#NnaHH[YX%?,@]aZVNib=eQmf8Sj'rC!\.QQVC&V@Ce_4JB1Dd[L*bo/)4[Q'HJZ%p^NhDR-b0$"?!:naAc^iAkJA[%JHl3fpE\3T7KpXejAgk%[ZmOpaXDO*Va(e3k"MBVZ,K7<#um]_Gt:gK'UC=9_jFQ*8MKX9RB[/++G-8qE5<_)9^q[B$RSD8(\Djc+e"TD@`(lc!Q1oo]O3FK%J`:WkGR_Rf'&.7DP>@>J$C)s&d1Je\hUIqm8X;<HJY6gRR3b)=4jYp/@=h]K)(>->0gQtNA<N,@&1Mo0qi?1\;^NCeb5n8mBQ^6T%>7s]7W1lZkYZfC^5U6M9BCC[4$!At8iCk0644\L#'MK3b#!E/;SP$f#BTV.>'IG]bX0?t]@S9)rN!n\f^tZY8V.[K!jaNVrR?:*,%>]MD6;AsV_iB:*_S4",E@Esq,=YR`-(nR%6P6DguHA,\U==sed+sm8.mo>8'a:thAfbBUhdT3k'K6RNJ1f`@8\#NZh+XO;\9lPXl%-5/3F\H1MF65Oeb/2Gq,KdE.,/-?&,6;5N@_:$/P1?O=:1>$%;dmaG;_VemN)'bS\*<Gj8==_JZ?C7H`QqS8)bU,j`,@pm0bRbZ%%YGT,k=9tU""[YHr!90A*(Fb)m!G-s#N6*WA;C&IK+ta^,,E*mH(./.56,oiQ`PW,B-=U0sF8)%Z0gP%RY\u:_#,(p2U*68j9;o=B%$7e_(]n.stO[[)S?lOD[7R;\=6Nhss&CEc1ChbN.#$`I+?#!7o:1m/T1;PgE3Ee#Od"t8<AE($/7\GK8/*[?978F31N$]m_<KXM;%/J:phRhC%1\.Ud8ZGDh.3X2ie6"SM9R+%=2_Fd+b@"f%A+Tt16)6ORK5WI#?Bc-A.Qu8"2MrTA8UsdO:P0Dc/a'YY*9[e8^=&@#6%fMHYodi#/4`K,fiLgL0PeAZ9+"HCBA_<*Z_6Ll!k-#&.X2DN-=,D.Jnk&;G^(`BfE2a#<D_/,.B(B_T'?Z^j!YK.FP<`Ko*7sD[=%/&p'*M$XhdU2W2_NkeKt!FJ*e^cI1g&4-C%%',!\;JCh7.l.378gYqRR'%:u2^L>#CD7XC[g"sf/$_q)MQ%L*%L?"K"LY\bH4El,%+NBsHAIt&bARMS?U\IjsN#9[dA\q&*EDI->hBD"q^8(GlBMlW5+n*Un!M@6I"s#<i$0+Q#eiq0b:psh4(Qq(i$]Sb\]gqT]e:=9%%O]Y\I\T&N^UKiUe^^39*D-CX.e3"@R7Z8u3`uo^X2@PhL_??"BUcYH>nMqRaTn!Q'W14#WJhAe[ROmfb0G6W^TA:TWp&I$E'"J+,%\0Oq61s.c0JeX#-@ZAf$?qCt_^nW]BZ[aGtAt`0k!0W=u#M<(6p.#.EMX;6?%YQgQEjVg#c;mH?gq4.!1Kkegk"oN$(e3(2bT\QZ%DCgX;)B(-F@.KCZV\gb]4"(b81>uVKX@A:&)"<d3C;4jf@7rH)OuLb^!A!&mC^*B+%Fn>Wi:?.9e$'t4"2Sf]"d'8$0/8ZH4ugoD%E_r"UQEd`RBeP<sI^(G\C6f^\P[k0A/-c;$LL]G4.G>oh5l$9[M9LI<JTRS/1(e+=@T8s*"'\s:@4^pY-3<n]$ss=s)BEUOfE,"Z%k>L51Zdu7HBZ+>,8G$j(!d&MfA6'D<Yq8;rk%Qo!NCkgFAr;k%[W3(OLfdQqQhs,jXtg,Jb/?,"7*ub3c'7HIjBMbkX;T[s$MqG8%Jn(?OM.K/]G"9qj)[<K;<4jF_JnSq-N)UIL"\TEH35@/*@5(VX)2p<dCcn_6_g*!Eg09Z81.Ki:1s&H257nRT<.&2]3<iPHRYn<W%18d:4ZU+hs/#%u&PN3\P0nW?ufWr0nR?b_kNH>OtNY8C_P*ob`$_C@VOgg0fd?(?u9OWdL3fQp=)sbNY_3@J$9,bcj9_,5iY0fWa%\*>6pAE#o"3].2j9oKuu)%K8L19St\UZEo$Bc1Kt$O3YLdKO67R0%66^_YsD+"H_WFMlO(<n3pp2Rh1[S?O]jPU)a9M<b_-`Z'nl%(*c.RF%nP;SSF+GW1&F+KrS/-j<C:#)*])ZbX.`_p2'>kEl7*1!u\=RNbhdT`\Ip?,)(.?h'oFQdmV_ALI`C_Fe;'2*mVAKZDo?5%mGcnT2iObG&emc4q6DS-<T;tH<LGlFbj<@W+q/[abeP#PAoT'60P&?`;FU6,</j<Mb%(X*1gtMcL;=98JUB>/(re%<7$sWVge,KD%4n@IW4_>Hdf(oYO0o74[cpD163/X`gn"PAb*,0]t7!U$k7Q/*T[:-(+S?(9Sd,Ds(4KO,[8=WWn$q;rTZQ=up7'm+R7RD7[<2-Lm%;,gS)273k4!X1'>]/jbDKmbD5KFm:6W0jiTk5N9:(b%%:@%f&Lq^*@29M`j)/o0Od!Y%"*gGBVnG'4=p<<B^HC:7U[59in->Xc+!%H&Y3$`i0B(g7n$EE.cNa<E$>4'blWrctuX=VPB$mMZ0t/m03&==J4=S@gu:PjDKK*.rkjod<EO'7gqX[rjPH"&s[4hA?5R+9JEJZ%Um`NZ'eu.ZOb'SdUN+L%_^7G3/-0=\XAfkH+A-8!WH^=gPn^-<l@3IKn./[=T#-:#Q(]mkN:KKU9u;ZB%$b<J5`o1f#&?76o(t0,%Jq4dG%gi[o._7%UkTYq_;Zosn":MGa6.$pm$N4ZUhEX0Z8hXCpN#"g,E(+C#(-!)Tj&@,ua0S0a;;`+m@_#tP9mkV\?D)U;XPgn0%4/&gF/.uN'fcm0n$gFT@QpcVTFPVg`Lf>CTF^baadIr$fRLBR4M%3S=cuA8(";W+h$du6`L/M>Yf[.Pt3`U?E94]3j(i:1D=YshE%9Re>s*[;O[J;2Hr6"-icnP"UE7*o?sMWX]N'MQZSBWqln=O]Y]!ujn)'P&YPQ0%7tQI[`3A=AbC[qkt"8hq>:N@RV'_5:]+RE2[[%$3nO.'iX(s881U6VI9q&PmWdY!69Y!d[$o"*6<EH"2edZQB=3>p^`J,YiYYDK[)E,PV!0.(ENjNBu&go&8,Miim+`9UB\=$%[JU,%^J)sWC*=C*YF4M22,&)&PT`AfZfY)FWe/HD)T+HNL+[ap!`"c1L"Ym3\I`OPo-"q4fm=-W@reOZAsF,l]YotKP\(.f+3TCAE=p_F%BTe)^=j[Vn&>a&B"XXX)@$VRdF"k@=TWZ(t)-(!OW<]9+Z0ajl.BSZY?-6Q+eOZZ`/='\'*_6oC6kZpe-lPaa:s]j36R,O8_OVCl%f'M[8N/1qm!cC0%%mU`)Z"a8l.FqE)(:4[,b5L_**0tReq9Uh>@5S:1*ZBc9%&g4As-k>C5C7>LS'gTCe6p8DT(Sb9:*SFr1)@1M%8L9iYi7-smETU0F^nMHhb+Z$g=n-FV5+&pHTX&dbaW*9%l9a9SpV8?JTHH8KE=N3_b:L"XWQ#9506h&kbIpU\$r_*PaWCasna8E&%B2B#XbKhfb?p!gD0\ic:qV6Q`:P&)03_lb65l4BQ,TV&9@IXBLa!-0d9^>YBU"b/3(`)F.X>H)pQ%,1KOpm2$Y8g*(Q@lR<4QNSH%AR]SF$:l8"4;HM72Am,ETgP2>9aj)6YUE1_:rnhGXGZYj*$OV`d8cL_e'QmfWW]C7Og/pu_]66][4Ja?<NW'!hBR'gj@+F/%g%)6%!21B=SeZ[H#!o:(6b\4"R`ma^;tSPR3a/k-e\XEFeb$X>471,b5o<4?%h+Bfd<m$h.D"Tcd0J-'3"VoLk*-0:WonBB[ilfti5!K!%0Gdq4iXlnmD[sR)/D`hOmYp;VaMr@YC.(]h?jBiPSh*/T9**eWn37p1MG7hrF<IMN*>h7NV7rkSq9ieh"eq#c>T8D/3;I#JK[IYk%j?9QN@:(S?:M&SSS!]7:'JIC>39hI+JN9)Y&9g8SDul<GZYCN06\^@+k91?E]Flb9pHSl)@!*U-0IAjMH-b\4bf.DQe3'+u.T;QQ%#c9Lj7T4Za2U&"V$ZW\pK%.IrB>GEDZ/+o`a`bm^f_]DNnt+Z]0m+V1p"5eqY1i"s)fkB.6(<HY`2<):T/,iB/MLD12#C]TpimrU%5e.G-N+i>lS?B*6JkQU2\cNK22Cuu@850g49W/aId0^R"YV+<<^TM;6LbX:<at?t.Vd_6^-@5mTd.1ktGbWT(or:@qAuc;55*LD4%CD7M)6DDu-G0iOqnh8<f.LTIj$;AELKkg=\3E<HuF-Ig_TF.D`?b-eAhUFnFbgF+)iMosn4)=AB@i&aXq]RH=L`mc.%[,LUSY3,(%Y[Ch>%TQ#QBZ"4hYU!6?6?H7:lp1,P!+A#8Jj`aQ%oIm1g+a:O7gKjmJ@u%)c6Ntr6"F7]0P6)jBr\]t</=LXXC5BLC.f'?1\)7R%oYA83`G>r3DTj)p`J$0EXAkIENHKTBC8lE#dNtsP)molM0529#AUdW!./kgA[b/Hm/jd?^f;Npp_@RKC68"3b*MH")lnoFZq_dXZ%6l8p/kZ1b.,->@[U'C`H3QpQ1@$jV'R,($<=sT9*bMo%%Rj1<Yf[>L^AKTP@kAt3T)^le&0J&qckCT^[&L%M5l\b*7G!b/"JP;c>%_*G@oUqk7aOUeTEd(UG9c6<6Gi=eI#!J2AfNopeNo*im,IQESlMhBEDEZl8+<X_W-=YNL[Yj+F]SJ"K1Oqj4R-rCSN@/K5=Qr)A]%q35Ej;-BZo>IK54Ki9gbeX5)1a;1[f[.@sIR+=VOjpmM8E0iHJXoo7;@>uJYNNnl<[^f)1lE"sObGqSYRW)Pe`i(Cg34_fP6JS?p%_X%AXV6c'G3I'Ua@pIN14L*L+7<.HMSlep*OCYX-2Kn(&mG5[@`RUDjoLT=)CQQ2\"Y4@cMRefl+[ok26@./%-aJ39-4Qgh1.sOk%RahO.+Z<$5@b2<:6r7Y%VJA%X,$h'R>g6ZUEq$&=_?,OhP+Q>aCP?N/4"`4\:VjEN%h</XfF-_CP7mRi<Fh;f)F30Y[kTFmA^+Q6%d(;+Yp9^L0TkY-i2)?I%:h7t.Q+\lQ4]gc.!.i+Q>mNp!YT,St.a,anG$nEhaVlF0#Ze*<Z&Ij/N*fIkX!t<c4qLT6]f<-2_l2%=%3`r&8_d$K2.8KN?0NCDu27PBZ".4g?F>Q(`/<7TV.%aM^Us`1rmXgP*8R6Tap2o0C*1/GT'HURPP3.MHA3Q;o[6AnuG@8_.%`B7B%Kt(5mp6YWT*F'&9eK];]$7f3O^'@G2X//H-SVe"R&,CtLA6uOW.do(KDBP-N`'Ce`\p,lbKY9d.`p2A.d7qIYA!d=']mp,SJ[K6s%3Y)Hp-M=7qOmn'5Ajg,$]Kd3PbGZp%m;jb"(@4(W]MJW'GH.j`-oHb4lCQ.<7CAT<d(X//H9:!N#*BU3+YtuH=$h-R&m=Uu1Q[K:%r+b,*MB1Dk:m+sqJ-Tr5]!B.Y>X%5c4@I!MF/#oEk*5[f@62TE\s15^0N"&s]7W'V61$h:ZWJU2,_LO"lm[WW1$N]p!N^/gXJSa<%$u+t'd>+b3.skYFg#</(#%=C[#BMfX&*B:t0Nh.Z!(KtY0#f;V1i!O9B+FKNh3,=[C:+r6)?NVJ$jom&\6oIR*E\rXm=1HoE@cpB%68QrD%a5rUM@gQ!J&K0IBg`V?34f(/&u"[QZ,TL.csi1QKf`RrI?$Ibf7>r6h1\t:hZZ!&Qa/aE^uf$;10*6o1)n\E<2f0)oc_hQ%+I)6DCKJn\X\V00J[qa8]FQpq.\dROEi.M[o-%5(oflk>MPHfe,S=01hU1>->mEA=Ni'jS8(l=n[QOVkVFh!CC+rXl0ADf3&.Z'p%`sKVW(6t=oYc<D?(Ne2``/p7`<F$7eHHb++fW>9Y9k7?8BGL`a>(QTI#:>h^+*.m?6";>JlE-1C%tmA,9EP`0pF.Ut:(Teb84X!F%N@NU8D^;Lc9eW=)E>,u\l.Bq$LP$pNX1\a:Ca7FUmo+D"_-+)HnPI5Zg%;ThJ6W`A`kK+qH)pO=2kAc6G-$M!'90.0^dEc,Nn=uC%@0HqEd5_c[W\MLmN<>C7arum1`@PZO-?oh(h;f``UlQcV'"dkF"Y6o[<:%)8?jP/a]+W.>R"9#&:`onlW*<[7Oh&&JgbEc'&;-KT%cs!0f7PZ7*+:)!4fO55AGs/$4)<'(`90SD30c:3_$A[4!Ki)&X5=?NDi4VM7p[A50NP#pYWAB4Sq'"dcN*a0#88"8TWH_DV1)f#W%,>qoIA/>PdGl*933)@EV1lXbXC#pOM.l3!*leq/MUtA[0]iaQpi!!j*"C3TqU99:J?m]2)K`I7skU8DY;*5:"_"'m!&Zo.Wh$o#k%?nW;]_e>0%=&n4M/9i,ds*&GdW=?a1n-/fD0>8,%DJIAc[3[g:g-b`;6\S_m:9f`KrFTXfmFp0KKH]%i8ZS8%[F]c&HqZ7#eoqBD%DhI]-`<1rEJRM"/5_9dqh@WUW&qPUL;E;Wl4G)p8>2E&G/FglaQ$;;aPN@];:KC7Oc:R,gh9^u9.Sll+O,CkG60>d"jW@dC6c^p(%?74L?)<JhZM6Nir_]\/6+i1)oA.7+`fZ^@\5Dr7G$t@etMlW*f+WWp->#<1h)*#[dM^cBYd(>+'\ootq@DNZkO&<R<ED(;^`]A4@%4k8RA+#7<2AqMhI2Ft;I;O/euEZ'%2PZ9TuTi5g_%4QB_^7T!%J:Urt3/LrqXiB\?+X%h&V&5Gq$4c3rVDWImofXTfRMrgV-+9A5%o'8uC]oVaZ9XBU)).tL!2QRXTPUN[&GA:sO%j+7cEd<tZSu:h:br6/gU8m()0tbiMpJ707E>d>(%atQW8bg"!;N>g#riU;jQ`o]a%aF-Z!?<*oTF7BdLctCl~>%AI9_PrivateDataEnd